{"version":3,"sources":["configs/index.js","helper/index.js","components/Code.js","components/Table.js","components/Doc.js","components/Footer.js","components/Navigation.js","pages/banks/Banks.js","services/index.js","services/apis.js","pages/banks/Forex.js","graphql/index.js","pages/banks/History.js","pages/banks/List.js","pages/calendar/Calendar.js","pages/calendar/Converter.js","pages/docs/Docs.js","pages/ethnic-minorities/EthnicMinorities.js","pages/finance/Finance.js","pages/finance/Companies.js","pages/finance/Highlights.js","pages/finance/History.js","pages/finance/Potentials.js","pages/finance/Profit.js","pages/government/Government.js","pages/government/GeneralSecretaries.js","pages/government/Ministers.js","pages/government/Ministries.js","pages/government/national-assembly/Chairs.js","pages/government/national-assembly/Members.js","pages/government/Presidents.js","pages/government/PrimeMinisters.js","pages/Home.js","pages/license-plates/LicensePlates.js","pages/maps/Maps.js","pages/maps/Districts.js","pages/maps/PostalCodes.js","pages/maps/Provinces.js","pages/maps/Wards.js","pages/news/News.js","pages/news/Feed.js","pages/news/Sources.js","pages/news/Trends.js","pages/phones/Phones.js","pages/sports/Sports.js","pages/sports/Clubs.js","pages/technologies/Technologies.js","pages/technologies/GiaoHangNhanh.js","pages/technologies/APIs.js","pages/technologies/Vietcetera.js","routers/index.js","App.js","reportWebVitals.js","index.js"],"names":["baseAPI","baseGraphQL","periods","label","value","months","name","short","endpoints","banks","getForexBanks","url","method","query","body","getForexRates","syncForexRates","required","type","description","calendar","convertLunarToSolar","convertSolarToLunar","getCanChi","ethnicMinorities","getEthnicMinorities","finance","getStockCompanies","getStockHistory","getStockHighlights","getStockPotentials","calculateProfit","government","getGeneralSecretaries","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","getMinistries","getMinisters","licensePlates","getLicensePlates","maps","getPostalCodes","getProvinces","getDistricts","getWards","news","getArticles","getTrends","getSources","getCategories","phones","getPhonesProviders","sports","getSportsClubs","technologies","getTechnologies","getGHNProvinces","capitalize","s","charAt","toUpperCase","slice","addZero","x","toString","numberFormatter","replace","processPeriod","period","now","Date","oneDay","oneWeek","unit","includes","from","parseInt","to","deepClone","o","JSON","parse","stringify","Code","this","props","path","api","id","className","onClick","text","navigator","clipboard","writeText","then","alert","catch","err","Component","Table","loading","caption","rows","rowConfigs","Spinner","animation","variant","length","map","config","headerIndex","header","row","rowIndex","cellIndex","key","Doc","renderCards","bind","list","endpoint","cardIndex","Card","Body","Title","group","Object","values","Footer","year","getFullYear","href","target","rel","Navigation","state","routes","Navbar","bg","expand","Brand","Nav","NavDropdown","title","filter","route","navigation","index","Item","pathname","Banks","apis","keys","join","queryString","buildQueryString","input","options","headers","Promise","resolve","fetch","res","json","error","console","no","ministry","trends","encodeURI","category","source","articles","buy","sell","volume","symbol","response","data","currencies","currency","bank","status","canChi","BanksForex","sortBy","sortDir","getBanksForexRates","sort","setState","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","Form","Group","Control","as","defaultValue","item","time","graphql","fallback","result","graphGet","fields","fieldsString","params","_key","__value","paramsString","find","prefix","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","rates","rate","code","labels","month","date","hour","minute","datasets","buyData","transferData","sellData","lines","assign","BanksList","renderTable","message","forex","Button","Calendar","CalendarConverter","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","getDate","yyyy","mm","dd","event","split","controlId","Label","placeholder","pattern","onChange","Docs","groups","EthnicMinorities","filterEthnicMinorities","ethnicMinority","type_en","typeFlag","toLowerCase","typeEnFlag","Finance","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","highlight","startDate","industry","subsector","low","latest","latestDate","min","minDate","max","maxDate","diff","diffToMin","diffToMax","median","average","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","history","i","close","_labels","timestamp","concat","array","indexOf","class","FinancePotentials","potentials","potential","FinanceProfit","profit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","Government","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","Home","npm","docs","filterAPIs","filterPackages","updateQuery","externalPackages","filterExternalPackages","packages","_package","LicensePlates","filterLicensePlates","licensePlate","license","Maps","MapsDistricts","districts","postalCodes","MapsProvinces","provinces","getMapsProvinces","MapsWards","wards","News","NewsFeed","categories","sources","updateCategory","updateSource","ListGroup","article","dateTimeString","Subtitle","Text","NewsSources","Badge","NewsTrends","getGoogleTrends","trend","Phones","providers","provider","_provider","prefixes","Sports","SportsClubs","clubs","Technologies","GiaoHangNhanh","APIs","filterTechnologies","technology","nameFlag","vietcetera","VietceteraClient","component","MapsPostalCodes","processArticles","basicArticles","slug","language","publishDate","excerpt","option","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9a8bba5.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\nexport const periods = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport const endpoints = {\n  banks: {\n    getForexBanks: {\n      name: 'Get Forex Banks',\n      url: `${baseAPI}/banks/forex/banks`,\n      method: 'GET',\n      query: [],\n      body: []\n    },\n    getForexRates: {\n      name: 'Get Forex Rates',\n      method: 'GET',\n      url: `${baseAPI}/banks/forex/rates`,\n      query: [],\n      body: []\n    },\n    syncForexRates: {\n      name: 'Sync Forex Rates',\n      method: 'POST',\n      url: `${baseAPI}/banks/forex/sync`,\n      query: [],\n      body: [{ name: 'id', required: true, type: 'string', description: '' }]\n    }\n  },\n  calendar: {\n    convertLunarToSolar: {\n      name: 'Convert Lunar Date to Solar Date',\n      method: 'POST',\n      url: `${baseAPI}/calendar/lunar2solar`,\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    convertSolarToLunar: {\n      name: 'Convert Solar Date to Lunar Date',\n      method: 'POST',\n      url: `${baseAPI}/calendar/solar2lunar`,\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    getCanChi: {\n      name: 'Get Can Chi of Lunar Date',\n      method: 'POST',\n      url: `${baseAPI}/calendar/lunar/can-chi`,\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    }\n  },\n  ethnicMinorities: {\n    getEthnicMinorities: {\n      name: 'Get Ethnic Minorities',\n      method: 'GET',\n      url: `${baseAPI}/ethnic-minorities`,\n      query: [],\n      body: []\n    }\n  },\n  finance: {\n    getStockCompanies: {\n      name: 'Get Listed Companies',\n      method: 'GET',\n      url: `${baseAPI}/finance/companies`,\n      query: [],\n      body: []\n    },\n    getStockHistory: {\n      name: 'Get Stock History',\n      method: 'POST',\n      url: `${baseAPI}/finance/history`,\n      query: [],\n      body: [\n        { name: 'symbol', type: 'string', required: true, description: '' },\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    getStockHighlights: {\n      name: 'Get Stock Highlights',\n      method: 'POST',\n      url: `${baseAPI}/finance/highlights`,\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    getStockPotentials: {\n      name: 'Get Stock Potentials',\n      method: 'POST',\n      url: `${baseAPI}/finance/potentials`,\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    calculateProfit: {\n      name: 'Calculate Profit',\n      method: 'POST',\n      url: `${baseAPI}/finance/profit`,\n      query: [],\n      body: [\n        { name: 'buy', type: 'number', required: true, description: '' },\n        { name: 'sell', type: 'number', required: true, description: '' },\n        { name: 'volume', type: 'number', required: true, description: '' }\n      ]\n    }\n  },\n  government: {\n    getGeneralSecretaries: {\n      name: 'Get General Secretaries',\n      method: 'GET',\n      url: `${baseAPI}/government/general-secretaries`,\n      query: [],\n      body: []\n    },\n    getPresidents: {\n      name: 'Get Presidents',\n      method: 'GET',\n      url: `${baseAPI}/government/presidents`,\n      query: [],\n      body: []\n    },\n    getPrimeMinisters: {\n      name: 'Get Prime Ministers',\n      method: 'GET',\n      url: `${baseAPI}/government/prime-ministers`,\n      query: [],\n      body: []\n    },\n    getNationalAssemblyChairs: {\n      name: 'Get National Assembly Chairs',\n      method: 'GET',\n      url: `${baseAPI}/government/national-assembly/chairs`,\n      query: [],\n      body: []\n    },\n    getNationalAssemblyMembers: {\n      name: 'Get National Assembly Members',\n      method: 'GET',\n      url: `${baseAPI}/government/national-assembly/members`,\n      query: [{ name: 'no', type: 'number', required: true, description: '' }],\n      body: []\n    },\n    getMinistries: {\n      name: 'Get Ministries',\n      method: 'GET',\n      url: `${baseAPI}/government/ministries`,\n      query: [],\n      body: []\n    },\n    getMinisters: {\n      name: 'Get Ministers',\n      method: 'GET',\n      url: `${baseAPI}/government/ministers`,\n      query: [],\n      body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n    }\n  },\n  licensePlates: {\n    getLicensePlates: {\n      name: 'Get License Plates',\n      method: 'GET',\n      url: `${baseAPI}/license-plates`,\n      query: [],\n      body: []\n    }\n  },\n  maps: {\n    getPostalCodes: {\n      name: 'Get Postal Codes',\n      method: 'GET',\n      url: `${baseAPI}/maps/postal-codes`,\n      query: [],\n      body: []\n    },\n    getProvinces: {\n      name: 'Get Provinces',\n      method: 'GET',\n      url: `${baseAPI}/maps/provinces`,\n      query: [],\n      body: []\n    },\n    getDistricts: {\n      name: 'Get Districts',\n      method: 'GET',\n      url: `${baseAPI}/maps/districts`,\n      query: [],\n      body: []\n    },\n    getWards: {\n      name: 'Get Wards',\n      method: 'GET',\n      url: `${baseAPI}/maps/wards`,\n      query: [],\n      body: []\n    }\n  },\n  news: {\n    getArticles: {\n      name: 'Get Articles',\n      method: 'GET',\n      url: `${baseAPI}/news`,\n      query: [\n        { name: 'category', type: 'string', required: true, description: '' },\n        { name: 'source', type: 'string', required: true, description: '' }\n      ],\n      body: []\n    },\n    getTrends: {\n      name: 'Get (Google) Trends',\n      method: 'GET',\n      url: `${baseAPI}/news/trends`,\n      query: [],\n      body: []\n    },\n    getSources: {\n      name: 'Get Sources',\n      method: 'GET',\n      url: `${baseAPI}/news/sources`,\n      query: [],\n      body: []\n    },\n    getCategories: {\n      name: 'Get Categories',\n      method: 'GET',\n      url: `${baseAPI}/news/categories`,\n      query: [],\n      body: []\n    }\n  },\n  phones: {\n    getPhonesProviders: {\n      name: 'Get Phone Providers',\n      method: 'GET',\n      url: `${baseAPI}/phones/providers`,\n      query: [],\n      body: []\n    }\n  },\n  sports: {\n    getSportsClubs: {\n      name: 'Get Sports Clubs',\n      method: 'GET',\n      url: `${baseAPI}/sports/clubs`,\n      query: [],\n      body: []\n    }\n  },\n  technologies: {\n    getTechnologies: {\n      name: 'Get Public APIs',\n      method: 'GET',\n      url: `${baseAPI}/technologies`,\n      query: [],\n      body: []\n    },\n    getGHNProvinces: {\n      name: 'giaohangnhanh - Get Provinces',\n      method: 'GET',\n      url: `${baseAPI}/technologies/giaohangnhanh/provinces`,\n      query: [],\n      body: []\n    }\n  }\n};\n","export const capitalize = (s = '') => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const addZero = (x = 0) => {\n  return x > 9 ? x.toString() : `0${x}`;\n};\n\nexport const numberFormatter = (x = 0) => {\n  return x\n    .toString()\n    .replace(/,/g, '')\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const processPeriod = period => {\n  const now = Date.now();\n  const oneDay = 1000 * 60 * 60 * 24;\n  const oneYear = oneDay * 365;\n  const oneMonth = oneDay * 30;\n  const oneWeek = oneDay * 7;\n  let unit = oneWeek;\n  if (period.includes('Y')) {\n    unit = oneYear;\n  } else if (period.includes('M')) {\n    unit = oneMonth;\n  } else if (period.includes('W')) {\n    unit = oneWeek;\n  }\n\n  const time = parseInt(period[0]) || 2;\n  const from = now - unit * time;\n\n  return { from, to: now };\n};\n\nexport const deepClone = (o = {}) => {\n  return JSON.parse(JSON.stringify(o));\n};\n\nexport const copyToClipboard = text => {\n  navigator.clipboard\n    .writeText(text)\n    .then(() => {\n      alert('Text copied to clipboard');\n    })\n    .catch(err => {\n      alert('Error in copying text: ', err);\n    });\n};\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { copyToClipboard } from '../helper';\n\nexport default class Code extends Component {\n  render() {\n    const { method, url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"Code\" className=\"bg-dark text-white p-3 rounded\">\n        <span className=\"text-uppercase mr-3\">{method}</span>\n        <span\n          className=\"cursor-pointer\"\n          onClick={() => {\n            copyToClipboard(api);\n          }}>\n          {api}\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nexport default class Table extends Component {\n  render() {\n    const { loading = true, caption = '', rows = [], rowConfigs = [] } = this.props;\n\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length && rowConfigs.length && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                {caption} ({rows.length})\n              </caption>\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key } = config;\n                          return <td key={cellIndex}>{(row[key] || '').toString()}</td>;\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport Code from './Code';\nimport Table from './Table';\n\nexport default class Doc extends Component {\n  constructor() {\n    super();\n\n    this.renderCards = this.renderCards.bind(this);\n  }\n\n  renderCards(list) {\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div>\n        {list.map((endpoint, cardIndex) => {\n          const { name, method, url, query = [], body = [] } = endpoint;\n          return (\n            <Card className=\"shadow mb-3\" key={cardIndex}>\n              <Card.Body>\n                <Card.Title className=\"text-center\">{name}</Card.Title>\n                <div className=\"mb-3\">\n                  <Code method={method} url={url}></Code>\n                </div>\n                {query.length > 0 && (\n                  <Table\n                    loading={false}\n                    caption={'Request Query'}\n                    rows={query}\n                    rowConfigs={rowConfigs}></Table>\n                )}\n                {body.length > 0 && (\n                  <Table\n                    loading={false}\n                    caption={'Request Body'}\n                    rows={body}\n                    rowConfigs={rowConfigs}></Table>\n                )}\n              </Card.Body>\n            </Card>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\" className=\"mt-3\">\n        <h2 className=\"text-center mb-3\">{header}</h2>\n        {list.length > 0 && this.renderCards(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nimport routes from '../routers';\n\nexport default class Navigation extends Component {\n  constructor() {\n    super();\n\n    this.state = { routes };\n  }\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" className=\"shadow fixed-top\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"ml-auto\">\n              <NavDropdown title=\"APIs\" className=\"text-white\" id=\"apis-nav-dropdown\">\n                {routes\n                  .filter(route => route.navigation)\n                  .map((route, index) => {\n                    const { path, text } = route;\n                    return (\n                      <NavDropdown.Item key={index}>\n                        <Link to={{ pathname: path }}>{text}</Link>\n                      </NavDropdown.Item>\n                    );\n                  })}\n              </NavDropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <Doc group={'banks'} header={'Banks'}></Doc>\n      </div>\n    );\n  }\n}\n","import APIS from './apis';\n\nconst apis = new APIS();\n\nexport { apis };\n","import { endpoints } from '../configs';\n\nexport default class APIS {\n  buildQueryString(query = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  fetch(endpoint, query = {}, body = {}) {\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  async getGeneralSecretaries() {\n    const endpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  async getPresidents() {\n    const endpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  async getPrimeMinisters() {\n    const endpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  async getNationalAssemblyChairs() {\n    const endpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  async getNationalAssemblyMembers(no) {\n    const endpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { no });\n  }\n\n  async getMinistries() {\n    const endpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  async getMinisters(ministry) {\n    const endpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { ministry });\n  }\n\n  async getGoogleTrends() {\n    const endpoint = endpoints.news.getTrends;\n    const trends = await this.fetch(endpoint);\n    return trends.map(text => {\n      const url = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  async getSources() {\n    const endpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  async getCategories() {\n    const endpoint = endpoints.news.getCategories;\n    return await this.fetch(endpoint);\n  }\n\n  async getArticles(options = {}) {\n    const { category, source } = options;\n    const endpoint = endpoints.news.getArticles;\n    const { articles = [] } = (await this.fetch(endpoint, { category, source })) || {};\n    return articles;\n  }\n\n  async calculateProfit(buy, sell, volume) {\n    const endpoint = endpoints.finance.calculateProfit;\n    return await this.fetch(endpoint, {}, { buy, sell, volume });\n  }\n\n  async getStockHighlights(from, to) {\n    const endpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, {}, { from, to });\n  }\n\n  async getStockPotentials(from, to) {\n    const endpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, {}, { from, to });\n  }\n\n  async getStockCompanies() {\n    const endpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  async getStockHistory(symbol, from, to) {\n    const endpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, {}, { symbol, from, to });\n  }\n\n  async getBanksForexRates() {\n    const endpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  async getForexBanks() {\n    const endpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  async syncForexRates(id) {\n    const endpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, {}, { id });\n    return status;\n  }\n\n  async getPostalCodes() {\n    const endpoint = endpoints.maps.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  async getDistricts() {\n    const endpoint = endpoints.maps.getDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  async getMapsProvinces() {\n    const endpoint = endpoints.maps.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  async getWards() {\n    const endpoint = endpoints.maps.getWards;\n    return await this.fetch(endpoint);\n  }\n\n  async getSportsClubs() {\n    const endpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  async getLicensePlates() {\n    const endpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  async getEthnicMinorities() {\n    const endpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  async getTechnologies() {\n    const endpoint = endpoints.technologies.getTechnologies;\n    return await this.fetch(endpoint);\n  }\n\n  async getPhonesProviders() {\n    const endpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  async getGHNProvinces() {\n    const endpoint = endpoints.technologies.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  async convertLunarToSolar(body = {}) {\n    const endpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, {}, body);\n  }\n\n  async convertSolarToLunar(body = {}) {\n    const endpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, {}, body);\n  }\n\n  async getCanChi(body = {}) {\n    const endpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, {}, body);\n    return canChi;\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class BanksForex extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    this.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && (\n              <Form>\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.value}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency.toUpperCase()}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n            )}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                          Buy\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                          Transfer\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                          Sell\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const { bank = '', time = '', buy = {}, transfer = {}, sell = {} } = item;\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buy[currency] || ''}</td>\n                              <td>{transfer[currency] || ''}</td>\n                              <td>{sell[currency] || ''}</td>\n                              <td>{time}</td>\n                            </tr>\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nconst graphql = async (key = '', query = '', fallback = {}) => {\n  const body = { query };\n  const url = `${baseGraphQL}`;\n  return new Promise(resolve => {\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        const { data = {} } = res;\n        const result = data[key] || fallback;\n        resolve(result);\n      })\n      .catch(error => {\n        console.error(error);\n        resolve({});\n      });\n  });\n};\n\nconst graphGet = async (key = '', fields = [], options = {}) => {\n  const fieldsString = fields.join(' ');\n  const params = Object.keys(options)\n    .map(key => {\n      let value = options[key];\n      if (key === 'filter') {\n        const filterKeys = Object.keys(options[key]);\n        value = filterKeys.map(_key => {\n          const __value =\n            typeof options[key][_key] === 'string' ? `\"${options[key][_key]}\"` : options[key][_key];\n          return `${_key}: ${__value}`;\n        });\n        value = `{${value}}`;\n      }\n      return `${key}: ${value}`;\n    })\n    .join(',');\n  const paramsString = params ? `(${params})` : '';\n  const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n  const fallback = [];\n  const list = await graphql(key, query, fallback);\n  return list;\n};\n\nconst graphPost = async (key = '', body = {}, fields = []) => {\n  const newRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n    })\n    .join(' ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${newRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphPut = async (key = '', body = {}, fields = []) => {\n  const updatedRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      if (valueType === 'string') return `${key}: \"${value}\"`;\n      return `${key}: ${value}`;\n    })\n    .join(', ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${updatedRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphDelete = async (key = '', id = '', fields = []) => {\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n/**\n * GraphQL Functions\n */\nexport const count = async (prefix = '') => {\n  const key = `${prefix}Count`;\n  const query = `query { ${key} }`;\n  const fallback = 0;\n  const count = await graphql(key, query, fallback);\n  return count;\n};\n\nexport const find = async (prefix = '', fields = [], options = {}) => {\n  const key = `${prefix}Many`;\n  const list = await graphGet(key, fields, options);\n  return list;\n};\n\nexport const add = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}CreateOne`;\n  const item = await graphPost(key, body, fields);\n  return item;\n};\n\nexport const updateById = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}UpdateById`;\n  const item = await graphPut(key, body, fields);\n  return item;\n};\n\nexport const removeById = async (prefix = '', id = '', fields = []) => {\n  const key = `${prefix}RemoveById`;\n  const item = await graphDelete(key, id, fields);\n  return item;\n};\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis } from '../../services';\nimport { find } from '../../graphql';\nimport { deepClone } from '../../helper';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nexport default class BanksHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [] };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map(rate => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map(item => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data, currency) {\n    const rates = data.map(item => {\n      const { rates } = item;\n      const rate = rates.find(rate => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map(rate => rate.buy);\n    const transferData = rates.map(rate => rate.transfer);\n    const sellData = rates.map(rate => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.value}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank.name}>\n                          {bank.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.value}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class BanksList extends Component {\n  constructor() {\n    super();\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id) {\n    const message = await apis.syncForexRates();\n    alert(message);\n  }\n\n  renderTable(loading, banks = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Forex</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', forex = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>{name}</td>\n                          <td>\n                            <a href={forex} target=\"_blank\" rel=\"noreferrer\">\n                              Forex\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <Doc group={'calendar'} header={'Calendar'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../configs';\nimport { addZero, capitalize } from '../../helper';\nimport { apis } from '../../services';\n\nexport default class CalendarConverter extends Component {\n  constructor() {\n    super();\n\n    this.state = { solarDate: '', solarString: '', lunarDate: '', lunarString: '' };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = addZero(d.getMonth() + 1);\n    const date = addZero(d.getDate());\n    const solarDate = `${year}-${month}-${date}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar({\n      year,\n      month,\n      date\n    });\n    const lunarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year, month, date) {\n    return `${capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year, month, date) {\n    return await apis.getCanChi({ year, month, date });\n  }\n\n  async updateSolarDate(event) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar({\n      year,\n      month,\n      date\n    });\n    const lunarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar({\n      year,\n      month,\n      date\n    });\n    const solarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { capitalize } from '../../helper';\nimport { endpoints } from '../../configs';\nimport { Doc } from '../../components';\n\nexport default class Docs extends Component {\n  constructor() {\n    super();\n\n    this.state = { endpoints };\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        {groups.length > 0 &&\n          groups.map((group, index) => {\n            return <Doc key={index} group={group} header={capitalize(group)}></Doc>;\n          })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Doc, Table } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', ethnicMinorities: [], filterEthnicMinorities: [], loading: true };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <Doc group={'ethnicMinorities'} header={'Ethnic Minorities'}></Doc>\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.value}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <Doc group={'finance'} header={'Finance'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class FinanceCompanies extends Component {\n  constructor() {\n    super();\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { apis } from '../../services';\nimport { processPeriod } from '../../helper';\n\nexport default class FinanceHighlights extends Component {\n  constructor() {\n    super();\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0 };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading, highlights = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.value}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../configs';\nimport { addZero, processPeriod, deepClone } from '../../helper';\nimport { apis } from '../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nexport default class FinanceHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, data: [], symbols: [], symbol: '', from: 0, to: 0 };\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map(company => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels, historyData) {\n    const datasets = historyData.map(item => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find(i => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map(item => {\n      const { label = '', data = [] } = item;\n\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data) {\n    let labels = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels = history.map(value => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = addZero(d.getFullYear());\n        const month = addZero(d.getMonth() + 1);\n        const date = addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.value}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.value}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { processPeriod } from '../../helper';\nimport { apis } from '../../services';\n\nexport default class FinancePotentials extends Component {\n  constructor() {\n    super();\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0 };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading, potentials = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.value}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { numberFormatter } from '../../helper';\n\nexport default class FinanceProfit extends Component {\n  constructor() {\n    super();\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div className=\"FinanceProfit\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Form onSubmit={this.calculateProfit} className=\"row\">\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Buy\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateBuy}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Sell\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateSell}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Volume\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateVolume}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                    Calculate\n                  </Button>\n                </div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(buy * volume)}</div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(sell * volume)}</div>\n                <div className=\"col-sm-3\"></div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(profit)}</div>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <Doc group={'government'} header={'Government'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Code, Table } from '../../components';\n\nexport default class GovernmentGeneralSecretaries extends Component {\n  constructor() {\n    super();\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <div className=\"mb-3\">\n              <Code method={'GET'} path={`government/general-secretaries`}></Code>\n            </div>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentMinistries extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\nimport { Table } from '../../../components';\n\nexport default class GovernmentNationalAssemblyChairs extends Component {\n  constructor() {\n    super();\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\nimport { Table } from '../../../components';\n\nexport default class GovernmentNationalAssemblyMembers extends Component {\n  constructor() {\n    super();\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentPresidents extends Component {\n  constructor() {\n    super();\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentPrimeMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#lunar-calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: 'vnapis#maps',\n        docs: '/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = { query: '', apis, filterAPIs: apis };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages = [], query = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title, packages = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container h-60vh\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"w-100 mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.value}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Doc, Table } from '../../components';\n\nexport default class LicensePlates extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <Doc group={'licensePlates'} header={'License Plates'}></Doc>\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.value}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"Maps\" className=\"container\">\n        <Doc group={'maps'} header={'Maps'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class MapsDistricts extends Component {\n  constructor() {\n    super();\n\n    this.state = { districts: [], loading: true };\n\n    this.getDistricts = this.getDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getDistricts();\n  }\n\n  async getDistricts() {\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts();\n    await this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class MapsDistricts extends Component {\n  constructor() {\n    super();\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class MapsProvinces extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n  }\n\n  async getMapsProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getMapsProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class MapsWards extends Component {\n  constructor() {\n    super();\n\n    this.state = { wards: [], loading: true };\n\n    this.getWards = this.getWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWards();\n  }\n\n  async getWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Wards ({wards.length})</Card.Title>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <Doc group={'news'} header={'News'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { capitalize } from '../../helper';\n\nexport default class NewsFeed extends Component {\n  constructor() {\n    super();\n\n    this.state = { category: '', categories: [], source: '', sources: [], articles: [] };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.value}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.value}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class NewsSources extends Component {\n  constructor() {\n    super();\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading, sources = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category, index) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class NewsTrends extends Component {\n  constructor() {\n    super();\n    this.state = { trends: [] };\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Doc } from '../../components';\n\nexport default class Phones extends Component {\n  constructor() {\n    super();\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading, providers = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <Doc group={'phones'} header={'Phones'}></Doc>\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <Doc group={'sports'} header={'Sports'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Code, Table } from '../../components';\nimport { apis } from '../../services';\n\nexport default class SportsClubs extends Component {\n  constructor() {\n    super();\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <div className=\"mb-3\">\n              <Code method={'GET'} path={`sports/clubs`}></Code>\n            </div>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\" className=\"container\">\n        <Doc group={'technologies'} header={'Technologies'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GiaoHangNhanh extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"GiaoHangNhanh\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">Giao Hang Nhanh</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Code } from '../../components';\n\nexport default class APIs extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading, filterTechnologies = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"APIs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <div className=\"mb-3\">\n              <Code method={'GET'} path={`technologies`}></Code>\n            </div>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.value}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\nimport VietceteraClient from 'vietcetera';\n\nconst vietcetera = new VietceteraClient();\n\nexport default class Vietcetera extends Component {\n  constructor() {\n    super();\n    this.state = { articles: [], loading: false };\n    this.getArticles = this.getArticles.bind(this);\n    this.processArticles = this.processArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    this.setState({ articles });\n  }\n\n  processArticles(articles = []) {\n    return articles.map((article = {}) => {\n      const { title = '', slug = '', language = '', publishDate = '', excerpt = '' } = article;\n      const url =\n        language && slug ? `https://vietcetera.com/${language.toLowerCase()}/${slug}` : '';\n      const description = excerpt.replace('<p>', '').replace('</p>', '');\n      return { title, url, publishDate, description };\n    });\n  }\n\n  async getArticles(event) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  // Maps\n  Maps,\n  MapsPostalCodes,\n  MapsProvinces,\n  MapsDistricts,\n  MapsWards,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Phones\n  Phones,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Technologies\n  Technologies,\n  APIs,\n  GiaoHangNhanh,\n  Vietcetera\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'maps',\n    text: 'Maps',\n    component: Maps,\n    navigation: true\n  },\n  {\n    path: 'maps-postal-codes',\n    text: 'Maps Postal Codes',\n    component: MapsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'maps-provinces',\n    text: 'Maps Provinces',\n    component: MapsProvinces,\n    navigation: false\n  },\n  {\n    path: 'maps-districts',\n    text: 'Maps Districts',\n    component: MapsDistricts,\n    navigation: false\n  },\n  {\n    path: 'maps-wards',\n    text: 'Maps Wards',\n    component: MapsWards,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies,\n    navigation: true\n  },\n  {\n    path: 'technologies-apis',\n    text: 'Technologies APIs',\n    component: APIs,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn',\n    text: 'Technologies GHN',\n    component: GiaoHangNhanh,\n    navigation: false\n  },\n  {\n    path: 'technologies-vietcetera',\n    text: 'Technologies Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <div className=\"pt-5 pb-5\">\n          <div className=\"pt-3 pb-3\">\n            <HashRouter basename=\"/\">\n              <Navigation></Navigation>\n              {routes.map((route, index) => {\n                const { path, component } = route;\n                return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n              })}\n              <Footer></Footer>\n            </HashRouter>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}