{"version":3,"sources":["configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/index.ts","pages/demo/banks/Forex.tsx","pages/demo/banks/History.tsx","pages/demo/banks/List.tsx","pages/demo/calendar/Converter.tsx","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","components/Navigation.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/LicensePlates.tsx","pages/docs/Maps.tsx","pages/docs/News.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Technologies.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/maps/Districts.tsx","pages/demo/maps/PostalCodes.tsx","pages/demo/maps/Provinces.tsx","pages/demo/maps/Wards.tsx","pages/demo/news/Feed.tsx","routers/index.ts","pages/demo/news/Sources.tsx","pages/demo/news/Trends.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/sports/Clubs.tsx","pages/demo/technologies/APIs.tsx","pages/demo/technologies/GiaoHangNhanh.tsx","pages/demo/technologies/Vietcetera.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","periods","label","value","months","name","short","endpoints","banks","getForexBanks","id","path","url","demo","method","request","headers","key","query","body","response","200","schema","type","description","example","400","message","getForexRates","syncForexRates","required","calendar","convertLunarToSolar","convertSolarToLunar","getCanChi","ethnicMinorities","getEthnicMinorities","finance","getStockCompanies","getStockHistory","getStockHighlights","getStockPotentials","calculateProfit","government","getGeneralSecretaries","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","getMinistries","getMinisters","licensePlates","getLicensePlates","maps","getMapsPostalCodes","getMapsProvinces","getMapsDistricts","getMapsWards","news","getArticles","getTrends","getSources","getCategories","phones","getPhonesPrefixes","getPhonesProviders","sports","getSportsClubs","technologies","getTechnologies","getGHNProvinces","getVietceteraArticles","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","no","ministry","trends","text","encodeURI","category","source","articles","buy","sell","volume","profit","from","to","symbol","data","currencies","currency","bank","status","province_id","year","month","date","canChi","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","prefix","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","apis","helper","BanksForex","props","state","loading","sortBy","sortDir","getBanksForexRates","bind","sort","setState","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","className","Card","Body","Spinner","animation","variant","Form","Group","Control","as","defaultValue","index","onClick","time","Component","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","find","rates","rate","code","labels","hour","minute","datasets","buyData","transferData","sellData","lines","deepClone","assign","Title","BanksList","renderTable","href","target","rel","Button","CalendarConverter","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getFullYear","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","capitalize","event","split","controlId","Label","placeholder","pattern","onChange","API","api","copyToClipboard","CURL","buildDataRaw","trim","dataRaw","header","lastFlag","Table","caption","rows","rowConfigs","emptyRowsText","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","renderAPIs","renderRequest","renderResponses","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","title","cardIndex","group","values","Footer","Navigation","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","route","navigation","Banks","Calendar","Docs","renderSidebar","scrollTo","targetID","log","colors","get","post","color","toLowerCase","groups","EthnicMinorities","Finance","Government","LicensePlates","Maps","News","Phones","Sports","Technologies","EthnicMinoritiesList","filterEthnicMinorities","ethnicMinority","type_en","typeFlag","typeEnFlag","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","processPeriod","highlight","startDate","industry","subsector","low","latest","latestDate","min","minDate","max","maxDate","diff","diffToMin","diffToMax","median","average","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","history","i","close","_labels","timestamp","concat","array","indexOf","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","Home","npm","docs","filterAPIs","externalPackages","filterExternalPackages","filterPackages","updateQuery","packages","_package","LicensePlatesList","filterLicensePlates","licensePlate","license","MapsDistricts","provinces","districts","updateProvince","province","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","wards","NewsFeed","categories","sources","updateCategory","updateSource","ListGroup","article","dateTimeString","Subtitle","Text","component","Badge","getGoogleTrends","trend","prefixes","providers","provider","_provider","clubs","filterTechnologies","technology","nameFlag","option","publishDate","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d705f49b.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\ninterface IPeriod {\n  label: string;\n  value: string;\n}\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\ninterface IMonth {\n  name: string;\n  short: string;\n}\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'maps'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport interface IEndpoints {\n  banks: IBanksEndpoints;\n  calendar: ICalendarEndpoints;\n  ethnicMinorities: IEthnicMinoritiesEndpoints;\n  finance: IFinanceEndpoints;\n  government: IGovernmentEndpoints;\n  licensePlates: ILicensePlatesEndpoints;\n  maps: IMapsEndpoints;\n  news: INewsEndpoints;\n  phones: IPhonesEndpoints;\n  sports: ISportsEndpoints;\n  technologies: ITechnologiesEndpoints;\n}\n\ninterface IBanksEndpoints {\n  getForexBanks: IEndpoint;\n  getForexRates: IEndpoint;\n  syncForexRates: IEndpoint;\n}\ninterface ICalendarEndpoints {\n  convertLunarToSolar: IEndpoint;\n  convertSolarToLunar: IEndpoint;\n  getCanChi: IEndpoint;\n}\ninterface IEthnicMinoritiesEndpoints {\n  getEthnicMinorities: IEndpoint;\n}\ninterface IFinanceEndpoints {\n  getStockCompanies: IEndpoint;\n  getStockHistory: IEndpoint;\n  getStockHighlights: IEndpoint;\n  getStockPotentials: IEndpoint;\n  calculateProfit: IEndpoint;\n}\ninterface IGovernmentEndpoints {\n  getGeneralSecretaries: IEndpoint;\n  getPresidents: IEndpoint;\n  getPrimeMinisters: IEndpoint;\n  getNationalAssemblyChairs: IEndpoint;\n  getNationalAssemblyMembers: IEndpoint;\n  getMinistries: IEndpoint;\n  getMinisters: IEndpoint;\n}\ninterface ILicensePlatesEndpoints {\n  getLicensePlates: IEndpoint;\n}\ninterface IMapsEndpoints {\n  getMapsPostalCodes: IEndpoint;\n  getMapsProvinces: IEndpoint;\n  getMapsDistricts: IEndpoint;\n  getMapsWards: IEndpoint;\n}\ninterface INewsEndpoints {\n  getArticles: IEndpoint;\n  getTrends: IEndpoint;\n  getSources: IEndpoint;\n  getCategories: IEndpoint;\n}\ninterface IPhonesEndpoints {\n  getPhonesPrefixes: IEndpoint;\n  getPhonesProviders: IEndpoint;\n}\ninterface ISportsEndpoints {\n  getSportsClubs: IEndpoint;\n}\ninterface ITechnologiesEndpoints {\n  getTechnologies: IEndpoint;\n  getGHNProvinces: IEndpoint;\n  getVietceteraArticles: IEndpoint;\n}\n\nexport interface IEndpoint {\n  id: string;\n  name: string;\n  path: string;\n  url: string;\n  demo: string;\n  method: string;\n  request: IEndpointRequest;\n  response: IEndpointResponse;\n}\n\nexport interface IEndpointRequest {\n  headers?: Array<IEndpointRequestHeader>;\n  query: Array<IEndpointRequestQuery>;\n  body: Array<IEndpointRequestBody>;\n}\n\ninterface IEndpointRequestHeader {\n  key: string;\n  value: string;\n}\n\ninterface IEndpointRequestQuery {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointRequestBody {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointResponse {\n  200: IEndpointResponseDetails;\n  400: IEndpointResponseDetails;\n}\n\ninterface IEndpointResponseDetails {\n  schema: Array<IEndpointResponseSchema>;\n  example: any;\n}\n\ninterface IEndpointResponseSchema {\n  name: string;\n  type: string;\n  description: string;\n}\n\nexport const endpoints: IEndpoints = {\n  banks: {\n    getForexBanks: {\n      id: 'getForexBanks',\n      name: 'Get Forex Banks',\n      path: '/banks/forex/banks',\n      url: `${baseAPI}/banks/forex/banks`,\n      demo: 'banks-list',\n      method: 'GET',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getForexRates: {\n      id: 'getForexRates',\n      name: 'Get Forex Rates',\n      method: 'GET',\n      path: '/banks/forex/rates',\n      url: `${baseAPI}/banks/forex/rates`,\n      demo: 'banks-forex',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'currencies', type: 'Array<string>', description: '' },\n            { name: 'data', type: 'Array<Rates>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    syncForexRates: {\n      id: 'syncForexRates',\n      name: 'Sync Forex Rates',\n      method: 'POST',\n      path: '/banks/forex/sync',\n      url: `${baseAPI}/banks/forex/sync`,\n      demo: 'banks-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'id', required: true, type: 'string', description: '' }]\n      },\n      response: {\n        200: { schema: [{ name: 'status', type: 'string', description: '' }], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  calendar: {\n    convertLunarToSolar: {\n      id: 'convertLunarToSolar',\n      name: 'Convert Lunar Date to Solar Date',\n      method: 'POST',\n      path: '/calendar/lunar2solar',\n      url: `${baseAPI}/calendar/lunar2solar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    convertSolarToLunar: {\n      id: 'convertSolarToLunar',\n      name: 'Convert Solar Date to Lunar Date',\n      method: 'POST',\n      path: '/calendar/solar2lunar',\n      url: `${baseAPI}/calendar/solar2lunar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getCanChi: {\n      id: 'getCanChi',\n      name: 'Get Can Chi of Lunar Date',\n      method: 'POST',\n      path: '/calendar/lunar/can-chi',\n      url: `${baseAPI}/calendar/lunar/can-chi`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [{ name: 'canChi', type: 'string', description: '' }], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  ethnicMinorities: {\n    getEthnicMinorities: {\n      id: 'getEthnicMinorities',\n      name: 'Get Ethnic Minorities',\n      method: 'GET',\n      path: '/ethnic-minorities',\n      url: `${baseAPI}/ethnic-minorities`,\n      demo: 'ethnic-minorities-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_en', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  finance: {\n    getStockCompanies: {\n      id: 'getStockCompanies',\n      name: 'Get Listed Companies',\n      method: 'GET',\n      path: '/finance/companies',\n      url: `${baseAPI}/finance/companies`,\n      demo: 'finance-companies',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'market', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'supersector', type: 'string', description: '' },\n            { name: 'sector', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'listingDate', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockHistory: {\n      id: 'getStockHistory',\n      name: 'Get Stock History',\n      method: 'POST',\n      path: '/finance/history',\n      url: `${baseAPI}/finance/history`,\n      demo: 'finance-history',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'symbol', type: 'string', required: true, description: '' },\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'history', type: 'Array<Date>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockHighlights: {\n      id: 'getStockHighlights',\n      name: 'Get Stock Highlights',\n      method: 'POST',\n      path: '/finance/highlights',\n      url: `${baseAPI}/finance/highlights`,\n      demo: 'finance-highlights',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockPotentials: {\n      id: 'getStockPotentials',\n      name: 'Get Stock Potentials',\n      method: 'POST',\n      path: '/finance/potentials',\n      url: `${baseAPI}/finance/potentials`,\n      demo: 'finance-potentials',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    calculateProfit: {\n      id: 'calculateProfit',\n      name: 'Calculate Profit',\n      method: 'POST',\n      path: '/finance/profit',\n      url: `${baseAPI}/finance/profit`,\n      demo: 'finance-profit',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'buy', type: 'number', required: true, description: '' },\n          { name: 'sell', type: 'number', required: true, description: '' },\n          { name: 'volume', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [{ name: 'profit', type: 'number', description: '' }], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  government: {\n    getGeneralSecretaries: {\n      id: 'getGeneralSecretaries',\n      name: 'Get General Secretaries',\n      method: 'GET',\n      path: '/government/general-secretaries',\n      url: `${baseAPI}/government/general-secretaries`,\n      demo: 'government-general-secretaries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPresidents: {\n      id: 'getPresidents',\n      name: 'Get Presidents',\n      method: 'GET',\n      path: '/government/presidents',\n      url: `${baseAPI}/government/presidents`,\n      demo: 'government-presidents',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPrimeMinisters: {\n      id: 'getPrimeMinisters',\n      name: 'Get Prime Ministers',\n      method: 'GET',\n      path: '/government/prime-ministers',\n      url: `${baseAPI}/government/prime-ministers`,\n      demo: 'government-prime-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getNationalAssemblyChairs: {\n      id: 'getNationalAssemblyChairs',\n      name: 'Get National Assembly Chairs',\n      method: 'GET',\n      path: '/government/national-assembly/chairs',\n      url: `${baseAPI}/government/national-assembly/chairs`,\n      demo: 'government-national-assembly-chairs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getNationalAssemblyMembers: {\n      id: 'getNationalAssemblyMembers',\n      name: 'Get National Assembly Members',\n      method: 'GET',\n      path: '/government/national-assembly/members',\n      url: `${baseAPI}/government/national-assembly/members`,\n      demo: 'government-national-assembly-members',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'no', type: 'number', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'no', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'date_of_birth', type: 'string', description: '' },\n            { name: 'city_of_birth', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'degree', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'percentage', type: 'number', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMinistries: {\n      id: 'getMinistries',\n      name: 'Get Ministries',\n      method: 'GET',\n      path: '/government/ministries',\n      url: `${baseAPI}/government/ministries`,\n      demo: 'government-ministries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'name_en', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMinisters: {\n      id: 'getMinisters',\n      name: 'Get Ministers',\n      method: 'GET',\n      path: '/government/ministers',\n      url: `${baseAPI}/government/ministers`,\n      demo: 'government-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  licensePlates: {\n    getLicensePlates: {\n      id: 'getLicensePlates',\n      name: 'Get License Plates',\n      method: 'GET',\n      path: '/license-plates',\n      url: `${baseAPI}/license-plates`,\n      demo: 'license-plates-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'license', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'license', type: 'string', description: '' },\n            { name: 'definition', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  maps: {\n    getMapsPostalCodes: {\n      id: 'getMapsPostalCodes',\n      name: 'Get Postal Codes',\n      method: 'GET',\n      path: '/maps/postal-codes',\n      url: `${baseAPI}/maps/postal-codes`,\n      demo: 'maps-postal-codes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'code', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsProvinces: {\n      id: 'getMapsProvinces',\n      name: 'Get Provinces',\n      method: 'GET',\n      path: '/maps/provinces',\n      url: `${baseAPI}/maps/provinces`,\n      demo: 'maps-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'level_en', type: 'string', required: false, description: '' },\n          { name: 'macro_region_en', type: 'string', required: false, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'province_id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'capital', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'macro_region', type: 'string', description: '' },\n            { name: 'macro_region_en', type: 'string', description: '' },\n            { name: 'region', type: 'string', description: '' },\n            { name: 'region_en', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsDistricts: {\n      id: 'getMapsDistricts',\n      name: 'Get Districts',\n      method: 'GET',\n      path: '/maps/districts',\n      url: `${baseAPI}/maps/districts`,\n      demo: 'maps-districts',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsWards: {\n      id: 'getMapsWards',\n      name: 'Get Wards',\n      method: 'GET',\n      path: '/maps/wards',\n      url: `${baseAPI}/maps/wards`,\n      demo: 'maps-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: { schema: [], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  news: {\n    getArticles: {\n      id: 'getArticles',\n      name: 'Get Articles',\n      method: 'GET',\n      path: '/news',\n      url: `${baseAPI}/news`,\n      demo: 'news-feed',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'category', type: 'string', required: true, description: '' },\n          { name: 'source', type: 'string', required: true, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'source', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' },\n            { name: 'pubDate', type: 'string', description: '' },\n            { name: 'date', type: 'string', description: '' },\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hours', type: 'number', description: '' },\n            { name: 'minutes', type: 'number', description: '' },\n            { name: 'seconds', type: 'number', description: '' },\n            { name: 'timestamp', type: 'number', description: '' },\n            { name: 'dateTimeString', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getTrends: {\n      id: 'getTrends',\n      name: 'Get (Google) Trends',\n      method: 'GET',\n      path: '/news/trends',\n      url: `${baseAPI}/news/trends`,\n      demo: 'news-trends',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hour', type: 'number', description: '' },\n            { name: 'trends', type: 'Array<string>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getSources: {\n      id: 'getSources',\n      name: 'Get Sources',\n      method: 'GET',\n      path: '/news/sources',\n      url: `${baseAPI}/news/sources`,\n      demo: 'news-sources',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'category', type: 'string', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getCategories: {\n      id: 'getCategories',\n      name: 'Get Categories',\n      method: 'GET',\n      path: '/news/categories',\n      url: `${baseAPI}/news/categories`,\n      demo: 'news-categories',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  phones: {\n    getPhonesPrefixes: {\n      id: 'getPhonesPrefixes',\n      name: 'Get Phone Prefixes',\n      method: 'GET',\n      path: '/phones/prefixes',\n      url: `${baseAPI}/phones/prefixes`,\n      demo: 'phones-prefixes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'prefix', type: 'string', description: '' },\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'provider_id', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPhonesProviders: {\n      id: 'getPhonesProviders',\n      name: 'Get Phone Providers',\n      method: 'GET',\n      path: '/phones/providers',\n      url: `${baseAPI}/phones/providers`,\n      demo: 'phones-providers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'prefixes', type: 'Array<string>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  sports: {\n    getSportsClubs: {\n      id: 'getSportsClubs',\n      name: 'Get Sports Clubs',\n      method: 'GET',\n      path: '/sports/clubs',\n      url: `${baseAPI}/sports/clubs`,\n      demo: 'sports-clubs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'sport', type: 'string', description: '' },\n            { name: 'sport_en', type: 'string', description: '' },\n            { name: 'competition', type: 'string', description: '' },\n            { name: 'city', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  technologies: {\n    getTechnologies: {\n      id: 'getTechnologies',\n      name: 'Get Public APIs',\n      method: 'GET',\n      path: '/technologies',\n      url: `${baseAPI}/technologies`,\n      demo: 'technologies-apis',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_id', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'npm', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getGHNProvinces: {\n      id: 'getGHNProvinces',\n      name: 'GHN - Get Provinces',\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/provinces',\n      url: `${baseAPI}/technologies/giaohangnhanh/provinces`,\n      demo: 'technologies-ghn-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getVietceteraArticles: {\n      id: 'getVietceteraArticles',\n      name: 'Get Vietcetera Articles',\n      method: 'GET',\n      path: '/technologies/vietcetera',\n      url: `${baseAPI}/technologies/vietcetera`,\n      demo: 'technologies-vietcetera',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'publishDate', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  }\n};\n","import { endpoints, IEndpoint } from '../configs';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries() {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents() {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters() {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs() {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number) {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries() {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string) {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends() {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources() {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCategories() {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    return await this.fetch(endpoint);\n  }\n\n  public async getArticles(options: any = {}) {\n    const { category, source } = options;\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number) {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies() {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { query: {}, body: { symbol, from, to } });\n  }\n\n  public async getBanksForexRates() {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks() {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  public async syncForexRates(id: string) {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getMapsPostalCodes() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMapsProvinces() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMapsDistricts(province_id: string) {\n    const endpoint: IEndpoint = endpoints.maps.getMapsDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getMapsWards() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates() {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities() {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getTechnologies() {\n    const endpoint: IEndpoint = endpoints.technologies.getTechnologies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesProviders() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesPrefixes() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNProvinces() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string) {\n    const endpoint: IEndpoint = endpoints.technologies.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\n\nexport { apis, graphql, helper };\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksForexProps {}\n\ninterface IBanksForexState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nexport default class BanksForex extends Component<IBanksForexProps, IBanksForexState> {\n  constructor(props: IBanksForexProps) {\n    super(props);\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    this.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && (\n              <Form>\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency.toUpperCase()}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n            )}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                          Buy\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                          Transfer\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                          Sell\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const { bank = '', time = '', buy = {}, transfer = {}, sell = {} } = item;\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buy[currency] || ''}</td>\n                              <td>{transfer[currency] || ''}</td>\n                              <td>{sell[currency] || ''}</td>\n                              <td>{time}</td>\n                            </tr>\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.bank}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank.name}>\n                          {bank.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string) {\n    const message = await apis.syncForexRates(id);\n    alert(message);\n  }\n\n  renderTable(loading: boolean, banks: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', url = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = { solarDate: '', solarString: '', lunarDate: '', lunarString: '' };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    return await apis.getCanChi(year, month, date);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n}\n\nexport default class API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n}\n\nexport default class Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data'\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\n\nexport default class Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  renderResponses(response: any) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">\n                    <b>{name}</b>\n                  </h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\" className=\"mt-3\">\n        <h2 className=\"mb-3\">\n          <b>{header}</b>\n        </h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavigationProps {}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path, text } = route;\n                      return (\n                        <Dropdown.Item key={index} href={'#' + path}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <Doc group={'banks'} header={'Banks'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <Doc group={'calendar'} header={'Calendar'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { helper } from '../../services';\nimport { endpoints, IEndpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {}\n\ninterface IDocsState {\n  endpoints: IEndpoints;\n}\n\nexport default class Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollTo = this.scrollTo.bind(this);\n  }\n\n  scrollTo(id: string) {\n    const targetID = `#${id}`;\n    console.log(targetID);\n    // const top: number = $(targetID).offset().top;\n    // console.log(targetID, top);\n    // $('#DocsMain').animate({ scrollTo: top }, 1500);\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      apis.length > 0 && (\n        <table>\n          <tbody>\n            {apis.map((api, index) => {\n              const { id, method, name } = api;\n              const color = colors[method.toLowerCase()];\n              return (\n                <tr onClick={() => this.scrollTo(id)} key={index} className=\"cursor-pointer\">\n                  <td className=\"pt-1 pb-1 pr-3\">\n                    <small className={color}>\n                      <b>{method}</b>\n                    </small>\n                  </td>\n                  <td>\n                    <small>{name}</small>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]);\n      return { group, apis };\n    });\n\n    console.log(list);\n    return (\n      <div id=\"DocSidebar\">\n        {list.length > 0 &&\n          list.map((item, index) => {\n            const { group, apis } = item;\n            const header = helper.capitalize(group);\n            return (\n              <div key={index}>\n                <p className=\"m-0\">{header}</p>\n                {this.renderTable(apis)}\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        {/* <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div id=\"DocsMain\" className=\"h-80vh overflow-auto\">\n              \n            </div>\n          </div>\n        </div> */}\n        {groups.length > 0 &&\n          groups.map((group: string, index: number) => {\n            return <Doc key={index} group={group} header={helper.capitalize(group)}></Doc>;\n          })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <Doc group={'ethnicMinorities'} header={'Ethnic Minorities'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <Doc group={'finance'} header={'Finance'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <Doc group={'government'} header={'Government'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\ninterface ILicensePlatesProps {}\n\ninterface ILicensePlatesState {}\n\nexport default class LicensePlates extends Component<ILicensePlatesProps, ILicensePlatesState> {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <Doc group={'licensePlates'} header={'License Plates'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"Maps\" className=\"container\">\n        <Doc group={'maps'} header={'Maps'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <Doc group={'news'} header={'News'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <Doc group={'phones'} header={'Phones'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <Doc group={'sports'} header={'Sports'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\" className=\"container\">\n        <Doc group={'technologies'} header={'Technologies'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.period}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.symbol}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {helper.numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {helper.numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {helper.numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.ministry}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\ninterface IHomeProps {}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n  externalPackages: Array<any>;\n  filterExternalPackages: Array<any>;\n}\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#lunar-calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: 'vnapis#maps',\n        docs: '/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis,\n      externalPackages: [],\n      filterExternalPackages: []\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title: string, packages: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container h-60vh\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"w-100 mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n    this.getMapsDistricts = this.getMapsDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getMapsDistricts();\n  }\n\n  async getMapsProvinces() {\n    const provinces = await apis.getMapsProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getMapsDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getMapsDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getMapsDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={this.state.province_id}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getMapsPostalCodes = this.getMapsPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsPostalCodes();\n  }\n\n  async getMapsPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getMapsPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n  }\n\n  async getMapsProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getMapsProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getMapsWards = this.getMapsWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsWards();\n  }\n\n  async getMapsWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getMapsWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Wards ({wards.length})</Card.Title>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.category}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {helper.capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.source}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Maps\n  Maps,\n  MapsPostalCodes,\n  MapsProvinces,\n  MapsDistricts,\n  MapsWards,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Technologies\n  Technologies,\n  APIs,\n  GiaoHangNhanh,\n  Vietcetera\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'maps',\n    text: 'Maps',\n    component: Maps,\n    navigation: true\n  },\n  {\n    path: 'maps-postal-codes',\n    text: 'Maps Postal Codes',\n    component: MapsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'maps-provinces',\n    text: 'Maps Provinces',\n    component: MapsProvinces,\n    navigation: false\n  },\n  {\n    path: 'maps-districts',\n    text: 'Maps Districts',\n    component: MapsDistricts,\n    navigation: false\n  },\n  {\n    path: 'maps-wards',\n    text: 'Maps Wards',\n    component: MapsWards,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies,\n    navigation: true\n  },\n  {\n    path: 'technologies-apis',\n    text: 'Technologies APIs',\n    component: APIs,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-provinces',\n    text: 'Technologies GHN',\n    component: GiaoHangNhanh,\n    navigation: false\n  },\n  {\n    path: 'technologies-vietcetera',\n    text: 'Technologies Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsSourcesProps {}\n\ninterface INewsSourcesState {\n  sources: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsSources extends Component<INewsSourcesProps, INewsSourcesState> {\n  constructor(props: INewsSourcesProps) {\n    super(props);\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading: boolean, sources: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category: string, index: number) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n}\n\nexport default class NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [] };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesProviders extends Component<\n  IPhonesProvidersProps,\n  IPhonesProvidersState\n> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading: boolean, providers: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IAPIsProps {}\n\ninterface IAPIsState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nexport default class APIs extends Component<IAPIsProps, IAPIsState> {\n  constructor(props: IAPIsProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading: boolean, filterTechnologies: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"APIs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGiaoHangNhanhProps {}\n\ninterface IGiaoHangNhanhState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class GiaoHangNhanh extends Component<IGiaoHangNhanhProps, IGiaoHangNhanhState> {\n  constructor(props: IGiaoHangNhanhProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"GiaoHangNhanh\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">Giao Hang Nhanh</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nexport default class Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.type}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}