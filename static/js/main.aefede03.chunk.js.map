{"version":3,"sources":["configs/urls.ts","configs/administrative-divisions.ts","configs/banks.ts","configs/calendar.ts","configs/ethnic-minorities.ts","configs/finance.ts","configs/government.ts","configs/history.ts","configs/license-plates.ts","configs/music.ts","configs/news.ts","configs/open-apis.ts","configs/phones.ts","configs/sports.ts","configs/weather.ts","configs/youtube.ts","configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/index.ts","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","components/Navigation.tsx","components/SmallDoc.tsx","pages/docs/AdministrativeDivisions.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/History.tsx","pages/docs/LicensePlates.tsx","pages/docs/Music.tsx","pages/docs/News.tsx","pages/docs/OpenAPIs.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Weather.tsx","pages/docs/YouTube.tsx","pages/demo/administrative-divisions/Districts.tsx","pages/demo/administrative-divisions/PostalCodes.tsx","pages/demo/administrative-divisions/Provinces.tsx","pages/demo/administrative-divisions/Wards.tsx","pages/demo/banks/Forex.tsx","pages/demo/banks/History.tsx","pages/demo/banks/List.tsx","pages/demo/calendar/Converter.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/news/Feed.tsx","pages/demo/news/Sources.tsx","pages/demo/news/Trends.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/youtube/Trending.tsx","pages/demo/youtube/VideoCategories.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/demo/history/Dynasties.tsx","routers/index.ts","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/music/Artists.tsx","pages/demo/open-apis/List.tsx","pages/demo/open-apis/ghn/Provinces.tsx","pages/demo/open-apis/ghn/Districts.tsx","pages/demo/open-apis/ghn/Wards.tsx","pages/demo/open-apis/Vietcetera.tsx","pages/demo/sports/Clubs.tsx","pages/demo/weather/Current.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","administrativeDivisions","getPostalCodes","id","name","public","method","path","url","demo","request","headers","key","value","query","type","required","description","body","response","200","schema","example","code","province","province_id","400","message","getProvinces","capital","level","level_en","macro_region","macro_region_en","region","region_en","getDistricts","getWards","ward","district","getTotalWards","total","banks","getForexBanks","getForexRates","currencies","data","syncForexRates","status","calendar","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","ethnicMinorities","getEthnicMinorities","type_en","finance","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHistory","history","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","calculateProfit","profit","government","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","percentage","getMinistries","short","name_en","getMinisters","getDynasties","license","definition","licensePlates","getLicensePlates","music","getMusicArtists","news","getArticles","source","pubDate","day","hours","minutes","seconds","timestamp","dateTimeString","getTrends","hour","categories","getSources","category","getCategories","openAPIs","getOpenAPIs","type_id","npm","getGHNProvinces","getGHNDistricts","district_id","support_type","getGHNWards","getVietceteraArticles","publishDate","phones","getPhonesPrefixes","prefix","provider","provider_id","getPhonesProviders","prefixes","sports","getSportsClubs","sport","sport_en","competition","city","weather","getCurrentWeather","coord","base","main","visibility","wind","clouds","dt","sys","timezone","cod","youtube","getTrending","channelId","publishedAt","channelTitle","tags","categoryId","getVideoCategories","assignable","periods","label","months","endpoints","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","articles","buy","sell","volume","from","to","currency","bank","skip","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","apis","helper","API","props","api","className","onClick","copyToClipboard","Component","CURL","bind","buildDataRaw","trim","dataRaw","header","index","lastFlag","Table","loading","caption","rows","rowConfigs","emptyRowsText","Spinner","animation","variant","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","state","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","getFullYear","href","target","rel","Navigation","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","route","navigation","as","Link","SmallDoc","renderSidebar","renderTable","scrollIntoView","element","document","getElementById","behavior","colors","get","post","color","toLowerCase","Maps","Banks","Calendar","Docs","Accordion","capitalize","Toggle","Button","Collapse","groups","EthnicMinorities","Finance","Government","History","LicensePlates","Music","News","OpenAPIs","Phones","Sports","Weather","YouTube","MapsDistricts","provinces","districts","updateProvince","setState","event","Card","Body","Form","Group","Control","defaultValue","onChange","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","wards","active","renderPagination","goToPage","updateActive","page","Math","floor","final","items","push","Pagination","size","Prev","Next","BanksForex","sortBy","sortDir","getBanksForexRates","sort","renderForm","updateCurrency","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","time","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","find","rates","rate","labels","minute","datasets","buyData","transferData","sellData","lines","deepClone","assign","Title","BanksList","CalendarConverter","loadingText","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","split","controlId","Label","placeholder","pattern","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","processPeriod","highlight","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","concat","array","indexOf","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","NewsFeed","sources","updateCategory","updateSource","ListGroup","article","Subtitle","Text","NewsSources","Badge","NewsTrends","getGoogleTrends","trend","PhonesPrefixes","PhonesProviders","providers","_provider","YouTubeTrending","mapCategories","trending","getYouTubeTrending","getYouTubeVideoCategories","updateVideoCategory","videoCategory","videos","video","YouTubeVideoCategories","EthnicMinoritiesList","filterEthnicMinorities","ethnicMinority","typeFlag","typeEnFlag","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","HistoryDynasties","dynasties","getHistoryDynasties","component","docs","filterAPIs","externalPackages","filterExternalPackages","filterPackages","updateQuery","packages","_package","AdministrativeDivisions","AdministrativeDivisionsPostalCodes","AdministrativeDivisionsProvinces","AdministrativeDivisionsDistricts","AdministrativeDivisionsWards","filterLicensePlates","licensePlate","artists","technologies","filterTechnologies","technology","nameFlag","option","clubs","getWeatherCurrent","temp","feels_like","temp_min","temp_max","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aefede03.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n","import { baseAPI } from './urls';\n\nconst administrativeDivisions = {\n  getPostalCodes: {\n    id: 'getPostalCodes',\n    name: 'Get Postal Codes',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/postal-codes',\n    url: `${baseAPI}/administrative-divisions/postal-codes`,\n    demo: 'administrative-divisions-postal-codes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'code', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'province_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            code: '<string>',\n            province: '<string>',\n            province_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getProvinces: {\n    id: 'getProvinces',\n    name: 'Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/provinces',\n    url: `${baseAPI}/administrative-divisions/provinces`,\n    demo: 'administrative-divisions-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'level_en', type: 'string', required: false, description: '' },\n        { name: 'macro_region_en', type: 'string', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'capital', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' },\n          { name: 'macro_region', type: 'string', description: '' },\n          { name: 'macro_region_en', type: 'string', description: '' },\n          { name: 'region', type: 'string', description: '' },\n          { name: 'region_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            capital: '<string>',\n            level: '<string>',\n            level_en: '<string>',\n            macro_region: '<string>',\n            macro_region_en: '<string>',\n            region: '<string>',\n            region_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getDistricts: {\n    id: 'getDistricts',\n    name: 'Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/districts',\n    url: `${baseAPI}/administrative-divisions/districts`,\n    demo: 'administrative-divisions-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'province_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            level: '<string>',\n            level_en: '<string>',\n            province: '<string>',\n            province_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getWards: {\n    id: 'getWards',\n    name: 'Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/wards',\n    url: `${baseAPI}/administrative-divisions/wards`,\n    demo: 'administrative-divisions-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'skip', type: 'number', required: false, description: '' },\n        { name: 'limit', type: 'number', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'ward', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            ward: '<string>',\n            district: '<string>',\n            province: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getTotalWards: {\n    id: 'getTotalWards',\n    name: 'Get Total Wards',\n    public: false,\n    method: 'GET',\n    path: '/administrative-divisions/wards/total',\n    url: `${baseAPI}/administrative-divisions/wards/total`,\n    demo: 'administrative-divisions-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [{ name: 'total', type: 'number', description: '' }],\n        example: [{ total: '<number>' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default administrativeDivisions;\n","import { baseAPI } from './urls';\n\nconst banks = {\n  getForexBanks: {\n    id: 'getForexBanks',\n    name: 'Get Forex Banks',\n    public: true,\n    path: '/banks/forex/banks',\n    url: `${baseAPI}/banks/forex/banks`,\n    demo: 'banks-list',\n    method: 'GET',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' }\n        ],\n        example: [{ id: '<string>', name: '<string>', url: '<string>' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getForexRates: {\n    id: 'getForexRates',\n    name: 'Get Forex Rates',\n    public: true,\n    method: 'GET',\n    path: '/banks/forex/rates',\n    url: `${baseAPI}/banks/forex/rates`,\n    demo: 'banks-forex',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'currencies', type: 'Array<string>', description: '' },\n          { name: 'data', type: 'Array<Rates>', description: '' }\n        ],\n        example: {\n          currencies: '<Array<string>>',\n          data: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  syncForexRates: {\n    id: 'syncForexRates',\n    name: 'Sync Forex Rates',\n    public: false,\n    method: 'POST',\n    path: '/banks/forex/sync',\n    url: `${baseAPI}/banks/forex/sync`,\n    demo: 'banks-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'id', required: true, type: 'string', description: '' }]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'status', type: 'string', description: '' }],\n        example: { status: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default banks;\n","import { baseAPI } from './urls';\n\nconst calendar = {\n  convertLunarToSolar: {\n    id: 'convertLunarToSolar',\n    name: 'Convert Lunar Date to Solar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar2solar',\n    url: `${baseAPI}/calendar/lunar2solar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  convertSolarToLunar: {\n    id: 'convertSolarToLunar',\n    name: 'Convert Solar Date to Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/solar2lunar',\n    url: `${baseAPI}/calendar/solar2lunar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCanChi: {\n    id: 'getCanChi',\n    name: 'Get Can Chi of Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar/can-chi',\n    url: `${baseAPI}/calendar/lunar/can-chi`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'canChi', type: 'string', description: '' }],\n        example: { canChi: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default calendar;\n","import { baseAPI } from './urls';\n\nconst ethnicMinorities = {\n  getEthnicMinorities: {\n    id: 'getEthnicMinorities',\n    name: 'Get Ethnic Minorities',\n    public: true,\n    method: 'GET',\n    path: '/ethnic-minorities',\n    url: `${baseAPI}/ethnic-minorities`,\n    demo: 'ethnic-minorities-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_en', type: 'string', description: '' }\n        ],\n        example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default ethnicMinorities;\n","import { baseAPI } from './urls';\n\nconst finance = {\n  getStockCompanies: {\n    id: 'getStockCompanies',\n    name: 'Get Listed Companies',\n    public: true,\n    method: 'GET',\n    path: '/finance/companies',\n    url: `${baseAPI}/finance/companies`,\n    demo: 'finance-companies',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'market', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'supersector', type: 'string', description: '' },\n          { name: 'sector', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'listingDate', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            market: '<string>',\n            group: '<string>',\n            symbol: '<string>',\n            name: '<string>',\n            industry: '<string>',\n            supersector: '<string>',\n            sector: '<string>',\n            subsector: '<string>',\n            listingDate: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHistory: {\n    id: 'getStockHistory',\n    name: 'Get Stock History',\n    public: true,\n    method: 'GET',\n    path: '/finance/history',\n    url: `${baseAPI}/finance/history`,\n    demo: 'finance-history',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'symbol', type: 'string', required: true, description: '' },\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'history', type: 'Array<Date>', description: '' }\n        ],\n        example: {\n          symbol: '<string>',\n          name: '<string>',\n          group: '<string>',\n          industry: '<string>',\n          subsector: '<string>',\n          history: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHighlights: {\n    id: 'getStockHighlights',\n    name: 'Get Stock Highlights',\n    public: false,\n    method: 'POST',\n    path: '/finance/highlights',\n    url: `${baseAPI}/finance/highlights`,\n    demo: 'finance-highlights',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockPotentials: {\n    id: 'getStockPotentials',\n    name: 'Get Stock Potentials',\n    public: false,\n    method: 'POST',\n    path: '/finance/potentials',\n    url: `${baseAPI}/finance/potentials`,\n    demo: 'finance-potentials',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  calculateProfit: {\n    id: 'calculateProfit',\n    name: 'Calculate Profit',\n    public: false,\n    method: 'POST',\n    path: '/finance/profit',\n    url: `${baseAPI}/finance/profit`,\n    demo: 'finance-profit',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'buy', type: 'number', required: true, description: '' },\n        { name: 'sell', type: 'number', required: true, description: '' },\n        { name: 'volume', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'profit', type: 'number', description: '' }],\n        example: { profit: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default finance;\n","import { baseAPI } from './urls';\n\nconst government = {\n  getGeneralSecretaries: {\n    id: 'getGeneralSecretaries',\n    name: 'Get General Secretaries',\n    public: true,\n    method: 'GET',\n    path: '/government/general-secretaries',\n    url: `${baseAPI}/government/general-secretaries`,\n    demo: 'government-general-secretaries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'string', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPresidents: {\n    id: 'getPresidents',\n    name: 'Get Presidents',\n    public: true,\n    method: 'GET',\n    path: '/government/presidents',\n    url: `${baseAPI}/government/presidents`,\n    demo: 'government-presidents',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPrimeMinisters: {\n    id: 'getPrimeMinisters',\n    name: 'Get Prime Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/prime-ministers',\n    url: `${baseAPI}/government/prime-ministers`,\n    demo: 'government-prime-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyChairs: {\n    id: 'getNationalAssemblyChairs',\n    name: 'Get National Assembly Chairs',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/chairs',\n    url: `${baseAPI}/government/national-assembly/chairs`,\n    demo: 'government-national-assembly-chairs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyMembers: {\n    id: 'getNationalAssemblyMembers',\n    name: 'Get National Assembly Members',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/members',\n    url: `${baseAPI}/government/national-assembly/members`,\n    demo: 'government-national-assembly-members',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'no', type: 'number', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'no', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'date_of_birth', type: 'string', description: '' },\n          { name: 'city_of_birth', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'degree', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'percentage', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            no: '<number>',\n            name: '<string>',\n            date_of_birth: '<string>',\n            city_of_birth: '<string>',\n            gender: '<string>',\n            degree: '<string>',\n            province: '<string>',\n            district: '<string>',\n            percentage: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinistries: {\n    id: 'getMinistries',\n    name: 'Get Ministries',\n    public: true,\n    method: 'GET',\n    path: '/government/ministries',\n    url: `${baseAPI}/government/ministries`,\n    demo: 'government-ministries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'name_en', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            short: '<string>',\n            name: '<string>',\n            name_en: '<string>',\n            level: '<string>',\n            level_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinisters: {\n    id: 'getMinisters',\n    name: 'Get Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/ministers',\n    url: `${baseAPI}/government/ministers`,\n    demo: 'government-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default government;\n","import { baseAPI } from './urls';\n\nconst history = {\n  getDynasties: {\n    id: 'getDynasties',\n    name: 'Get Dynasties',\n    public: true,\n    method: 'GET',\n    path: '/history/dynasties',\n    url: `${baseAPI}/history/dynasties`,\n    demo: 'history-dynasties',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'temple_name', type: 'string', description: '' },\n          { name: 'birth_name', type: 'string', description: '' },\n          { name: 'birth', type: 'number', description: '' },\n          { name: 'death', type: 'number', description: '' },\n          { name: 'start_year', type: 'number', description: '' },\n          { name: 'end_year', type: 'number', description: '' },\n          { name: 'dynasty', type: 'string', description: '' }\n        ],\n        example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default history;\n","import { baseAPI } from './urls';\n\nconst licensePlates = {\n  getLicensePlates: {\n    id: 'getLicensePlates',\n    name: 'Get License Plates',\n    public: true,\n    method: 'GET',\n    path: '/license-plates',\n    url: `${baseAPI}/license-plates`,\n    demo: 'license-plates-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'license', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'license', type: 'string', description: '' },\n          { name: 'definition', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' }\n        ],\n        example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default licensePlates;\n","import { baseAPI } from './urls';\n\nconst music = {\n  getMusicArtists: {\n    id: 'getMusicArtists',\n    name: 'Get Music Artists',\n    public: true,\n    method: 'GET',\n    path: '/music/artists',\n    url: `${baseAPI}/music/artists`,\n    demo: 'music-artists',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [{ name: 'name', type: 'string', description: '' }],\n        example: [\n          {\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default music;\n","import { baseAPI } from './urls';\n\nconst news = {\n  getArticles: {\n    id: 'getArticles',\n    name: 'Get Articles',\n    public: true,\n    method: 'GET',\n    path: '/news',\n    url: `${baseAPI}/news`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'category', type: 'string', required: true, description: '' },\n        { name: 'source', type: 'string', required: true, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'source', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' },\n          { name: 'pubDate', type: 'string', description: '' },\n          { name: 'day', type: 'string', description: '' },\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' },\n          { name: 'hours', type: 'number', description: '' },\n          { name: 'minutes', type: 'number', description: '' },\n          { name: 'seconds', type: 'number', description: '' },\n          { name: 'timestamp', type: 'number', description: '' },\n          { name: 'dateTimeString', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            source: '<string>',\n            description: '<string>',\n            pubDate: '<string>',\n            day: '<string>',\n            year: '<number>',\n            month: '<number>',\n            date: '<number>',\n            hours: '<number>',\n            minutes: '<number>',\n            seconds: '<number>',\n            timestamp: '<number>',\n            dateTimeString: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getTrends: {\n    id: 'getTrends',\n    name: 'Get (Google) Trends',\n    public: true,\n    method: 'GET',\n    path: '/news/trends',\n    url: `${baseAPI}/news/trends`,\n    demo: 'news-trends',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' },\n          { name: 'hour', type: 'number', description: '' },\n          { name: 'trends', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          year: '<number>',\n          month: '<number>',\n          date: '<number>',\n          hour: '<number>',\n          categories: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getSources: {\n    id: 'getSources',\n    name: 'Get Sources',\n    public: true,\n    method: 'GET',\n    path: '/news/sources',\n    url: `${baseAPI}/news/sources`,\n    demo: 'news-sources',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'category', type: 'string', description: '' },\n          { name: 'categories', type: 'Array<string>', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            name: '<string>',\n            url: '<string>',\n            category: '<string>',\n            categories: '<Array<string>>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCategories: {\n    id: 'getCategories',\n    name: 'Get Categories',\n    public: true,\n    method: 'GET',\n    path: '/news/categories',\n    url: `${baseAPI}/news/categories`,\n    demo: 'news-categories',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'categories', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          total: '<number>',\n          categories: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default news;\n","import { baseAPI } from './urls';\n\nconst openAPIs = {\n  getOpenAPIs: {\n    id: 'getOpenAPIs',\n    name: 'Get Open APIs',\n    public: true,\n    method: 'GET',\n    path: '/open-apis',\n    url: `${baseAPI}/open-apis`,\n    demo: 'open-apis-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_id', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'npm', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            type: '<string>',\n            type_id: '<string>',\n            url: '<string>',\n            npm: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNProvinces: {\n    id: 'getGHNProvinces',\n    name: 'GHN - Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/provinces',\n    url: `${baseAPI}/open-apis/giaohangnhanh/provinces`,\n    demo: 'open-apis-ghn-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNDistricts: {\n    id: 'getGHNDistricts',\n    name: 'GHN - Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/districts',\n    url: `${baseAPI}/open-apis/giaohangnhanh/districts`,\n    demo: 'open-apis-ghn-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' },\n          { name: 'type', type: 'number', description: '' },\n          { name: 'support_type', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>',\n            type: '<number>',\n            support_type: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNWards: {\n    id: 'getGHNWards',\n    name: 'GHN - Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/wards',\n    url: `${baseAPI}/open-apis/giaohangnhanh/wards`,\n    demo: 'open-apis-ghn-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'district_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVietceteraArticles: {\n    id: 'getVietceteraArticles',\n    name: 'Get Vietcetera Articles',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/vietcetera',\n    url: `${baseAPI}/open-apis/vietcetera`,\n    demo: 'open-apis-vietcetera',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'publishDate', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            publishDate: '<string>',\n            description: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default openAPIs;\n","import { baseAPI } from './urls';\n\nconst phones = {\n  getPhonesPrefixes: {\n    id: 'getPhonesPrefixes',\n    name: 'Get Phone Prefixes',\n    public: true,\n    method: 'GET',\n    path: '/phones/prefixes',\n    url: `${baseAPI}/phones/prefixes`,\n    demo: 'phones-prefixes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'prefix', type: 'string', description: '' },\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'provider_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            prefix: '<string>',\n            provider: '<string>',\n            provider_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPhonesProviders: {\n    id: 'getPhonesProviders',\n    name: 'Get Phone Providers',\n    public: true,\n    method: 'GET',\n    path: '/phones/providers',\n    url: `${baseAPI}/phones/providers`,\n    demo: 'phones-providers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'prefixes', type: 'Array<string>', description: '' }\n        ],\n        example: [\n          {\n            provider: '<string>',\n            prefixes: '<Array<string>>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default phones;\n","import { baseAPI } from './urls';\n\nconst sports = {\n  getSportsClubs: {\n    id: 'getSportsClubs',\n    name: 'Get Sports Clubs',\n    public: true,\n    method: 'GET',\n    path: '/sports/clubs',\n    url: `${baseAPI}/sports/clubs`,\n    demo: 'sports-clubs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'sport', type: 'string', description: '' },\n          { name: 'sport_en', type: 'string', description: '' },\n          { name: 'competition', type: 'string', description: '' },\n          { name: 'city', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            sport: '<string>',\n            sport_en: '<string>',\n            competition: '<string>',\n            city: '<string>',\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default sports;\n","import { baseAPI } from './urls';\n\nconst weather = {\n  getCurrentWeather: {\n    id: 'getCurrentWeather',\n    name: 'Get Current Weather',\n    public: true,\n    method: 'GET',\n    path: '/weather',\n    url: `${baseAPI}/weather`,\n    demo: 'weather-current',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'city', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'coord', type: 'object', description: '' },\n          { name: 'weather', type: 'Array<object>', description: '' },\n          { name: 'base', type: 'string', description: '' },\n          { name: 'main', type: 'object', description: '' },\n          { name: 'visibility', type: 'number', description: '' },\n          { name: 'wind', type: 'object', description: '' },\n          { name: 'clouds', type: 'object', description: '' },\n          { name: 'dt', type: 'number', description: '' },\n          { name: 'sys', type: 'number', description: '' },\n          { name: 'timezone', type: 'number', description: '' },\n          { name: 'id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'cod', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            coord: '<object>',\n            weather: '<Array<object>>',\n            base: '<string>',\n            main: '<object>',\n            visibility: '<number>',\n            wind: '<object>',\n            clouds: '<object>',\n            dt: '<number>',\n            sys: '<number>',\n            timezone: '<number>',\n            id: '<number>',\n            name: '<string>',\n            cod: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default weather;\n","import { baseAPI } from './urls';\nimport { IYouTubeEndpoints } from './interfaces';\n\nconst youtube: IYouTubeEndpoints = {\n  getTrending: {\n    id: 'getTrending',\n    name: 'Get Trending',\n    public: true,\n    method: 'GET',\n    path: '/youtube/trending',\n    url: `${baseAPI}/youtube/trending`,\n    demo: 'youtube-trending',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'categoryId', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'channelId', type: 'string', description: '' },\n          { name: 'title', type: 'string', description: '' },\n          { name: 'publishedAt', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' },\n          { name: 'channelTitle', type: 'string', description: '' },\n          { name: 'tags', type: 'Array<string>', description: '' },\n          { name: 'categoryId', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            channelId: '<string>',\n            title: '<string>',\n            publishedAt: '<string>',\n            description: '<string>',\n            channelTitle: '<string>',\n            tags: '<Array<string>>',\n            categoryId: '<string>',\n            url: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVideoCategories: {\n    id: 'getVideoCategories',\n    name: 'Get Video Categories',\n    public: true,\n    method: 'GET',\n    path: '/youtube/video-categories',\n    url: `${baseAPI}/youtube/video-categories`,\n    demo: 'youtube-video-categories',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'title', type: 'string', description: '' },\n          { name: 'assignable', type: 'boolean', description: '' },\n          { name: 'channelId', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            title: '<string>',\n            assignable: '<string>',\n            channelId: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default youtube;\n","import { baseAPI, baseGraphQL } from './urls';\nimport { IPeriod, IMonth, IEndpoints } from './interfaces';\n\nimport administrativeDivisions from './administrative-divisions';\nimport banks from './banks';\nimport calendar from './calendar';\nimport ethnicMinorities from './ethnic-minorities';\nimport finance from './finance';\nimport government from './government';\nimport history from './history';\nimport licensePlates from './license-plates';\nimport music from './music';\nimport news from './news';\nimport openAPIs from './open-apis';\nimport phones from './phones';\nimport sports from './sports';\nimport weather from './weather';\nimport youtube from './youtube';\n\nexport { baseAPI, baseGraphQL };\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'administrativeDivisions'\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'music'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport const endpoints: IEndpoints = {\n  administrativeDivisions,\n  banks,\n  calendar,\n  ethnicMinorities,\n  finance,\n  government,\n  history,\n  licensePlates,\n  music,\n  news,\n  openAPIs,\n  phones,\n  sports,\n  weather,\n  youtube\n};\n","import { endpoints } from '../configs';\nimport { IEndpoint } from '../configs/interfaces';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries() {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents() {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters() {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs() {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number) {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries() {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string) {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends() {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources() {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCategories() {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint);\n    return categories;\n  }\n\n  public async getArticles(options: any = {}) {\n    const { category, source } = options;\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number) {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies() {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: {}, query: { symbol, from, to } });\n  }\n\n  public async getBanksForexRates() {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks() {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  public async syncForexRates(id: string) {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getPostalCodes() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProvinces() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDistricts(province_id: string) {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getWards(skip: number) {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getWards;\n    return await this.fetch(endpoint, { query: { skip }, body: {} });\n  }\n\n  public async getTotalWards(): Promise<number> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getTotalWards;\n    const { total = 0 } = await this.fetch(endpoint);\n    return total;\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates() {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities() {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getOpenAPIs() {\n    const endpoint: IEndpoint = endpoints.openAPIs.getOpenAPIs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesProviders() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesPrefixes() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number): Promise<string> {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string) {\n    const endpoint: IEndpoint = endpoints.openAPIs.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n\n  public async getGHNProvinces() {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNDistricts() {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNWards() {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMusicArtists() {\n    const endpoint: IEndpoint = endpoints.music.getMusicArtists;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDynasties() {\n    const endpoint: IEndpoint = endpoints.history.getDynasties;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCurrentWeather(city: string) {\n    const endpoint: IEndpoint = endpoints.weather.getCurrentWeather;\n    return await this.fetch(endpoint, { query: { city }, body: {} });\n  }\n\n  public async getYouTubeTrending(categoryId: number = 0) {\n    const endpoint: IEndpoint = endpoints.youtube.getTrending;\n    return await this.fetch(endpoint, { query: { categoryId }, body: {} });\n  }\n\n  public async getYouTubeVideoCategories() {\n    const endpoint: IEndpoint = endpoints.youtube.getVideoCategories;\n    return await this.fetch(endpoint);\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\n\nexport { apis, graphql, helper };\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n}\n\nexport default class API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n}\n\nexport default class Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data'\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\n\nexport default class Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">\n                    <b>{name}</b>\n                  </h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className=\"mb-3\">\n          <b>{header}</b>\n        </h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavigationProps {}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path: pathname, text } = route;\n                      return (\n                        <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Doc from './Doc';\nimport { endpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n}\n\ninterface ISmallDocState {\n  endpoints: any;\n}\n\nexport default class SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header } = this.props;\n    const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n    return (\n      <div>\n        <h6>\n          <b>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"AdministrativeDivisions\" className=\"container\">\n        <SmallDoc group={'administrativeDivisions'} header={'Administrative Divisions'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {}\n\ninterface IDocsState {\n  endpoints: any;\n}\n\nexport default class Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n      return { group, apis };\n    });\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.capitalize(group);\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className=\"m-0 p-0 text-dark\"\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              {groups.length > 0 &&\n                groups.map((group: string, index: number) => {\n                  return <Doc key={index} group={group} header={helper.capitalize(group)}></Doc>;\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class History extends Component {\n  render() {\n    return (\n      <div id=\"History\" className=\"container\">\n        <SmallDoc group={'history'} header={'History'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Music extends Component {\n  render() {\n    return (\n      <div id=\"Music\" className=\"container\">\n        <SmallDoc group={'music'} header={'Music'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class OpenAPIs extends Component {\n  render() {\n    return (\n      <div id=\"OpenAPIs\" className=\"container\">\n        <SmallDoc group={'openAPIs'} header={'OpenAPIs'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Weather extends Component {\n  render() {\n    return (\n      <div id=\"Weather\" className=\"container\">\n        <SmallDoc group={'weather'} header={'Weather'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class YouTube extends Component {\n  render() {\n    return (\n      <div id=\"YouTube\" className=\"container\">\n        <SmallDoc group={'youtube'} header={'YouTube'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.getDistricts = this.getDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  async getProvinces() {\n    const provinces = await apis.getProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={this.state.province_id}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Pagination } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n  total: number;\n  active: number;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true, total: 0, active: 1 };\n\n    this.getWards = this.getWards.bind(this);\n    this.getTotalWards = this.getTotalWards.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n    this.updateActive = this.updateActive.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTotalWards();\n    await this.getWards();\n  }\n\n  async getWards(page: number = 0) {\n    this.setState({ loading: true });\n    const skip: number = page * 100;\n    const wards = await apis.getWards(skip);\n    this.setState({ wards, loading: false });\n  }\n\n  async getTotalWards() {\n    const total: number = await apis.getTotalWards();\n    this.setState({ total });\n  }\n\n  async goToPage(page: number) {\n    await this.setState({ active: page });\n    await this.getWards(page - 1);\n  }\n\n  async updateActive(value: number) {\n    let { active } = this.state;\n    active += value;\n    await this.setState({ active });\n    await this.getWards(active - 1);\n  }\n\n  renderPagination() {\n    const { total, active } = this.state;\n\n    if (!total) return '';\n\n    const max: number = Math.floor(total / 100);\n\n    const final: number = active + 10 < max ? active + 10 : max;\n    const start: number = final === max ? max - 10 : active;\n    const items: Array<any> = [];\n    for (let page = start; page <= final; page++) {\n      items.push(\n        <Pagination.Item key={page} active={page === active} onClick={() => this.goToPage(page)}>\n          {page}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination size=\"sm\" className=\"justify-content-center\">\n        {active !== 1 && (\n          <Pagination.Item key={1} onClick={() => this.goToPage(1)}>\n            1\n          </Pagination.Item>\n        )}\n        {active !== 1 && <Pagination.Prev onClick={() => this.updateActive(1)} />}\n        {items}\n        {final !== max && <Pagination.Next onClick={() => this.updateActive(1)} />}\n        {final !== max && (\n          <Pagination.Item key={max} onClick={() => this.goToPage(max)}>\n            {max}\n          </Pagination.Item>\n        )}\n      </Pagination>\n    );\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    const rowConfigs: Array<any> = [\n      { header: 'Ward', key: 'ward' },\n      { header: 'District', key: 'district' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {this.renderPagination()}\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksForexProps {}\n\ninterface IBanksForexState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nexport default class BanksForex extends Component<IBanksForexProps, IBanksForexState> {\n  constructor(props: IBanksForexProps) {\n    super(props);\n\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.updateCurrency = this.updateCurrency.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    await this.setState({ data });\n  }\n\n  async updateCurrency(event: any) {\n    const { value: currency } = event.target;\n    await this.setState({ currency });\n  }\n\n  renderForm(currencies: Array<any>) {\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"currency\"\n            value={this.state.currency}\n            onChange={this.updateCurrency}>\n            {currencies.map((currency, index) => {\n              return (\n                <option key={index} value={currency}>\n                  {currency.toUpperCase()}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && this.renderForm(currencies)}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                          Buy\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                          Transfer\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                          Sell\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const { bank = '', time = '', buy = {}, transfer = {}, sell = {} } = item;\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buy[currency] || ''}</td>\n                              <td>{transfer[currency] || ''}</td>\n                              <td>{sell[currency] || ''}</td>\n                              <td>{time}</td>\n                            </tr>\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    await this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    await this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.bank}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank.name}>\n                          {bank.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    await this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string) {\n    const message = await apis.syncForexRates(id);\n    alert(message);\n  }\n\n  renderTable(loading: boolean, banks: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', url = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  private loadingText: string = 'LOADING ...';\n\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = {\n      solarDate: '',\n      solarString: this.loadingText,\n      lunarDate: '',\n      lunarString: this.loadingText\n    };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    await this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    const canChi: string = await apis.getCanChi(year, month, date);\n    return helper.capitalize(canChi);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString, lunarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString, solarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    await this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div id=\"FinanceHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.period}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"VIC\"\n                    value={this.state.symbol}\n                    onChange={this.updateSymbol}>\n                    {symbols.map((symbol, index) => {\n                      return (\n                        <option key={index} value={symbol}>\n                          {symbol}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {helper.numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {helper.numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {helper.numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.category}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {helper.capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.source}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsSourcesProps {}\n\ninterface INewsSourcesState {\n  sources: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsSources extends Component<INewsSourcesProps, INewsSourcesState> {\n  constructor(props: INewsSourcesProps) {\n    super(props);\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading: boolean, sources: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category: string, index: number) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n}\n\nexport default class NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [] };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesProviders extends Component<\n  IPhonesProvidersProps,\n  IPhonesProvidersState\n> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading: boolean, providers: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IYouTubeTrendingProps {}\n\ninterface IYouTubeTrendingState {\n  categoryId: string;\n  categories: Array<any>;\n  mapCategories: any;\n  trending: Array<any>;\n  loading: boolean;\n}\n\nexport default class YouTubeTrending extends Component<\n  IYouTubeTrendingProps,\n  IYouTubeTrendingState\n> {\n  constructor(props: IYouTubeTrendingProps) {\n    super(props);\n\n    this.state = {\n      categoryId: '',\n      categories: [],\n      mapCategories: {},\n      trending: [],\n      loading: true\n    };\n\n    this.getYouTubeTrending = this.getYouTubeTrending.bind(this);\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n    this.updateVideoCategory = this.updateVideoCategory.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n    await this.getYouTubeTrending();\n  }\n\n  async getYouTubeVideoCategories() {\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    const mapCategories: any = {};\n    for (const videoCategory of categories) {\n      const { id, title } = videoCategory;\n      mapCategories[id] = title;\n    }\n    this.setState({ categories, mapCategories });\n  }\n\n  async getYouTubeTrending(categoryId: number = 0) {\n    const { mapCategories = {} } = this.state;\n    this.setState({ loading: true });\n    const videos: Array<any> = await apis.getYouTubeTrending(categoryId);\n    const trending = videos.map(video => {\n      const { categoryId } = video;\n      const category: string = mapCategories[categoryId] || '';\n      video.category = category;\n      return video;\n    });\n    this.setState({ trending, loading: false });\n  }\n\n  async updateVideoCategory(event: any) {\n    const { value: categoryId } = event.target;\n    await this.setState({ categoryId });\n    await this.getYouTubeTrending(categoryId);\n  }\n\n  render() {\n    const { trending = [], loading = false, categoryId = '', categories = [] } = this.state;\n\n    const rowConfigs = [\n      { header: 'URL', key: 'url' },\n      { header: 'Title', key: 'title' },\n      { header: 'Category', key: 'category' }\n    ];\n\n    return (\n      <div id=\"YouTubeTrending\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={categoryId}\n                  onChange={this.updateVideoCategory}>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category.id}>\n                        {category.title}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Trending'}\n              rows={trending}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IYouTubeVideoCategoriesProps {}\n\ninterface IYouTubeVideoCategoriesState {\n  categories: Array<any>;\n  loading: boolean;\n}\n\nexport default class YouTubeVideoCategories extends Component<\n  IYouTubeVideoCategoriesProps,\n  IYouTubeVideoCategoriesState\n> {\n  constructor(props: IYouTubeVideoCategoriesProps) {\n    super(props);\n\n    this.state = { categories: [], loading: true };\n\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n  }\n\n  async getYouTubeVideoCategories() {\n    this.setState({ loading: true });\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    this.setState({ categories, loading: false });\n  }\n\n  render() {\n    const { categories = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'ID', key: 'id' },\n      { header: 'Title', key: 'title' },\n      { header: 'Assignable', key: 'assignable' },\n      { header: 'Channel ID', key: 'channelId' }\n    ];\n\n    return (\n      <div id=\"YouTubeVideoCategories\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Video Categories'}\n              rows={categories}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.ministry}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IHistoryDynastiesProps {}\n\ninterface IHistoryDynastiesState {\n  dynasties: Array<any>;\n  loading: boolean;\n}\n\nexport default class HistoryDynasties extends Component<\n  IHistoryDynastiesProps,\n  IHistoryDynastiesState\n> {\n  constructor(props: IHistoryDynastiesProps) {\n    super(props);\n\n    this.state = { dynasties: [], loading: true };\n\n    this.getHistoryDynasties = this.getHistoryDynasties.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getHistoryDynasties();\n  }\n\n  async getHistoryDynasties() {\n    this.setState({ loading: true });\n    const dynasties: Array<any> = await apis.getDynasties();\n    this.setState({ dynasties, loading: false });\n  }\n\n  render() {\n    const { dynasties = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Temple Name', key: 'temple_name' },\n      { header: 'Birth Name', key: 'birth_name' },\n      { header: 'Start', key: 'start_year' },\n      { header: 'End', key: 'end_year' },\n      { header: 'Dynasty', key: 'dynasty' }\n    ];\n\n    return (\n      <div id=\"HistoryDynasties\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Dynasties'}\n              rows={dynasties}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Administrative Divisions\n  AdministrativeDivisions,\n  AdministrativeDivisionsPostalCodes,\n  AdministrativeDivisionsProvinces,\n  AdministrativeDivisionsDistricts,\n  AdministrativeDivisionsWards,\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  // History\n  History,\n  HistoryDynasties,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Music\n  Music,\n  MusicArtists,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Open APIs\n  OpenAPIs,\n  OpenAPIsList,\n  GHNProvinces,\n  GHNDistricts,\n  GHNWards,\n  Vietcetera,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Weather\n  Weather,\n  WeatherCurrent,\n  YouTube,\n  YouTubeTrending,\n  YouTubeVideoCategories\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions',\n    text: 'Administrative Divisions',\n    component: AdministrativeDivisions,\n    navigation: true\n  },\n  {\n    path: 'administrative-divisions-postal-codes',\n    text: 'Administrative Divisions Postal Codes',\n    component: AdministrativeDivisionsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-provinces',\n    text: 'Administrative Divisions Provinces',\n    component: AdministrativeDivisionsProvinces,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-districts',\n    text: 'Administrative Divisions Districts',\n    component: AdministrativeDivisionsDistricts,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-wards',\n    text: 'Administrative Divisions Wards',\n    component: AdministrativeDivisionsWards,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'history',\n    text: 'History',\n    component: History,\n    navigation: true\n  },\n  {\n    path: 'history-dynasties',\n    text: 'History-dynasties',\n    component: HistoryDynasties,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'music',\n    text: 'Music',\n    component: Music,\n    navigation: true\n  },\n  {\n    path: 'music-artists',\n    text: 'Music Artists',\n    component: MusicArtists,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'open-apis',\n    text: 'Open APIs',\n    component: OpenAPIs,\n    navigation: true\n  },\n  {\n    path: 'open-apis-list',\n    text: 'Open APIs List',\n    component: OpenAPIsList,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-provinces',\n    text: 'Open APIs GHN Provinces',\n    component: GHNProvinces,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-districts',\n    text: 'Open APIs GHN Districts',\n    component: GHNDistricts,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-wards',\n    text: 'Open APIs GHN Wards',\n    component: GHNWards,\n    navigation: false\n  },\n  {\n    path: 'open-apis-vietcetera',\n    text: 'Open APIs Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'weather',\n    text: 'Weather',\n    component: Weather,\n    navigation: true\n  },\n  {\n    path: 'weather-current',\n    text: 'Weather Current',\n    component: WeatherCurrent,\n    navigation: false\n  },\n  {\n    path: 'youtube',\n    text: 'YouTube',\n    component: YouTube,\n    navigation: true\n  },\n  {\n    path: 'youtube-trending',\n    text: 'YouTube Trending',\n    component: YouTubeTrending,\n    navigation: false\n  },\n  {\n    path: 'youtube-video-categories',\n    text: 'YouTube Video Categories',\n    component: YouTubeVideoCategories,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\ninterface IHomeProps {}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n  externalPackages: Array<any>;\n  filterExternalPackages: Array<any>;\n}\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis = [\n      {\n        name: 'administrative-divisions',\n        npm: 'vnapis#administrative-divisions',\n        docs: '/administrative-divisions'\n      },\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'music',\n        npm: 'vnapis#music',\n        docs: '/music'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'open-apis',\n        npm: '',\n        docs: '/open-apis'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis,\n      externalPackages: [],\n      filterExternalPackages: []\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    await this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title: string, packages: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IMusicArtistsProps {}\n\ninterface IMusicArtistsState {\n  artists: Array<any>;\n  loading: boolean;\n}\n\nexport default class MusicArtists extends Component<IMusicArtistsProps, IMusicArtistsState> {\n  constructor(props: IMusicArtistsProps) {\n    super(props);\n\n    this.state = { artists: [], loading: true };\n\n    this.getMusicArtists = this.getMusicArtists.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMusicArtists();\n  }\n\n  async getMusicArtists() {\n    this.setState({ loading: true });\n    const artists: Array<any> = await apis.getMusicArtists();\n    this.setState({ artists, loading: false });\n  }\n\n  render() {\n    const { artists = [], loading = false } = this.state;\n\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n\n    return (\n      <div id=\"MusicArtists\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Artists'}\n              rows={artists}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IOpenAPIsListProps {}\n\ninterface IOpenAPIsListState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nexport default class OpenAPIsList extends Component<IOpenAPIsListProps, IOpenAPIsListState> {\n  constructor(props: IOpenAPIsListProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getOpenAPIs = this.getOpenAPIs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getOpenAPIs();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getOpenAPIs() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getOpenAPIs();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading: boolean, filterTechnologies: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                Open APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"OpenAPIsList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Provinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Provinces</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IDistrictsProps {}\n\ninterface IDistrictsState {\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { districts: [], loading: true };\n\n    this.getGHNDistricts = this.getGHNDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNDistricts();\n  }\n\n  async getGHNDistricts() {\n    this.setState({ loading: true });\n    const districts = await apis.getGHNDistricts();\n    this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' },\n      { header: 'Type', key: 'type' },\n      { header: 'Support Type', key: 'support_type' }\n    ];\n\n    return (\n      <div id=\"Districts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Districts</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getGHNWards = this.getGHNWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNWards();\n  }\n\n  async getGHNWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getGHNWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Wards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Wards</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nexport default class Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.type}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IWeatherCurrentProps {}\n\ninterface IWeatherCurrentState {\n  result: any;\n  loading: boolean;\n}\n\nexport default class WeatherCurrent extends Component<IWeatherCurrentProps, IWeatherCurrentState> {\n  constructor(props: IWeatherCurrentProps) {\n    super(props);\n\n    this.state = { result: {}, loading: true };\n\n    this.getWeatherCurrent = this.getWeatherCurrent.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWeatherCurrent();\n  }\n\n  async getWeatherCurrent() {\n    this.setState({ loading: true });\n    const result: Array<any> = await apis.getCurrentWeather('hanoi');\n    this.setState({ result, loading: false });\n  }\n\n  render() {\n    const { result = {} } = this.state;\n\n    const { main = {}, weather = [] } = result;\n    const [first = {}] = weather;\n    const { description = '' } = first;\n    const { temp = 0, feels_like = 0, temp_min = 0, temp_max = 0 } = main;\n\n    return (\n      <div id=\"WeatherCurrent\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <div className=\"mb-3\">\n              <p className=\"m-0 text-center\">{description.toUpperCase()}</p>\n              <h1 className=\"text-center\">{temp}&deg;C</h1>\n              <p className=\"m-0 text-center\">Feels Like: {feels_like}&deg;C</p>\n              <p className=\"m-0 text-center\">\n                Min: {temp_min}&deg;C - Max: {temp_max}&deg;C\n              </p>\n            </div>\n            <div className=\"p-3 bg-dark rounded\">\n              <pre className=\"m-0 text-white\">{JSON.stringify(result, null, 2)}</pre>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}