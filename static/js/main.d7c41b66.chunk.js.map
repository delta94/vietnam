{"version":3,"sources":["configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/index.ts","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","components/Navigation.tsx","components/SmallDoc.tsx","pages/demo/administrative-divisions/Districts.tsx","pages/demo/administrative-divisions/PostalCodes.tsx","pages/demo/administrative-divisions/Provinces.tsx","pages/demo/administrative-divisions/Wards.tsx","pages/demo/banks/Forex.tsx","pages/demo/banks/History.tsx","pages/demo/banks/List.tsx","pages/demo/calendar/Converter.tsx","pages/docs/AdministrativeDivisions.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/LicensePlates.tsx","pages/docs/Music.tsx","pages/docs/News.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Technologies.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/music/Artists.tsx","pages/demo/news/Feed.tsx","routers/index.ts","pages/demo/news/Sources.tsx","pages/demo/news/Trends.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/sports/Clubs.tsx","pages/demo/technologies/APIs.tsx","pages/demo/technologies/ghn/Provinces.tsx","pages/demo/technologies/ghn/Districts.tsx","pages/demo/technologies/ghn/Wards.tsx","pages/demo/technologies/Vietcetera.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","periods","label","value","months","name","short","endpoints","administrativeDivisions","getPostalCodes","id","public","method","path","url","demo","request","headers","key","query","type","required","description","body","response","200","schema","example","code","province","province_id","400","message","getProvinces","capital","level","level_en","macro_region","macro_region_en","region","region_en","getDistricts","getWards","ward","district","banks","getForexBanks","getForexRates","currencies","data","syncForexRates","status","calendar","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","ethnicMinorities","getEthnicMinorities","type_en","finance","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHistory","history","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","calculateProfit","profit","government","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","percentage","getMinistries","name_en","getMinisters","licensePlates","getLicensePlates","license","definition","music","getMusicArtists","news","getArticles","source","pubDate","day","hours","minutes","seconds","timestamp","dateTimeString","getTrends","hour","categories","getSources","category","getCategories","total","phones","getPhonesPrefixes","prefix","provider","provider_id","getPhonesProviders","prefixes","sports","getSportsClubs","sport","sport_en","competition","city","technologies","getTechnologies","type_id","npm","getGHNProvinces","getGHNDistricts","district_id","support_type","getGHNWards","getVietceteraArticles","publishDate","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","articles","buy","sell","volume","from","to","currency","bank","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","apis","helper","API","props","api","className","onClick","copyToClipboard","Component","CURL","bind","buildDataRaw","trim","dataRaw","header","index","lastFlag","Table","loading","caption","rows","rowConfigs","emptyRowsText","Spinner","animation","variant","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","state","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","getFullYear","href","target","rel","Navigation","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","route","navigation","as","Link","SmallDoc","renderSidebar","renderTable","scrollIntoView","element","document","getElementById","behavior","colors","get","post","color","toLowerCase","MapsDistricts","provinces","districts","updateProvince","setState","event","Card","Body","Form","Group","Control","defaultValue","onChange","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","wards","BanksForex","sortBy","sortDir","getBanksForexRates","sort","renderForm","updateCurrency","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","time","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","find","rates","rate","labels","minute","datasets","buyData","transferData","sellData","lines","deepClone","assign","Title","BanksList","Button","CalendarConverter","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","capitalize","split","controlId","Label","placeholder","pattern","Maps","Banks","Calendar","Docs","Accordion","Toggle","Collapse","groups","EthnicMinorities","Finance","Government","LicensePlates","Music","News","Phones","Sports","Technologies","EthnicMinoritiesList","filterEthnicMinorities","ethnicMinority","typeFlag","typeEnFlag","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","processPeriod","highlight","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","concat","array","indexOf","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","Home","docs","filterAPIs","externalPackages","filterExternalPackages","filterPackages","updateQuery","packages","_package","LicensePlatesList","filterLicensePlates","licensePlate","MusicArtists","artists","NewsFeed","sources","updateCategory","updateSource","ListGroup","article","Subtitle","Text","component","AdministrativeDivisions","AdministrativeDivisionsPostalCodes","AdministrativeDivisionsProvinces","AdministrativeDivisionsDistricts","AdministrativeDivisionsWards","Badge","getGoogleTrends","trend","providers","_provider","clubs","filterTechnologies","technology","nameFlag","option","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d7c41b66.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\ninterface IPeriod {\n  label: string;\n  value: string;\n}\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\ninterface IMonth {\n  name: string;\n  short: string;\n}\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'administrativeDivisions'\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'music'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport interface IEndpoints {\n  administrativeDivisions: IAdministrativeDivisionsEndpoints;\n  banks: IBanksEndpoints;\n  calendar: ICalendarEndpoints;\n  ethnicMinorities: IEthnicMinoritiesEndpoints;\n  finance: IFinanceEndpoints;\n  government: IGovernmentEndpoints;\n  licensePlates: ILicensePlatesEndpoints;\n  music: IMusicEndpoints;\n  news: INewsEndpoints;\n  phones: IPhonesEndpoints;\n  sports: ISportsEndpoints;\n  technologies: ITechnologiesEndpoints;\n}\n\ninterface IAdministrativeDivisionsEndpoints {\n  getPostalCodes: IEndpoint;\n  getProvinces: IEndpoint;\n  getDistricts: IEndpoint;\n  getWards: IEndpoint;\n}\n\ninterface IBanksEndpoints {\n  getForexBanks: IEndpoint;\n  getForexRates: IEndpoint;\n  syncForexRates: IEndpoint;\n}\ninterface ICalendarEndpoints {\n  convertLunarToSolar: IEndpoint;\n  convertSolarToLunar: IEndpoint;\n  getCanChi: IEndpoint;\n}\ninterface IEthnicMinoritiesEndpoints {\n  getEthnicMinorities: IEndpoint;\n}\ninterface IFinanceEndpoints {\n  getStockCompanies: IEndpoint;\n  getStockHistory: IEndpoint;\n  getStockHighlights: IEndpoint;\n  getStockPotentials: IEndpoint;\n  calculateProfit: IEndpoint;\n}\ninterface IGovernmentEndpoints {\n  getGeneralSecretaries: IEndpoint;\n  getPresidents: IEndpoint;\n  getPrimeMinisters: IEndpoint;\n  getNationalAssemblyChairs: IEndpoint;\n  getNationalAssemblyMembers: IEndpoint;\n  getMinistries: IEndpoint;\n  getMinisters: IEndpoint;\n}\ninterface ILicensePlatesEndpoints {\n  getLicensePlates: IEndpoint;\n}\n\ninterface IMusicEndpoints {\n  getMusicArtists: IEndpoint;\n}\n\ninterface INewsEndpoints {\n  getArticles: IEndpoint;\n  getTrends: IEndpoint;\n  getSources: IEndpoint;\n  getCategories: IEndpoint;\n}\ninterface IPhonesEndpoints {\n  getPhonesPrefixes: IEndpoint;\n  getPhonesProviders: IEndpoint;\n}\ninterface ISportsEndpoints {\n  getSportsClubs: IEndpoint;\n}\ninterface ITechnologiesEndpoints {\n  getTechnologies: IEndpoint;\n  getGHNProvinces: IEndpoint;\n  getGHNDistricts: IEndpoint;\n  getGHNWards: IEndpoint;\n  getVietceteraArticles: IEndpoint;\n}\n\nexport interface IEndpoint {\n  id: string;\n  public: boolean;\n  name: string;\n  path: string;\n  url: string;\n  demo: string;\n  method: string;\n  request: IEndpointRequest;\n  response: IEndpointResponse;\n}\n\nexport interface IEndpointRequest {\n  headers?: Array<IEndpointRequestHeader>;\n  query: Array<IEndpointRequestQuery>;\n  body: Array<IEndpointRequestBody>;\n}\n\ninterface IEndpointRequestHeader {\n  key: string;\n  value: string;\n}\n\ninterface IEndpointRequestQuery {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointRequestBody {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointResponse {\n  200: IEndpointResponseDetails;\n  400: IEndpointResponseDetails;\n}\n\ninterface IEndpointResponseDetails {\n  schema: Array<IEndpointResponseSchema>;\n  example: any;\n}\n\ninterface IEndpointResponseSchema {\n  name: string;\n  type: string;\n  description: string;\n}\n\nexport const endpoints: IEndpoints = {\n  administrativeDivisions: {\n    getPostalCodes: {\n      id: 'getPostalCodes',\n      name: 'Get Postal Codes',\n      public: true,\n      method: 'GET',\n      path: '/administrative-divisions/postal-codes',\n      url: `${baseAPI}/administrative-divisions/postal-codes`,\n      demo: 'maps-postal-codes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'code', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              code: '<string>',\n              province: '<string>',\n              province_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getProvinces: {\n      id: 'getProvinces',\n      name: 'Get Provinces',\n      public: true,\n      method: 'GET',\n      path: '/administrative-divisions/provinces',\n      url: `${baseAPI}/administrative-divisions/provinces`,\n      demo: 'maps-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'level_en', type: 'string', required: false, description: '' },\n          { name: 'macro_region_en', type: 'string', required: false, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'capital', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'macro_region', type: 'string', description: '' },\n            { name: 'macro_region_en', type: 'string', description: '' },\n            { name: 'region', type: 'string', description: '' },\n            { name: 'region_en', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              province_id: '<string>',\n              name: '<string>',\n              capital: '<string>',\n              level: '<string>',\n              level_en: '<string>',\n              macro_region: '<string>',\n              macro_region_en: '<string>',\n              region: '<string>',\n              region_en: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getDistricts: {\n      id: 'getDistricts',\n      name: 'Get Districts',\n      public: true,\n      method: 'GET',\n      path: '/administrative-divisions/districts',\n      url: `${baseAPI}/administrative-divisions/districts`,\n      demo: 'maps-districts',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              name: '<string>',\n              level: '<string>',\n              level_en: '<string>',\n              province: '<string>',\n              province_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getWards: {\n      id: 'getWards',\n      name: 'Get Wards',\n      public: true,\n      method: 'GET',\n      path: '/administrative-divisions/wards',\n      url: `${baseAPI}/administrative-divisions/wards`,\n      demo: 'maps-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'skip', type: 'number', required: false, description: '' },\n          { name: 'limit', type: 'number', required: false, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'ward', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              ward: '<string>',\n              district: '<string>',\n              province: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  banks: {\n    getForexBanks: {\n      id: 'getForexBanks',\n      name: 'Get Forex Banks',\n      public: true,\n      path: '/banks/forex/banks',\n      url: `${baseAPI}/banks/forex/banks`,\n      demo: 'banks-list',\n      method: 'GET',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' }\n          ],\n          example: [{ id: '<string>', name: '<string>', url: '<string>' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getForexRates: {\n      id: 'getForexRates',\n      name: 'Get Forex Rates',\n      public: true,\n      method: 'GET',\n      path: '/banks/forex/rates',\n      url: `${baseAPI}/banks/forex/rates`,\n      demo: 'banks-forex',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'currencies', type: 'Array<string>', description: '' },\n            { name: 'data', type: 'Array<Rates>', description: '' }\n          ],\n          example: {\n            currencies: '<Array<string>>',\n            data: '<Array<any>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    syncForexRates: {\n      id: 'syncForexRates',\n      name: 'Sync Forex Rates',\n      public: false,\n      method: 'POST',\n      path: '/banks/forex/sync',\n      url: `${baseAPI}/banks/forex/sync`,\n      demo: 'banks-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'id', required: true, type: 'string', description: '' }]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'status', type: 'string', description: '' }],\n          example: { status: '<string>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  calendar: {\n    convertLunarToSolar: {\n      id: 'convertLunarToSolar',\n      name: 'Convert Lunar Date to Solar Date',\n      public: true,\n      method: 'POST',\n      path: '/calendar/lunar2solar',\n      url: `${baseAPI}/calendar/lunar2solar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: { year: '<number>', month: '<number>', date: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    convertSolarToLunar: {\n      id: 'convertSolarToLunar',\n      name: 'Convert Solar Date to Lunar Date',\n      public: true,\n      method: 'POST',\n      path: '/calendar/solar2lunar',\n      url: `${baseAPI}/calendar/solar2lunar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: { year: '<number>', month: '<number>', date: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getCanChi: {\n      id: 'getCanChi',\n      name: 'Get Can Chi of Lunar Date',\n      public: true,\n      method: 'POST',\n      path: '/calendar/lunar/can-chi',\n      url: `${baseAPI}/calendar/lunar/can-chi`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'canChi', type: 'string', description: '' }],\n          example: { canChi: '<string>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  ethnicMinorities: {\n    getEthnicMinorities: {\n      id: 'getEthnicMinorities',\n      name: 'Get Ethnic Minorities',\n      public: true,\n      method: 'GET',\n      path: '/ethnic-minorities',\n      url: `${baseAPI}/ethnic-minorities`,\n      demo: 'ethnic-minorities-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_en', type: 'string', description: '' }\n          ],\n          example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  finance: {\n    getStockCompanies: {\n      id: 'getStockCompanies',\n      name: 'Get Listed Companies',\n      public: true,\n      method: 'GET',\n      path: '/finance/companies',\n      url: `${baseAPI}/finance/companies`,\n      demo: 'finance-companies',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'market', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'supersector', type: 'string', description: '' },\n            { name: 'sector', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'listingDate', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              market: '<string>',\n              group: '<string>',\n              symbol: '<string>',\n              name: '<string>',\n              industry: '<string>',\n              supersector: '<string>',\n              sector: '<string>',\n              subsector: '<string>',\n              listingDate: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockHistory: {\n      id: 'getStockHistory',\n      name: 'Get Stock History',\n      public: true,\n      method: 'GET',\n      path: '/finance/history',\n      url: `${baseAPI}/finance/history`,\n      demo: 'finance-history',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'symbol', type: 'string', required: true, description: '' },\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'history', type: 'Array<Date>', description: '' }\n          ],\n          example: {\n            symbol: '<string>',\n            name: '<string>',\n            group: '<string>',\n            industry: '<string>',\n            subsector: '<string>',\n            history: '<Array<any>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockHighlights: {\n      id: 'getStockHighlights',\n      name: 'Get Stock Highlights',\n      public: false,\n      method: 'POST',\n      path: '/finance/highlights',\n      url: `${baseAPI}/finance/highlights`,\n      demo: 'finance-highlights',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'average', type: 'number', description: '' },\n            { name: 'diff', type: 'number', description: '' },\n            { name: 'diffToMax', type: 'number', description: '' },\n            { name: 'diffToMin', type: 'number', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'latest', type: 'number', description: '' },\n            { name: 'latestDate', type: 'string', description: '' },\n            { name: 'low', type: 'boolean', description: '' },\n            { name: 'max', type: 'number', description: '' },\n            { name: 'maxDate', type: 'string', description: '' },\n            { name: 'median', type: 'number', description: '' },\n            { name: 'min', type: 'number', description: '' },\n            { name: 'minDate', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'numberOfDates', type: 'number', description: '' },\n            { name: 'start', type: 'number', description: '' },\n            { name: 'startDate', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              average: '<number>',\n              diff: '<number>',\n              diffToMax: '<number>',\n              diffToMin: '<number>',\n              group: '<string>',\n              industry: '<string>',\n              latest: '<number>',\n              latestDate: '<string>',\n              low: '<boolean>',\n              max: '<number>',\n              maxDate: '<string>',\n              median: '<number>',\n              min: '<number>',\n              minDate: '<string>',\n              name: '<string>',\n              numberOfDates: '<number>',\n              start: '<number>',\n              startDate: '<string>',\n              subsector: '<string>',\n              symbol: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockPotentials: {\n      id: 'getStockPotentials',\n      name: 'Get Stock Potentials',\n      public: false,\n      method: 'POST',\n      path: '/finance/potentials',\n      url: `${baseAPI}/finance/potentials`,\n      demo: 'finance-potentials',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'average', type: 'number', description: '' },\n            { name: 'diff', type: 'number', description: '' },\n            { name: 'diffToMax', type: 'number', description: '' },\n            { name: 'diffToMin', type: 'number', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'latest', type: 'number', description: '' },\n            { name: 'latestDate', type: 'string', description: '' },\n            { name: 'low', type: 'boolean', description: '' },\n            { name: 'max', type: 'number', description: '' },\n            { name: 'maxDate', type: 'string', description: '' },\n            { name: 'median', type: 'number', description: '' },\n            { name: 'min', type: 'number', description: '' },\n            { name: 'minDate', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'numberOfDates', type: 'number', description: '' },\n            { name: 'start', type: 'number', description: '' },\n            { name: 'startDate', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              average: '<number>',\n              diff: '<number>',\n              diffToMax: '<number>',\n              diffToMin: '<number>',\n              group: '<string>',\n              industry: '<string>',\n              latest: '<number>',\n              latestDate: '<string>',\n              low: '<boolean>',\n              max: '<number>',\n              maxDate: '<string>',\n              median: '<number>',\n              min: '<number>',\n              minDate: '<string>',\n              name: '<string>',\n              numberOfDates: '<number>',\n              start: '<number>',\n              startDate: '<string>',\n              subsector: '<string>',\n              symbol: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    calculateProfit: {\n      id: 'calculateProfit',\n      name: 'Calculate Profit',\n      public: false,\n      method: 'POST',\n      path: '/finance/profit',\n      url: `${baseAPI}/finance/profit`,\n      demo: 'finance-profit',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'buy', type: 'number', required: true, description: '' },\n          { name: 'sell', type: 'number', required: true, description: '' },\n          { name: 'volume', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'profit', type: 'number', description: '' }],\n          example: { profit: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  government: {\n    getGeneralSecretaries: {\n      id: 'getGeneralSecretaries',\n      name: 'Get General Secretaries',\n      public: true,\n      method: 'GET',\n      path: '/government/general-secretaries',\n      url: `${baseAPI}/government/general-secretaries`,\n      demo: 'government-general-secretaries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'string', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPresidents: {\n      id: 'getPresidents',\n      name: 'Get Presidents',\n      public: true,\n      method: 'GET',\n      path: '/government/presidents',\n      url: `${baseAPI}/government/presidents`,\n      demo: 'government-presidents',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPrimeMinisters: {\n      id: 'getPrimeMinisters',\n      name: 'Get Prime Ministers',\n      public: true,\n      method: 'GET',\n      path: '/government/prime-ministers',\n      url: `${baseAPI}/government/prime-ministers`,\n      demo: 'government-prime-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getNationalAssemblyChairs: {\n      id: 'getNationalAssemblyChairs',\n      name: 'Get National Assembly Chairs',\n      public: true,\n      method: 'GET',\n      path: '/government/national-assembly/chairs',\n      url: `${baseAPI}/government/national-assembly/chairs`,\n      demo: 'government-national-assembly-chairs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getNationalAssemblyMembers: {\n      id: 'getNationalAssemblyMembers',\n      name: 'Get National Assembly Members',\n      public: true,\n      method: 'GET',\n      path: '/government/national-assembly/members',\n      url: `${baseAPI}/government/national-assembly/members`,\n      demo: 'government-national-assembly-members',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'no', type: 'number', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'no', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'date_of_birth', type: 'string', description: '' },\n            { name: 'city_of_birth', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'degree', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'percentage', type: 'number', description: '' }\n          ],\n          example: [\n            {\n              no: '<number>',\n              name: '<string>',\n              date_of_birth: '<string>',\n              city_of_birth: '<string>',\n              gender: '<string>',\n              degree: '<string>',\n              province: '<string>',\n              district: '<string>',\n              percentage: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMinistries: {\n      id: 'getMinistries',\n      name: 'Get Ministries',\n      public: true,\n      method: 'GET',\n      path: '/government/ministries',\n      url: `${baseAPI}/government/ministries`,\n      demo: 'government-ministries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'name_en', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              short: '<string>',\n              name: '<string>',\n              name_en: '<string>',\n              level: '<string>',\n              level_en: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMinisters: {\n      id: 'getMinisters',\n      name: 'Get Ministers',\n      public: true,\n      method: 'GET',\n      path: '/government/ministers',\n      url: `${baseAPI}/government/ministers`,\n      demo: 'government-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  licensePlates: {\n    getLicensePlates: {\n      id: 'getLicensePlates',\n      name: 'Get License Plates',\n      public: true,\n      method: 'GET',\n      path: '/license-plates',\n      url: `${baseAPI}/license-plates`,\n      demo: 'license-plates-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'license', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'license', type: 'string', description: '' },\n            { name: 'definition', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' }\n          ],\n          example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  music: {\n    getMusicArtists: {\n      id: 'getMusicArtists',\n      name: 'Get Music Artists',\n      public: true,\n      method: 'GET',\n      path: '/music/artists',\n      url: `${baseAPI}/music/artists`,\n      demo: 'music-artists',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [{ name: 'name', type: 'string', description: '' }],\n          example: [\n            {\n              name: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  news: {\n    getArticles: {\n      id: 'getArticles',\n      name: 'Get Articles',\n      public: true,\n      method: 'GET',\n      path: '/news',\n      url: `${baseAPI}/news`,\n      demo: 'news-feed',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'category', type: 'string', required: true, description: '' },\n          { name: 'source', type: 'string', required: true, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'source', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' },\n            { name: 'pubDate', type: 'string', description: '' },\n            { name: 'day', type: 'string', description: '' },\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hours', type: 'number', description: '' },\n            { name: 'minutes', type: 'number', description: '' },\n            { name: 'seconds', type: 'number', description: '' },\n            { name: 'timestamp', type: 'number', description: '' },\n            { name: 'dateTimeString', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              url: '<string>',\n              source: '<string>',\n              description: '<string>',\n              pubDate: '<string>',\n              day: '<string>',\n              year: '<number>',\n              month: '<number>',\n              date: '<number>',\n              hours: '<number>',\n              minutes: '<number>',\n              seconds: '<number>',\n              timestamp: '<number>',\n              dateTimeString: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getTrends: {\n      id: 'getTrends',\n      name: 'Get (Google) Trends',\n      public: true,\n      method: 'GET',\n      path: '/news/trends',\n      url: `${baseAPI}/news/trends`,\n      demo: 'news-trends',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hour', type: 'number', description: '' },\n            { name: 'trends', type: 'Array<string>', description: '' }\n          ],\n          example: {\n            year: '<number>',\n            month: '<number>',\n            date: '<number>',\n            hour: '<number>',\n            categories: '<Array<string>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getSources: {\n      id: 'getSources',\n      name: 'Get Sources',\n      public: true,\n      method: 'GET',\n      path: '/news/sources',\n      url: `${baseAPI}/news/sources`,\n      demo: 'news-sources',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'category', type: 'string', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ],\n          example: [\n            {\n              id: '<string>',\n              name: '<string>',\n              url: '<string>',\n              category: '<string>',\n              categories: '<Array<string>>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getCategories: {\n      id: 'getCategories',\n      name: 'Get Categories',\n      public: true,\n      method: 'GET',\n      path: '/news/categories',\n      url: `${baseAPI}/news/categories`,\n      demo: 'news-categories',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'total', type: 'number', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ],\n          example: {\n            total: '<number>',\n            categories: '<Array<string>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  phones: {\n    getPhonesPrefixes: {\n      id: 'getPhonesPrefixes',\n      name: 'Get Phone Prefixes',\n      public: true,\n      method: 'GET',\n      path: '/phones/prefixes',\n      url: `${baseAPI}/phones/prefixes`,\n      demo: 'phones-prefixes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'prefix', type: 'string', description: '' },\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'provider_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              id: '<string>',\n              prefix: '<string>',\n              provider: '<string>',\n              provider_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPhonesProviders: {\n      id: 'getPhonesProviders',\n      name: 'Get Phone Providers',\n      public: true,\n      method: 'GET',\n      path: '/phones/providers',\n      url: `${baseAPI}/phones/providers`,\n      demo: 'phones-providers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'prefixes', type: 'Array<string>', description: '' }\n          ],\n          example: [\n            {\n              provider: '<string>',\n              prefixes: '<Array<string>>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  sports: {\n    getSportsClubs: {\n      id: 'getSportsClubs',\n      name: 'Get Sports Clubs',\n      public: true,\n      method: 'GET',\n      path: '/sports/clubs',\n      url: `${baseAPI}/sports/clubs`,\n      demo: 'sports-clubs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'sport', type: 'string', description: '' },\n            { name: 'sport_en', type: 'string', description: '' },\n            { name: 'competition', type: 'string', description: '' },\n            { name: 'city', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              sport: '<string>',\n              sport_en: '<string>',\n              competition: '<string>',\n              city: '<string>',\n              name: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  technologies: {\n    getTechnologies: {\n      id: 'getTechnologies',\n      name: 'Get Public APIs',\n      public: true,\n      method: 'GET',\n      path: '/technologies',\n      url: `${baseAPI}/technologies`,\n      demo: 'technologies-apis',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_id', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'npm', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              name: '<string>',\n              type: '<string>',\n              type_id: '<string>',\n              url: '<string>',\n              npm: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getGHNProvinces: {\n      id: 'getGHNProvinces',\n      name: 'GHN - Get Provinces',\n      public: true,\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/provinces',\n      url: `${baseAPI}/technologies/giaohangnhanh/provinces`,\n      demo: 'technologies-ghn-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              province_id: '<string>',\n              name: '<string>',\n              code: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getGHNDistricts: {\n      id: 'getGHNDistricts',\n      name: 'GHN - Get Districts',\n      public: true,\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/districts',\n      url: `${baseAPI}/technologies/giaohangnhanh/districts`,\n      demo: 'technologies-ghn-districts',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'number', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'district_id', type: 'number', description: '' },\n            { name: 'province_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' },\n            { name: 'type', type: 'number', description: '' },\n            { name: 'support_type', type: 'number', description: '' }\n          ],\n          example: [\n            {\n              district_id: '<string>',\n              province_id: '<string>',\n              name: '<string>',\n              code: '<string>',\n              type: '<number>',\n              support_type: '<number>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getGHNWards: {\n      id: 'getGHNWards',\n      name: 'GHN - Get Wards',\n      public: true,\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/wards',\n      url: `${baseAPI}/technologies/giaohangnhanh/wards`,\n      demo: 'technologies-ghn-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'district_id', type: 'number', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'district_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              district_id: '<string>',\n              name: '<string>',\n              code: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getVietceteraArticles: {\n      id: 'getVietceteraArticles',\n      name: 'Get Vietcetera Articles',\n      public: true,\n      method: 'GET',\n      path: '/technologies/vietcetera',\n      url: `${baseAPI}/technologies/vietcetera`,\n      demo: 'technologies-vietcetera',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'publishDate', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              url: '<string>',\n              publishDate: '<string>',\n              description: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  }\n};\n","import { endpoints, IEndpoint } from '../configs';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries() {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents() {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters() {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs() {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number) {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries() {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string) {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends() {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources() {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCategories() {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint);\n    return categories;\n  }\n\n  public async getArticles(options: any = {}) {\n    const { category, source } = options;\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number) {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies() {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: {}, query: { symbol, from, to } });\n  }\n\n  public async getBanksForexRates() {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks() {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  public async syncForexRates(id: string) {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getPostalCodes() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProvinces() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDistricts(province_id: string) {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getWards() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates() {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities() {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getTechnologies() {\n    const endpoint: IEndpoint = endpoints.technologies.getTechnologies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesProviders() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesPrefixes() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string) {\n    const endpoint: IEndpoint = endpoints.technologies.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n\n  public async getGHNProvinces() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNDistricts() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNWards() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMusicArtists() {\n    const endpoint: IEndpoint = endpoints.music.getMusicArtists;\n    return await this.fetch(endpoint);\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\n\nexport { apis, graphql, helper };\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n}\n\nexport default class API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n}\n\nexport default class Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data'\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\n\nexport default class Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">\n                    <b>{name}</b>\n                  </h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className=\"mb-3\">\n          <b>{header}</b>\n        </h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavigationProps {}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path: pathname, text } = route;\n                      return (\n                        <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Doc from './Doc';\nimport { endpoints, IEndpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n}\n\ninterface ISmallDocState {\n  endpoints: IEndpoints;\n}\n\nexport default class SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header } = this.props;\n    const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n    return (\n      <div>\n        <h6>\n          <b>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.getDistricts = this.getDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  async getProvinces() {\n    const provinces = await apis.getProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={this.state.province_id}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getWards = this.getWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWards();\n  }\n\n  async getWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Ward', key: 'ward' },\n      { header: 'District', key: 'district' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksForexProps {}\n\ninterface IBanksForexState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nexport default class BanksForex extends Component<IBanksForexProps, IBanksForexState> {\n  constructor(props: IBanksForexProps) {\n    super(props);\n\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.updateCurrency = this.updateCurrency.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    await this.setState({ data });\n  }\n\n  async updateCurrency(event: any) {\n    const { value: currency } = event.target;\n    await this.setState({ currency });\n  }\n\n  renderForm(currencies: Array<any>) {\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"currency\"\n            value={this.state.currency}\n            onChange={this.updateCurrency}>\n            {currencies.map((currency, index) => {\n              return (\n                <option key={index} value={currency}>\n                  {currency.toUpperCase()}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && this.renderForm(currencies)}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                          Buy\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                          Transfer\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                          Sell\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const { bank = '', time = '', buy = {}, transfer = {}, sell = {} } = item;\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buy[currency] || ''}</td>\n                              <td>{transfer[currency] || ''}</td>\n                              <td>{sell[currency] || ''}</td>\n                              <td>{time}</td>\n                            </tr>\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    await this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    await this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.bank}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank.name}>\n                          {bank.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    await this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string) {\n    const message = await apis.syncForexRates(id);\n    alert(message);\n  }\n\n  renderTable(loading: boolean, banks: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', url = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = { solarDate: '', solarString: '', lunarDate: '', lunarString: '' };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    await this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    return await apis.getCanChi(year, month, date);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"AdministrativeDivisions\" className=\"container\">\n        <SmallDoc group={'administrativeDivisions'} header={'Administrative Divisions'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints, IEndpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {}\n\ninterface IDocsState {\n  endpoints: IEndpoints;\n}\n\nexport default class Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n      return { group, apis };\n    });\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.capitalize(group);\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className=\"m-0 p-0 text-dark\"\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              {groups.length > 0 &&\n                groups.map((group: string, index: number) => {\n                  return <Doc key={index} group={group} header={helper.capitalize(group)}></Doc>;\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Music extends Component {\n  render() {\n    return (\n      <div id=\"Music\" className=\"container\">\n        <SmallDoc group={'music'} header={'Music'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\" className=\"container\">\n        <SmallDoc group={'technologies'} header={'Technologies'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    await this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div id=\"FinanceHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.period}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"VIC\"\n                    value={this.state.symbol}\n                    onChange={this.updateSymbol}>\n                    {symbols.map((symbol, index) => {\n                      return (\n                        <option key={index} value={symbol}>\n                          {symbol}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {helper.numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {helper.numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {helper.numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.ministry}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\ninterface IHomeProps {}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n  externalPackages: Array<any>;\n  filterExternalPackages: Array<any>;\n}\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: 'vnapis#maps',\n        docs: '/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis,\n      externalPackages: [],\n      filterExternalPackages: []\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    await this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title: string, packages: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IMusicArtistsProps {}\n\ninterface IMusicArtistsState {\n  artists: Array<any>;\n  loading: boolean;\n}\n\nexport default class MusicArtists extends Component<IMusicArtistsProps, IMusicArtistsState> {\n  constructor(props: IMusicArtistsProps) {\n    super(props);\n\n    this.state = { artists: [], loading: true };\n\n    this.getMusicArtists = this.getMusicArtists.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMusicArtists();\n  }\n\n  async getMusicArtists() {\n    this.setState({ loading: true });\n    const artists: Array<any> = await apis.getMusicArtists();\n    this.setState({ artists, loading: false });\n  }\n\n  render() {\n    const { artists = [], loading = false } = this.state;\n\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n\n    return (\n      <div id=\"MusicArtists\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Artists'}\n              rows={artists}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.category}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {helper.capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.source}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Administrative Divisions\n  AdministrativeDivisions,\n  AdministrativeDivisionsPostalCodes,\n  AdministrativeDivisionsProvinces,\n  AdministrativeDivisionsDistricts,\n  AdministrativeDivisionsWards,\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Music\n  Music,\n  MusicArtists,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Technologies\n  Technologies,\n  APIs,\n  GHNProvinces,\n  GHNDistricts,\n  GHNWards,\n  Vietcetera\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions',\n    text: 'Administrative Divisions',\n    component: AdministrativeDivisions,\n    navigation: true\n  },\n  {\n    path: 'administrative-divisions-postal-codes',\n    text: 'Administrative Divisions Postal Codes',\n    component: AdministrativeDivisionsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-provinces',\n    text: 'Administrative Divisions Provinces',\n    component: AdministrativeDivisionsProvinces,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-districts',\n    text: 'Administrative Divisions Districts',\n    component: AdministrativeDivisionsDistricts,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-wards',\n    text: 'Administrative Divisions Wards',\n    component: AdministrativeDivisionsWards,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'music',\n    text: 'Music',\n    component: Music,\n    navigation: true\n  },\n  {\n    path: 'music-artists',\n    text: 'Music Artists',\n    component: MusicArtists,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies,\n    navigation: true\n  },\n  {\n    path: 'technologies-apis',\n    text: 'Technologies APIs',\n    component: APIs,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-provinces',\n    text: 'Technologies GHN Provinces',\n    component: GHNProvinces,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-districts',\n    text: 'Technologies GHN Districts',\n    component: GHNDistricts,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-wards',\n    text: 'Technologies GHN Wards',\n    component: GHNWards,\n    navigation: false\n  },\n  {\n    path: 'technologies-vietcetera',\n    text: 'Technologies Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsSourcesProps {}\n\ninterface INewsSourcesState {\n  sources: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsSources extends Component<INewsSourcesProps, INewsSourcesState> {\n  constructor(props: INewsSourcesProps) {\n    super(props);\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading: boolean, sources: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category: string, index: number) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n}\n\nexport default class NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [] };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesProviders extends Component<\n  IPhonesProvidersProps,\n  IPhonesProvidersState\n> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading: boolean, providers: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IAPIsProps {}\n\ninterface IAPIsState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nexport default class APIs extends Component<IAPIsProps, IAPIsState> {\n  constructor(props: IAPIsProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading: boolean, filterTechnologies: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"APIs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Provinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Provinces</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IDistrictsProps {}\n\ninterface IDistrictsState {\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { districts: [], loading: true };\n\n    this.getGHNDistricts = this.getGHNDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNDistricts();\n  }\n\n  async getGHNDistricts() {\n    this.setState({ loading: true });\n    const districts = await apis.getGHNDistricts();\n    this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' },\n      { header: 'Type', key: 'type' },\n      { header: 'Support Type', key: 'support_type' }\n    ];\n\n    return (\n      <div id=\"Districts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Districts</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getGHNWards = this.getGHNWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNWards();\n  }\n\n  async getGHNWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getGHNWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Wards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Wards</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nexport default class Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.type}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}