{"version":3,"sources":["configs/urls.ts","configs/administrative-divisions.ts","configs/banks.ts","configs/calendar.ts","configs/ethnic-minorities.ts","configs/finance.ts","configs/government.ts","configs/history.ts","configs/license-plates.ts","configs/music.ts","configs/news.ts","configs/open-apis.ts","configs/phones.ts","configs/sports.ts","configs/weather.ts","configs/youtube.ts","configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/index.ts","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","components/Navigation.tsx","components/SmallDoc.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/demo/history/Dynasties.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/music/Artists.tsx","pages/demo/open-apis/List.tsx","pages/demo/open-apis/ghn/Provinces.tsx","pages/demo/open-apis/ghn/Districts.tsx","pages/demo/open-apis/ghn/Wards.tsx","pages/demo/open-apis/Vietcetera.tsx","pages/demo/sports/Clubs.tsx","pages/demo/weather/Current.tsx","pages/docs/AdministrativeDivisions.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/History.tsx","pages/docs/LicensePlates.tsx","pages/docs/Music.tsx","pages/docs/News.tsx","pages/docs/OpenAPIs.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Weather.tsx","pages/docs/YouTube.tsx","pages/demo/administrative-divisions/Districts.tsx","pages/demo/administrative-divisions/PostalCodes.tsx","pages/demo/administrative-divisions/Provinces.tsx","pages/demo/administrative-divisions/Wards.tsx","pages/demo/banks/List.tsx","pages/demo/banks/forex/Rates.tsx","pages/demo/banks/forex/History.tsx","pages/demo/banks/forex/Sync.tsx","pages/demo/calendar/Converter.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/news/Feed.tsx","routers/index.ts","pages/demo/news/Trends.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/youtube/Trending.tsx","pages/demo/youtube/VideoCategories.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","administrativeDivisions","getPostalCodes","id","name","public","method","path","url","demo","request","headers","key","value","query","type","required","description","body","response","200","schema","example","code","province","province_id","400","message","getProvinces","capital","level","level_en","macro_region","macro_region_en","region","region_en","getDistricts","getWards","ward","district","getTotalWards","total","banks","getBanks","name_en","name_short","type_en","getForexBanks","getForexRates","currencies","data","syncForexRates","status","calendar","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","ethnicMinorities","getEthnicMinorities","finance","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHistory","history","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","calculateProfit","profit","government","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","percentage","getMinistries","short","getMinisters","getDynasties","temple_name","birth_name","birth","death","start_year","end_year","dynasty","licensePlates","getLicensePlates","license","definition","music","getMusicArtists","news","getTrends","hour","categories","getSources","sources","getCategories","getArticles","source","sourceURL","publishedDate","openAPIs","getOpenAPIs","type_id","npm","getGHNProvinces","getGHNDistricts","district_id","support_type","getGHNWards","getVietceteraArticles","publishDate","phones","getPhonesPrefixes","prefix","provider","provider_id","getPhonesProviders","prefixes","sports","getSportsClubs","sport","sport_en","competition","city","weather","getCurrentWeather","coord","base","main","visibility","wind","clouds","dt","sys","timezone","cod","youtube","getTrending","channelId","publishedAt","channelTitle","tags","categoryId","getVideoCategories","assignable","periods","label","months","endpoints","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","timeout","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","category","articles","buy","sell","volume","from","to","currency","skip","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","apis","helper","API","props","api","className","onClick","copyToClipboard","Component","CURL","bind","buildDataRaw","trim","dataRaw","header","index","lastFlag","Table","loading","caption","rows","rowConfigs","emptyRowsText","rowIndexEnabled","Spinner","animation","variant","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","state","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","getFullYear","href","target","rel","Navigation","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","route","navigation","as","Link","SmallDoc","renderSidebar","renderTable","scrollIntoView","element","document","getElementById","behavior","colors","get","post","color","toLowerCase","EthnicMinoritiesList","filterEthnicMinorities","event","setState","ethnicMinority","typeFlag","typeEnFlag","Card","Body","Form","Control","placeholder","onChange","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","Group","defaultValue","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","HistoryDynasties","dynasties","getHistoryDynasties","Home","docs","sort","a","b","filterAPIs","externalPackages","filterExternalPackages","filterPackages","updateQuery","packages","_package","LicensePlatesList","filterLicensePlates","licensePlate","MusicArtists","artists","OpenAPIsList","technologies","filterTechnologies","technology","nameFlag","Provinces","provinces","Title","Subtitle","Districts","districts","Wards","wards","Vietcetera","option","ListGroup","article","Text","SportsClubs","clubs","WeatherCurrent","getWeatherCurrent","temp","feels_like","temp_min","temp_max","Maps","Banks","Calendar","Docs","Accordion","capitalize","Toggle","Button","Collapse","groups","EthnicMinorities","Finance","Government","History","LicensePlates","Music","News","OpenAPIs","Phones","Sports","Weather","YouTube","MapsDistricts","updateProvince","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","active","renderPagination","goToPage","updateActive","page","Math","floor","final","items","push","Pagination","size","Prev","Next","BanksList","BanksForex","sortBy","sortDir","getBanksForexRates","renderForm","updateCurrency","by","dir","bank","aItem","buyCash","bItem","sellCash","buyTransfer","sellTransfer","time","buyCashText","buyTransferText","sellCashText","sellTransferText","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","processRates","find","rates","rate","labels","minute","datasets","transfer","buyData","transferData","sellData","lines","deepClone","assign","syncing","syncAll","addToSyncing","removeFromSyncing","log","indexOf","syncingFlag","disabled","CalendarConverter","loadingText","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","split","controlId","Label","pattern","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","processPeriod","highlight","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","timestamp","concat","array","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","NewsFeed","updateCategory","updateSource","renderArticles","startIndex","endIndex","substring","dangerouslySetInnerHTML","__html","component","AdministrativeDivisions","AdministrativeDivisionsPostalCodes","AdministrativeDivisionsProvinces","AdministrativeDivisionsDistricts","AdministrativeDivisionsWards","BanksForexRates","BanksForexHistory","BanksForexSync","getGoogleTrends","trend","Badge","GHNProvinces","GHNDistricts","GHNWards","providers","_provider","mapCategories","trending","getYouTubeTrending","getYouTubeVideoCategories","updateVideoCategory","videoCategory","videos","video","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e21b7d6a.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n","import { baseAPI } from './urls';\n\nconst administrativeDivisions = {\n  getPostalCodes: {\n    id: 'getPostalCodes',\n    name: 'Get Postal Codes',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/postal-codes',\n    url: `${baseAPI}/administrative-divisions/postal-codes`,\n    demo: 'administrative-divisions-postal-codes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'code', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'province_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            code: '<string>',\n            province: '<string>',\n            province_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getProvinces: {\n    id: 'getProvinces',\n    name: 'Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/provinces',\n    url: `${baseAPI}/administrative-divisions/provinces`,\n    demo: 'administrative-divisions-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'level_en', type: 'string', required: false, description: '' },\n        { name: 'macro_region_en', type: 'string', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'capital', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' },\n          { name: 'macro_region', type: 'string', description: '' },\n          { name: 'macro_region_en', type: 'string', description: '' },\n          { name: 'region', type: 'string', description: '' },\n          { name: 'region_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            capital: '<string>',\n            level: '<string>',\n            level_en: '<string>',\n            macro_region: '<string>',\n            macro_region_en: '<string>',\n            region: '<string>',\n            region_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getDistricts: {\n    id: 'getDistricts',\n    name: 'Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/districts',\n    url: `${baseAPI}/administrative-divisions/districts`,\n    demo: 'administrative-divisions-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'province_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            level: '<string>',\n            level_en: '<string>',\n            province: '<string>',\n            province_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getWards: {\n    id: 'getWards',\n    name: 'Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/wards',\n    url: `${baseAPI}/administrative-divisions/wards`,\n    demo: 'administrative-divisions-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'skip', type: 'number', required: false, description: '' },\n        { name: 'limit', type: 'number', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'ward', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            ward: '<string>',\n            district: '<string>',\n            province: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getTotalWards: {\n    id: 'getTotalWards',\n    name: 'Get Total Wards',\n    public: false,\n    method: 'GET',\n    path: '/administrative-divisions/wards/total',\n    url: `${baseAPI}/administrative-divisions/wards/total`,\n    demo: 'administrative-divisions-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [{ name: 'total', type: 'number', description: '' }],\n        example: [{ total: '<number>' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default administrativeDivisions;\n","import { baseAPI } from './urls';\n\nconst banks = {\n  getBanks: {\n    id: 'getBanks',\n    name: 'Get Banks',\n    public: true,\n    path: '/banks',\n    url: `${baseAPI}/banks`,\n    demo: 'banks-list',\n    method: 'GET',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'code', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'name_en', type: 'string', description: '' },\n          { name: 'name_short', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_en', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            code: '<string>',\n            name: '<string>',\n            name_en: '<string>',\n            name_short: '<string>',\n            type: '<string>',\n            type_en: '<string>',\n            url: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getForexBanks: {\n    id: 'getForexBanks',\n    name: 'Get Forex Banks',\n    public: true,\n    path: '/banks/forex/banks',\n    url: `${baseAPI}/banks/forex/banks`,\n    demo: 'banks-forex-sync',\n    method: 'GET',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'banks', type: 'Array<string>', description: '' }\n        ],\n        example: [{ total: '<number>', banks: '<Array<string>>' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getForexRates: {\n    id: 'getForexRates',\n    name: 'Get Forex Rates',\n    public: true,\n    method: 'GET',\n    path: '/banks/forex/rates',\n    url: `${baseAPI}/banks/forex/rates`,\n    demo: 'banks-forex-rates',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'currencies', type: 'Array<string>', description: '' },\n          { name: 'data', type: 'Array<Rates>', description: '' }\n        ],\n        example: {\n          currencies: '<Array<string>>',\n          data: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  syncForexRates: {\n    id: 'syncForexRates',\n    name: 'Sync Forex Rates',\n    public: true,\n    method: 'POST',\n    path: '/banks/forex/sync',\n    url: `${baseAPI}/banks/forex/sync`,\n    demo: 'banks-forex-sync',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'id', required: true, type: 'string', description: '' }]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'status', type: 'string', description: '' }],\n        example: { status: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default banks;\n","import { baseAPI } from './urls';\n\nconst calendar = {\n  convertLunarToSolar: {\n    id: 'convertLunarToSolar',\n    name: 'Convert Lunar Date to Solar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar2solar',\n    url: `${baseAPI}/calendar/lunar2solar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  convertSolarToLunar: {\n    id: 'convertSolarToLunar',\n    name: 'Convert Solar Date to Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/solar2lunar',\n    url: `${baseAPI}/calendar/solar2lunar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCanChi: {\n    id: 'getCanChi',\n    name: 'Get Can Chi of Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar/can-chi',\n    url: `${baseAPI}/calendar/lunar/can-chi`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'canChi', type: 'string', description: '' }],\n        example: { canChi: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default calendar;\n","import { baseAPI } from './urls';\n\nconst ethnicMinorities = {\n  getEthnicMinorities: {\n    id: 'getEthnicMinorities',\n    name: 'Get Ethnic Minorities',\n    public: true,\n    method: 'GET',\n    path: '/ethnic-minorities',\n    url: `${baseAPI}/ethnic-minorities`,\n    demo: 'ethnic-minorities-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_en', type: 'string', description: '' }\n        ],\n        example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default ethnicMinorities;\n","import { baseAPI } from './urls';\n\nconst finance = {\n  getStockCompanies: {\n    id: 'getStockCompanies',\n    name: 'Get Listed Companies',\n    public: true,\n    method: 'GET',\n    path: '/finance/companies',\n    url: `${baseAPI}/finance/companies`,\n    demo: 'finance-companies',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'market', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'supersector', type: 'string', description: '' },\n          { name: 'sector', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'listingDate', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            market: '<string>',\n            group: '<string>',\n            symbol: '<string>',\n            name: '<string>',\n            industry: '<string>',\n            supersector: '<string>',\n            sector: '<string>',\n            subsector: '<string>',\n            listingDate: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHistory: {\n    id: 'getStockHistory',\n    name: 'Get Stock History',\n    public: true,\n    method: 'GET',\n    path: '/finance/history',\n    url: `${baseAPI}/finance/history`,\n    demo: 'finance-history',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'symbol', type: 'string', required: true, description: '' },\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'history', type: 'Array<Date>', description: '' }\n        ],\n        example: {\n          symbol: '<string>',\n          name: '<string>',\n          group: '<string>',\n          industry: '<string>',\n          subsector: '<string>',\n          history: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHighlights: {\n    id: 'getStockHighlights',\n    name: 'Get Stock Highlights',\n    public: false,\n    method: 'POST',\n    path: '/finance/highlights',\n    url: `${baseAPI}/finance/highlights`,\n    demo: 'finance-highlights',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockPotentials: {\n    id: 'getStockPotentials',\n    name: 'Get Stock Potentials',\n    public: false,\n    method: 'POST',\n    path: '/finance/potentials',\n    url: `${baseAPI}/finance/potentials`,\n    demo: 'finance-potentials',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  calculateProfit: {\n    id: 'calculateProfit',\n    name: 'Calculate Profit',\n    public: false,\n    method: 'POST',\n    path: '/finance/profit',\n    url: `${baseAPI}/finance/profit`,\n    demo: 'finance-profit',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'buy', type: 'number', required: true, description: '' },\n        { name: 'sell', type: 'number', required: true, description: '' },\n        { name: 'volume', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'profit', type: 'number', description: '' }],\n        example: { profit: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default finance;\n","import { baseAPI } from './urls';\n\nconst government = {\n  getGeneralSecretaries: {\n    id: 'getGeneralSecretaries',\n    name: 'Get General Secretaries',\n    public: true,\n    method: 'GET',\n    path: '/government/general-secretaries',\n    url: `${baseAPI}/government/general-secretaries`,\n    demo: 'government-general-secretaries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'string', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPresidents: {\n    id: 'getPresidents',\n    name: 'Get Presidents',\n    public: true,\n    method: 'GET',\n    path: '/government/presidents',\n    url: `${baseAPI}/government/presidents`,\n    demo: 'government-presidents',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPrimeMinisters: {\n    id: 'getPrimeMinisters',\n    name: 'Get Prime Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/prime-ministers',\n    url: `${baseAPI}/government/prime-ministers`,\n    demo: 'government-prime-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyChairs: {\n    id: 'getNationalAssemblyChairs',\n    name: 'Get National Assembly Chairs',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/chairs',\n    url: `${baseAPI}/government/national-assembly/chairs`,\n    demo: 'government-national-assembly-chairs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyMembers: {\n    id: 'getNationalAssemblyMembers',\n    name: 'Get National Assembly Members',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/members',\n    url: `${baseAPI}/government/national-assembly/members`,\n    demo: 'government-national-assembly-members',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'no', type: 'number', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'no', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'date_of_birth', type: 'string', description: '' },\n          { name: 'city_of_birth', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'degree', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'percentage', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            no: '<number>',\n            name: '<string>',\n            date_of_birth: '<string>',\n            city_of_birth: '<string>',\n            gender: '<string>',\n            degree: '<string>',\n            province: '<string>',\n            district: '<string>',\n            percentage: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinistries: {\n    id: 'getMinistries',\n    name: 'Get Ministries',\n    public: true,\n    method: 'GET',\n    path: '/government/ministries',\n    url: `${baseAPI}/government/ministries`,\n    demo: 'government-ministries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'name_en', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            short: '<string>',\n            name: '<string>',\n            name_en: '<string>',\n            level: '<string>',\n            level_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinisters: {\n    id: 'getMinisters',\n    name: 'Get Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/ministers',\n    url: `${baseAPI}/government/ministers`,\n    demo: 'government-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default government;\n","import { baseAPI } from './urls';\n\nconst history = {\n  getDynasties: {\n    id: 'getDynasties',\n    name: 'Get Dynasties',\n    public: true,\n    method: 'GET',\n    path: '/history/dynasties',\n    url: `${baseAPI}/history/dynasties`,\n    demo: 'history-dynasties',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'temple_name', type: 'string', description: '' },\n          { name: 'birth_name', type: 'string', description: '' },\n          { name: 'birth', type: 'number', description: '' },\n          { name: 'death', type: 'number', description: '' },\n          { name: 'start_year', type: 'number', description: '' },\n          { name: 'end_year', type: 'number', description: '' },\n          { name: 'dynasty', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            temple_name: '<string>',\n            birth_name: '<string>',\n            birth: '<number>',\n            death: '<number>',\n            start_year: '<number>',\n            end_year: '<number>',\n            dynasty: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default history;\n","import { baseAPI } from './urls';\n\nconst licensePlates = {\n  getLicensePlates: {\n    id: 'getLicensePlates',\n    name: 'Get License Plates',\n    public: true,\n    method: 'GET',\n    path: '/license-plates',\n    url: `${baseAPI}/license-plates`,\n    demo: 'license-plates-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'license', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'license', type: 'string', description: '' },\n          { name: 'definition', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' }\n        ],\n        example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default licensePlates;\n","import { baseAPI } from './urls';\n\nconst music = {\n  getMusicArtists: {\n    id: 'getMusicArtists',\n    name: 'Get Music Artists',\n    public: true,\n    method: 'GET',\n    path: '/music/artists',\n    url: `${baseAPI}/music/artists`,\n    demo: 'music-artists',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [{ name: 'name', type: 'string', description: '' }],\n        example: [\n          {\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default music;\n","import { baseAPI } from './urls';\n\nconst news = {\n  getTrends: {\n    id: 'getTrends',\n    name: 'Get (Google) Trends',\n    public: true,\n    method: 'GET',\n    path: '/news/trends',\n    url: `${baseAPI}/news/trends`,\n    demo: 'news-trends',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' },\n          { name: 'hour', type: 'number', description: '' },\n          { name: 'trends', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          year: '<number>',\n          month: '<number>',\n          date: '<number>',\n          hour: '<number>',\n          categories: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getSources: {\n    id: 'getSources',\n    name: 'Get Sources',\n    public: true,\n    method: 'GET',\n    path: '/news/sources',\n    url: `${baseAPI}/news/sources`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'sources', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          total: '<number>',\n          sources: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCategories: {\n    id: 'getCategories',\n    name: 'Get Categories',\n    public: true,\n    method: 'GET',\n    path: '/news/categories',\n    url: `${baseAPI}/news/categories`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'source', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'categories', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          total: '<number>',\n          categories: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getArticles: {\n    id: 'getArticles',\n    name: 'Get Articles',\n    public: true,\n    method: 'GET',\n    path: '/news/articles',\n    url: `${baseAPI}/news/articles`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'source', type: 'string', required: false, description: '' },\n        { name: 'category', type: 'string', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'source', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' },\n          { name: 'publishedDate', type: 'string', description: '' },\n          { name: 'sourceURL', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            source: '<string>',\n            sourceURL: '<string>',\n            description: '<string>',\n            publishedDate: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default news;\n","import { baseAPI } from './urls';\n\nconst openAPIs = {\n  getOpenAPIs: {\n    id: 'getOpenAPIs',\n    name: 'Get Open APIs',\n    public: true,\n    method: 'GET',\n    path: '/open-apis',\n    url: `${baseAPI}/open-apis`,\n    demo: 'open-apis-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_id', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'npm', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            type: '<string>',\n            type_id: '<string>',\n            url: '<string>',\n            npm: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNProvinces: {\n    id: 'getGHNProvinces',\n    name: 'GHN - Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/provinces',\n    url: `${baseAPI}/open-apis/giaohangnhanh/provinces`,\n    demo: 'open-apis-ghn-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNDistricts: {\n    id: 'getGHNDistricts',\n    name: 'GHN - Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/districts',\n    url: `${baseAPI}/open-apis/giaohangnhanh/districts`,\n    demo: 'open-apis-ghn-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' },\n          { name: 'type', type: 'number', description: '' },\n          { name: 'support_type', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>',\n            type: '<number>',\n            support_type: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNWards: {\n    id: 'getGHNWards',\n    name: 'GHN - Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/wards',\n    url: `${baseAPI}/open-apis/giaohangnhanh/wards`,\n    demo: 'open-apis-ghn-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'district_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVietceteraArticles: {\n    id: 'getVietceteraArticles',\n    name: 'Get Vietcetera Articles',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/vietcetera',\n    url: `${baseAPI}/open-apis/vietcetera`,\n    demo: 'open-apis-vietcetera',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'publishDate', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            publishDate: '<string>',\n            description: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default openAPIs;\n","import { baseAPI } from './urls';\n\nconst phones = {\n  getPhonesPrefixes: {\n    id: 'getPhonesPrefixes',\n    name: 'Get Phone Prefixes',\n    public: true,\n    method: 'GET',\n    path: '/phones/prefixes',\n    url: `${baseAPI}/phones/prefixes`,\n    demo: 'phones-prefixes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'prefix', type: 'string', description: '' },\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'provider_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            prefix: '<string>',\n            provider: '<string>',\n            provider_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPhonesProviders: {\n    id: 'getPhonesProviders',\n    name: 'Get Phone Providers',\n    public: true,\n    method: 'GET',\n    path: '/phones/providers',\n    url: `${baseAPI}/phones/providers`,\n    demo: 'phones-providers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'prefixes', type: 'Array<string>', description: '' }\n        ],\n        example: [\n          {\n            provider: '<string>',\n            prefixes: '<Array<string>>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default phones;\n","import { baseAPI } from './urls';\n\nconst sports = {\n  getSportsClubs: {\n    id: 'getSportsClubs',\n    name: 'Get Sports Clubs',\n    public: true,\n    method: 'GET',\n    path: '/sports/clubs',\n    url: `${baseAPI}/sports/clubs`,\n    demo: 'sports-clubs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'sport', type: 'string', description: '' },\n          { name: 'sport_en', type: 'string', description: '' },\n          { name: 'competition', type: 'string', description: '' },\n          { name: 'city', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            sport: '<string>',\n            sport_en: '<string>',\n            competition: '<string>',\n            city: '<string>',\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default sports;\n","import { baseAPI } from './urls';\n\nconst weather = {\n  getCurrentWeather: {\n    id: 'getCurrentWeather',\n    name: 'Get Current Weather',\n    public: true,\n    method: 'GET',\n    path: '/weather',\n    url: `${baseAPI}/weather`,\n    demo: 'weather-current',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'city', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'coord', type: 'object', description: '' },\n          { name: 'weather', type: 'Array<object>', description: '' },\n          { name: 'base', type: 'string', description: '' },\n          { name: 'main', type: 'object', description: '' },\n          { name: 'visibility', type: 'number', description: '' },\n          { name: 'wind', type: 'object', description: '' },\n          { name: 'clouds', type: 'object', description: '' },\n          { name: 'dt', type: 'number', description: '' },\n          { name: 'sys', type: 'number', description: '' },\n          { name: 'timezone', type: 'number', description: '' },\n          { name: 'id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'cod', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            coord: '<object>',\n            weather: '<Array<object>>',\n            base: '<string>',\n            main: '<object>',\n            visibility: '<number>',\n            wind: '<object>',\n            clouds: '<object>',\n            dt: '<number>',\n            sys: '<number>',\n            timezone: '<number>',\n            id: '<number>',\n            name: '<string>',\n            cod: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default weather;\n","import { baseAPI } from './urls';\nimport { IYouTubeEndpoints } from './interfaces';\n\nconst youtube: IYouTubeEndpoints = {\n  getTrending: {\n    id: 'getTrending',\n    name: 'Get Trending',\n    public: true,\n    method: 'GET',\n    path: '/youtube/trending',\n    url: `${baseAPI}/youtube/trending`,\n    demo: 'youtube-trending',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'categoryId', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'channelId', type: 'string', description: '' },\n          { name: 'title', type: 'string', description: '' },\n          { name: 'publishedAt', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' },\n          { name: 'channelTitle', type: 'string', description: '' },\n          { name: 'tags', type: 'Array<string>', description: '' },\n          { name: 'categoryId', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            channelId: '<string>',\n            title: '<string>',\n            publishedAt: '<string>',\n            description: '<string>',\n            channelTitle: '<string>',\n            tags: '<Array<string>>',\n            categoryId: '<string>',\n            url: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVideoCategories: {\n    id: 'getVideoCategories',\n    name: 'Get Video Categories',\n    public: true,\n    method: 'GET',\n    path: '/youtube/video-categories',\n    url: `${baseAPI}/youtube/video-categories`,\n    demo: 'youtube-video-categories',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'title', type: 'string', description: '' },\n          { name: 'assignable', type: 'boolean', description: '' },\n          { name: 'channelId', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            title: '<string>',\n            assignable: '<string>',\n            channelId: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default youtube;\n","import { baseAPI, baseGraphQL } from './urls';\nimport { IPeriod, IMonth, IEndpoints } from './interfaces';\n\nimport administrativeDivisions from './administrative-divisions';\nimport banks from './banks';\nimport calendar from './calendar';\nimport ethnicMinorities from './ethnic-minorities';\nimport finance from './finance';\nimport government from './government';\nimport history from './history';\nimport licensePlates from './license-plates';\nimport music from './music';\nimport news from './news';\nimport openAPIs from './open-apis';\nimport phones from './phones';\nimport sports from './sports';\nimport weather from './weather';\nimport youtube from './youtube';\n\nexport { baseAPI, baseGraphQL };\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'administrativeDivisions'\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'music'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport const endpoints: IEndpoints = {\n  administrativeDivisions,\n  banks,\n  calendar,\n  ethnicMinorities,\n  finance,\n  government,\n  history,\n  licensePlates,\n  music,\n  news,\n  openAPIs,\n  phones,\n  sports,\n  weather,\n  youtube\n};\n","import { endpoints } from '../configs';\nimport { IEndpoint } from '../configs/interfaces';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}): string {\n    const keys: Array<string> = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map((key: string) => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString: string = this.buildQueryString(query);\n    const input: string = queryString ? `${url}?${queryString}` : url;\n    const timeout: number = 1000 * 60 * 6;\n    const headers = { 'Content-Type': 'application/json' };\n    const options =\n      method === 'GET'\n        ? { method, timeout, headers }\n        : { method, timeout, headers, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res: any = {}) => {\n          resolve(res);\n        })\n        .catch((error: Error) => {\n          console.error('fetch', error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    const { sources = [] } = await this.fetch(endpoint);\n    return sources;\n  }\n\n  public async getCategories(source: string): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint, { query: { source }, body: {} });\n    return categories;\n  }\n\n  public async getArticles(source: string, category: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number): Promise<number> {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: {}, query: { symbol, from, to } });\n  }\n\n  public async getBanks(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.banks.getBanks;\n    return await this.fetch(endpoint);\n  }\n\n  public async getBanksForexRates(): Promise<any> {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks(): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const { banks = [] } = (await this.fetch(endpoint)) || {};\n    return banks;\n  }\n\n  public async syncForexRates(id: string): Promise<string> {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = 'ERROR' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getPostalCodes(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProvinces(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDistricts(province_id: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getWards(skip: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getWards;\n    return await this.fetch(endpoint, { query: { skip }, body: {} });\n  }\n\n  public async getTotalWards(): Promise<number> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getTotalWards;\n    const { total = 0 } = await this.fetch(endpoint);\n    return total;\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getOpenAPIs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getOpenAPIs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesProviders(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesPrefixes(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number): Promise<any> {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number): Promise<any> {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number): Promise<string> {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n\n  public async getGHNProvinces(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNDistricts(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNWards(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMusicArtists(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.music.getMusicArtists;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDynasties(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.history.getDynasties;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCurrentWeather(city: string): Promise<any> {\n    const endpoint: IEndpoint = endpoints.weather.getCurrentWeather;\n    return await this.fetch(endpoint, { query: { city }, body: {} });\n  }\n\n  public async getYouTubeTrending(categoryId: number = 0): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.youtube.getTrending;\n    return await this.fetch(endpoint, { query: { categoryId }, body: {} });\n  }\n\n  public async getYouTubeVideoCategories(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.youtube.getVideoCategories;\n    return await this.fetch(endpoint);\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\n\nexport { apis, graphql, helper };\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n}\n\nexport default class API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n  rowIndexEnabled?: boolean;\n}\n\nexport default class Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data',\n      rowIndexEnabled = false\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  {rowIndexEnabled && <td>#</td>}\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowIndexEnabled && <td>{rowIndex + 1}</td>}\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\n\nexport default class Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">{name}</h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className=\"mb-3\">{header}</h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavigationProps {}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VIETNAM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path: pathname, text } = route;\n                      return (\n                        <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Doc from './Doc';\nimport { endpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n}\n\ninterface ISmallDocState {\n  endpoints: any;\n}\n\nexport default class SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header } = this.props;\n    const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n    return (\n      <div>\n        <h6>\n          <b>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.ministry}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IHistoryDynastiesProps {}\n\ninterface IHistoryDynastiesState {\n  dynasties: Array<any>;\n  loading: boolean;\n}\n\nexport default class HistoryDynasties extends Component<\n  IHistoryDynastiesProps,\n  IHistoryDynastiesState\n> {\n  constructor(props: IHistoryDynastiesProps) {\n    super(props);\n\n    this.state = { dynasties: [], loading: true };\n\n    this.getHistoryDynasties = this.getHistoryDynasties.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getHistoryDynasties();\n  }\n\n  async getHistoryDynasties() {\n    this.setState({ loading: true });\n    const dynasties: Array<any> = await apis.getDynasties();\n    this.setState({ dynasties, loading: false });\n  }\n\n  render() {\n    const { dynasties = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Temple Name', key: 'temple_name' },\n      { header: 'Birth Name', key: 'birth_name' },\n      { header: 'Start', key: 'start_year' },\n      { header: 'End', key: 'end_year' },\n      { header: 'Dynasty', key: 'dynasty' }\n    ];\n\n    return (\n      <div id=\"HistoryDynasties\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Dynasties'}\n              rows={dynasties}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\ninterface IHomeProps {}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n  externalPackages: Array<any>;\n  filterExternalPackages: Array<any>;\n}\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis = [\n      {\n        name: 'administrative-divisions',\n        npm: 'vnapis#administrative-divisions',\n        docs: '/administrative-divisions'\n      },\n      {\n        name: 'banks',\n        npm: 'vnapis#banks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'music',\n        npm: 'vnapis#music',\n        docs: '/music'\n      },\n      {\n        name: 'news',\n        npm: 'vnapis#news',\n        docs: '/news'\n      },\n      {\n        name: 'open-apis',\n        npm: 'vnapis#open-apis',\n        docs: '/open-apis'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis,\n      externalPackages: [],\n      filterExternalPackages: []\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    await this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title: string, packages: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IMusicArtistsProps {}\n\ninterface IMusicArtistsState {\n  artists: Array<any>;\n  loading: boolean;\n}\n\nexport default class MusicArtists extends Component<IMusicArtistsProps, IMusicArtistsState> {\n  constructor(props: IMusicArtistsProps) {\n    super(props);\n\n    this.state = { artists: [], loading: true };\n\n    this.getMusicArtists = this.getMusicArtists.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMusicArtists();\n  }\n\n  async getMusicArtists() {\n    this.setState({ loading: true });\n    const artists: Array<any> = await apis.getMusicArtists();\n    this.setState({ artists, loading: false });\n  }\n\n  render() {\n    const { artists = [], loading = false } = this.state;\n\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n\n    return (\n      <div id=\"MusicArtists\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Artists'}\n              rows={artists}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IOpenAPIsListProps {}\n\ninterface IOpenAPIsListState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nexport default class OpenAPIsList extends Component<IOpenAPIsListProps, IOpenAPIsListState> {\n  constructor(props: IOpenAPIsListProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getOpenAPIs = this.getOpenAPIs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getOpenAPIs();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getOpenAPIs() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getOpenAPIs();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading: boolean, filterTechnologies: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                Open APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"OpenAPIsList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Provinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Provinces</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IDistrictsProps {}\n\ninterface IDistrictsState {\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { districts: [], loading: true };\n\n    this.getGHNDistricts = this.getGHNDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNDistricts();\n  }\n\n  async getGHNDistricts() {\n    this.setState({ loading: true });\n    const districts = await apis.getGHNDistricts();\n    this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' },\n      { header: 'Type', key: 'type' },\n      { header: 'Support Type', key: 'support_type' }\n    ];\n\n    return (\n      <div id=\"Districts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Districts</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getGHNWards = this.getGHNWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNWards();\n  }\n\n  async getGHNWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getGHNWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Wards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Wards</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nexport default class Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.type}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IWeatherCurrentProps {}\n\ninterface IWeatherCurrentState {\n  result: any;\n  loading: boolean;\n}\n\nexport default class WeatherCurrent extends Component<IWeatherCurrentProps, IWeatherCurrentState> {\n  constructor(props: IWeatherCurrentProps) {\n    super(props);\n\n    this.state = { result: {}, loading: true };\n\n    this.getWeatherCurrent = this.getWeatherCurrent.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWeatherCurrent();\n  }\n\n  async getWeatherCurrent() {\n    this.setState({ loading: true });\n    const result: Array<any> = await apis.getCurrentWeather('hanoi');\n    this.setState({ result, loading: false });\n  }\n\n  render() {\n    const { result = {} } = this.state;\n\n    const { main = {}, weather = [] } = result;\n    const [first = {}] = weather;\n    const { description = '' } = first;\n    const { temp = 0, feels_like = 0, temp_min = 0, temp_max = 0 } = main;\n\n    return (\n      <div id=\"WeatherCurrent\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <div className=\"mb-3\">\n              <p className=\"m-0 text-center\">{description.toUpperCase()}</p>\n              <h1 className=\"text-center\">{temp}&deg;C</h1>\n              <p className=\"m-0 text-center\">Feels Like: {feels_like}&deg;C</p>\n              <p className=\"m-0 text-center\">\n                Min: {temp_min}&deg;C - Max: {temp_max}&deg;C\n              </p>\n            </div>\n            <div className=\"p-3 bg-dark rounded\">\n              <pre className=\"m-0 text-white\">{JSON.stringify(result, null, 2)}</pre>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"AdministrativeDivisions\" className=\"container\">\n        <SmallDoc group={'administrativeDivisions'} header={'Administrative Divisions'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {}\n\ninterface IDocsState {\n  endpoints: any;\n}\n\nexport default class Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n      return { group, apis };\n    });\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.capitalize(group);\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className=\"m-0 p-0 text-dark\"\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              {groups.length > 0 &&\n                groups.map((group: string, index: number) => {\n                  return <Doc key={index} group={group} header={helper.capitalize(group)}></Doc>;\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class History extends Component {\n  render() {\n    return (\n      <div id=\"History\" className=\"container\">\n        <SmallDoc group={'history'} header={'History'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Music extends Component {\n  render() {\n    return (\n      <div id=\"Music\" className=\"container\">\n        <SmallDoc group={'music'} header={'Music'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class OpenAPIs extends Component {\n  render() {\n    return (\n      <div id=\"OpenAPIs\" className=\"container\">\n        <SmallDoc group={'openAPIs'} header={'OpenAPIs'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Weather extends Component {\n  render() {\n    return (\n      <div id=\"Weather\" className=\"container\">\n        <SmallDoc group={'weather'} header={'Weather'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class YouTube extends Component {\n  render() {\n    return (\n      <div id=\"YouTube\" className=\"container\">\n        <SmallDoc group={'youtube'} header={'YouTube'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.getDistricts = this.getDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  async getProvinces() {\n    const provinces = await apis.getProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={this.state.province_id}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Pagination } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n  total: number;\n  active: number;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true, total: 0, active: 1 };\n\n    this.getWards = this.getWards.bind(this);\n    this.getTotalWards = this.getTotalWards.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n    this.updateActive = this.updateActive.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTotalWards();\n    await this.getWards();\n  }\n\n  async getWards(page: number = 0) {\n    this.setState({ loading: true });\n    const skip: number = page * 100;\n    const wards = await apis.getWards(skip);\n    this.setState({ wards, loading: false });\n  }\n\n  async getTotalWards() {\n    const total: number = await apis.getTotalWards();\n    this.setState({ total });\n  }\n\n  async goToPage(page: number) {\n    await this.setState({ active: page });\n    await this.getWards(page - 1);\n  }\n\n  async updateActive(value: number) {\n    let { active } = this.state;\n    active += value;\n    await this.setState({ active });\n    await this.getWards(active - 1);\n  }\n\n  renderPagination() {\n    const { total, active } = this.state;\n\n    if (!total) return '';\n\n    const max: number = Math.floor(total / 100);\n\n    const final: number = active + 10 < max ? active + 10 : max;\n    const start: number = final === max ? max - 10 : active;\n    const items: Array<any> = [];\n    for (let page = start; page <= final; page++) {\n      items.push(\n        <Pagination.Item key={page} active={page === active} onClick={() => this.goToPage(page)}>\n          {page}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination size=\"sm\" className=\"justify-content-center\">\n        {active !== 1 && (\n          <Pagination.Item key={1} onClick={() => this.goToPage(1)}>\n            1\n          </Pagination.Item>\n        )}\n        {active !== 1 && <Pagination.Prev onClick={() => this.updateActive(1)} />}\n        {items}\n        {final !== max && <Pagination.Next onClick={() => this.updateActive(1)} />}\n        {final !== max && (\n          <Pagination.Item key={max} onClick={() => this.goToPage(max)}>\n            {max}\n          </Pagination.Item>\n        )}\n      </Pagination>\n    );\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    const rowConfigs: Array<any> = [\n      { header: 'Ward', key: 'ward' },\n      { header: 'District', key: 'district' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {this.renderPagination()}\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getBanks = this.getBanks.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanks();\n  }\n\n  async getBanks() {\n    this.setState({ loading: true });\n    const banks = await apis.getBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' },\n      { header: 'Name (Short)', key: 'name_short' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Banks'}\n              rows={banks}\n              rowConfigs={rowConfigs}\n              rowIndexEnabled={true}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\n\ninterface IBanksForexProps {}\n\ninterface IBanksForexState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nexport default class BanksForex extends Component<IBanksForexProps, IBanksForexState> {\n  constructor(props: IBanksForexProps) {\n    super(props);\n\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateCurrency = this.updateCurrency.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buyCash') {\n      data.sort((a, b) => {\n        const aItem = a.buyCash[currency] || 0;\n        const bItem = b.buyCash[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'sellCash') {\n      data.sort((a, b) => {\n        const aItem = a.sellCash[currency] || 0;\n        const bItem = b.sellCash[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'buyTransfer') {\n      data.sort((a, b) => {\n        const aItem = a.buyTransfer[currency] || 0;\n        const bItem = b.buyTransfer[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'sellTransfer') {\n      data.sort((a, b) => {\n        const aItem = a.sellTransfer[currency] || 0;\n        const bItem = b.sellTransfer[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    }\n\n    await this.setState({ data });\n  }\n\n  async updateCurrency(event: any) {\n    const { value: currency } = event.target;\n    await this.setState({ currency });\n  }\n\n  renderForm(currencies: Array<any>) {\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control as=\"select\" value={this.state.currency} onChange={this.updateCurrency}>\n            <option value={''}>Currency</option>\n            {currencies.map((currency, index) => {\n              return (\n                <option key={index} value={currency}>\n                  {currency.toUpperCase()}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  renderTable(data: Array<any> = [], currency: string = '') {\n    return (\n      <div className=\"table-responsive table-container\">\n        {data.length > 0 && (\n          <table className=\"table\">\n            <caption className=\"bg-danger text-center text-white\">Banks ({data.length})</caption>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>\n                  <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                    Bank\n                  </span>\n                </th>\n                <th>\n                  <span className=\"cursor-pointer\" onClick={() => this.sort('buyCash')}>\n                    Buy (Cash)\n                  </span>\n                </th>\n                <th>\n                  <span className=\"cursor-pointer\" onClick={() => this.sort('buyTransfer')}>\n                    Buy (Transfer)\n                  </span>\n                </th>\n                <th>\n                  <span className=\"cursor-pointer\" onClick={() => this.sort('sellCash')}>\n                    Sell (Cash)\n                  </span>\n                </th>\n                <th>\n                  <span className=\"cursor-pointer\" onClick={() => this.sort('sellTransfer')}>\n                    Sell (Transfer)\n                  </span>\n                </th>\n                <th>Last Updated At</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((item, index) => {\n                const {\n                  bank = '',\n                  time = '',\n                  buyCash = {},\n                  buyTransfer = {},\n                  sellCash = {},\n                  sellTransfer = {}\n                } = item;\n                const buyCashText: string = buyCash[currency] || '';\n                const buyTransferText: string = buyTransfer[currency] || '';\n                const sellCashText: string = sellCash[currency] || '';\n                const sellTransferText: string = sellTransfer[currency] || '';\n\n                return (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{bank}</td>\n                    <td>{buyCashText}</td>\n                    <td>{buyTransferText}</td>\n                    <td>{sellCashText}</td>\n                    <td>{sellTransferText}</td>\n                    <td>{time}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading && this.renderForm(currencies)}\n            {!loading && this.renderTable(data, currency)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getForexRates = this.getForexRates.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getForexRates();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    const bank: string = banks[0] || '';\n    await this.setState({ bank, banks, loading: false });\n  }\n\n  async getForexRates() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    await this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.bank}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank}>\n                          {bank}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<string>;\n  loading: boolean;\n  syncing: Array<string>;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], syncing: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n    this.syncAll = this.syncAll.bind(this);\n    this.addToSyncing = this.addToSyncing.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    await this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string, index: number = 0) {\n    await this.addToSyncing(id);\n    const message: string = await apis.syncForexRates(id);\n    await this.removeFromSyncing(id);\n    console.log(index, id, message);\n  }\n\n  async addToSyncing(id: string) {\n    const { syncing = [] } = this.state;\n    const index = syncing.indexOf(id);\n    if (index !== -1) return;\n    syncing.push(id);\n    console.log('addToSyncing', syncing);\n    await this.setState({ syncing });\n  }\n\n  async removeFromSyncing(id: string) {\n    let { syncing = [] } = this.state;\n    syncing = syncing.filter(item => item !== id);\n    console.log('removeFromSyncing', syncing);\n    await this.setState({ syncing });\n  }\n\n  async syncAll() {\n    const { banks = [] } = this.state;\n    let index: number = 0;\n    for (const id of banks) {\n      index++;\n      await this.syncForexRates(id, index);\n    }\n  }\n\n  renderTable(loading: boolean, banks: Array<any> = [], syncing: Array<string> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            {banks.length ? (\n              <table className=\"table\">\n                <caption className=\"bg-danger text-white text-center\">\n                  Banks ({banks.length})\n                </caption>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>\n                      <Button variant=\"danger\" onClick={() => this.syncAll()}>\n                        SYNC ALL\n                      </Button>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {banks.map((bank, index) => {\n                    const syncingFlag: boolean = syncing.includes(bank);\n                    return (\n                      <tr key={index}>\n                        <td>{bank}</td>\n                        <td>\n                          <Button\n                            disabled={syncingFlag}\n                            variant=\"danger\"\n                            onClick={() => this.syncForexRates(bank)}>\n                            {syncingFlag ? (\n                              <Spinner animation=\"border\" variant=\"light\"></Spinner>\n                            ) : (\n                              'SYNC'\n                            )}\n                          </Button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            ) : (\n              ''\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false, syncing = [] } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, banks, syncing)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  private loadingText: string = 'LOADING ...';\n\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = {\n      solarDate: '',\n      solarString: this.loadingText,\n      lunarDate: '',\n      lunarString: this.loadingText\n    };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    await this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    const canChi: string = await apis.getCanChi(year, month, date);\n    return helper.capitalize(canChi);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString, lunarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString, solarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    await this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div id=\"FinanceHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.period}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"VIC\"\n                    value={this.state.symbol}\n                    onChange={this.updateSymbol}>\n                    {symbols.map((symbol, index) => {\n                      return (\n                        <option key={index} value={symbol}>\n                          {symbol}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {helper.numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {helper.numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {helper.numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n    this.renderArticles = this.renderArticles.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n    await this.getCategories();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const { source } = this.state;\n    const categories = await apis.getCategories(source);\n    await this.setState({ categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    await this.setState({ sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    await this.setState({ source });\n    await this.getCategories();\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles(source, category);\n    this.setState({ articles, loading: false });\n  }\n\n  renderForm(sources: Array<any>, categories: Array<any>) {\n    return (\n      <Form className=\"w-100\">\n        <div className=\"row\">\n          {sources.length > 0 && (\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control as=\"select\" value={this.state.source} onChange={this.updateSource}>\n                  <option value={''}>Source</option>\n                  {sources.map((source, index) => {\n                    return (\n                      <option key={index} value={source}>\n                        {helper.capitalize(source)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          )}\n          {categories.length > 0 && (\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.category}\n                  onChange={this.updateCategory}>\n                  <option value={''}>Category</option>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category}>\n                        {helper.capitalize(category)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          )}\n        </div>\n      </Form>\n    );\n  }\n\n  renderArticles(articles: Array<any>) {\n    return (\n      <ListGroup>\n        <ListGroup.Item className=\"text-center text-white bg-danger\">\n          Articles ({articles.length})\n        </ListGroup.Item>\n        {articles.map((article = {}, index) => {\n          const {\n            title = '',\n            url = '',\n            source = '',\n            publishedDate = '',\n            description = ''\n          } = article;\n          const startIndex: number = description.indexOf('<img');\n          const endIndex: number = description.indexOf('/>');\n          let short = '';\n          if (startIndex > -1 && endIndex > startIndex) {\n            short = `${description.substring(0, startIndex)}${description.substring(\n              endIndex + 2,\n              description.length\n            )}`;\n          }\n          return (\n            <ListGroup.Item key={index}>\n              <Card.Title>\n                <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                  {title}\n                </a>\n              </Card.Title>\n              <Card.Subtitle className=\"d-block text-muted mb-1\">\n                {source && <small>{source}</small>} -{' '}\n                {publishedDate && <small>({publishedDate})</small>}\n              </Card.Subtitle>\n              <Card.Text>\n                <span dangerouslySetInnerHTML={{ __html: short }}></span>\n              </Card.Text>\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    );\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {this.renderForm(sources, categories)}\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading && articles.length !== 0 && this.renderArticles(articles)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Administrative Divisions\n  AdministrativeDivisions,\n  AdministrativeDivisionsPostalCodes,\n  AdministrativeDivisionsProvinces,\n  AdministrativeDivisionsDistricts,\n  AdministrativeDivisionsWards,\n  // Banks\n  Banks,\n  BanksList,\n  BanksForexRates,\n  BanksForexHistory,\n  BanksForexSync,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  // History\n  History,\n  HistoryDynasties,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Music\n  Music,\n  MusicArtists,\n  // News\n  News,\n  NewsFeed,\n  NewsTrends,\n  // Open APIs\n  OpenAPIs,\n  OpenAPIsList,\n  GHNProvinces,\n  GHNDistricts,\n  GHNWards,\n  Vietcetera,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Weather\n  Weather,\n  WeatherCurrent,\n  YouTube,\n  YouTubeTrending,\n  YouTubeVideoCategories\n} from '../pages';\n\ninterface IRoute {\n  path: string;\n  text: string;\n  component: any;\n  navigation: boolean;\n}\n\nconst routes: Array<IRoute> = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions',\n    text: 'Administrative Divisions',\n    component: AdministrativeDivisions,\n    navigation: true\n  },\n  {\n    path: 'administrative-divisions-postal-codes',\n    text: 'Administrative Divisions Postal Codes',\n    component: AdministrativeDivisionsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-provinces',\n    text: 'Administrative Divisions Provinces',\n    component: AdministrativeDivisionsProvinces,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-districts',\n    text: 'Administrative Divisions Districts',\n    component: AdministrativeDivisionsDistricts,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-wards',\n    text: 'Administrative Divisions Wards',\n    component: AdministrativeDivisionsWards,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'banks-forex-rates',\n    text: 'Banks Forex Rates',\n    component: BanksForexRates,\n    navigation: false\n  },\n  {\n    path: 'banks-forex-history',\n    text: 'Banks Forex History',\n    component: BanksForexHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-forex-sync',\n    text: 'Banks Forex Sync',\n    component: BanksForexSync,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'history',\n    text: 'History',\n    component: History,\n    navigation: true\n  },\n  {\n    path: 'history-dynasties',\n    text: 'History-dynasties',\n    component: HistoryDynasties,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'music',\n    text: 'Music',\n    component: Music,\n    navigation: true\n  },\n  {\n    path: 'music-artists',\n    text: 'Music Artists',\n    component: MusicArtists,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'open-apis',\n    text: 'Open APIs',\n    component: OpenAPIs,\n    navigation: true\n  },\n  {\n    path: 'open-apis-list',\n    text: 'Open APIs List',\n    component: OpenAPIsList,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-provinces',\n    text: 'Open APIs GHN Provinces',\n    component: GHNProvinces,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-districts',\n    text: 'Open APIs GHN Districts',\n    component: GHNDistricts,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-wards',\n    text: 'Open APIs GHN Wards',\n    component: GHNWards,\n    navigation: false\n  },\n  {\n    path: 'open-apis-vietcetera',\n    text: 'Open APIs Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'weather',\n    text: 'Weather',\n    component: Weather,\n    navigation: true\n  },\n  {\n    path: 'weather-current',\n    text: 'Weather Current',\n    component: WeatherCurrent,\n    navigation: false\n  },\n  {\n    path: 'youtube',\n    text: 'YouTube',\n    component: YouTube,\n    navigation: true\n  },\n  {\n    path: 'youtube-trending',\n    text: 'YouTube Trending',\n    component: YouTubeTrending,\n    navigation: false\n  },\n  {\n    path: 'youtube-video-categories',\n    text: 'YouTube Video Categories',\n    component: YouTubeVideoCategories,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n}\n\nexport default class NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [] };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesProviders extends Component<\n  IPhonesProvidersProps,\n  IPhonesProvidersState\n> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading: boolean, providers: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IYouTubeTrendingProps {}\n\ninterface IYouTubeTrendingState {\n  categoryId: string;\n  categories: Array<any>;\n  mapCategories: any;\n  trending: Array<any>;\n  loading: boolean;\n}\n\nexport default class YouTubeTrending extends Component<\n  IYouTubeTrendingProps,\n  IYouTubeTrendingState\n> {\n  constructor(props: IYouTubeTrendingProps) {\n    super(props);\n\n    this.state = {\n      categoryId: '',\n      categories: [],\n      mapCategories: {},\n      trending: [],\n      loading: true\n    };\n\n    this.getYouTubeTrending = this.getYouTubeTrending.bind(this);\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n    this.updateVideoCategory = this.updateVideoCategory.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n    await this.getYouTubeTrending();\n  }\n\n  async getYouTubeVideoCategories() {\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    const mapCategories: any = {};\n    for (const videoCategory of categories) {\n      const { id, title } = videoCategory;\n      mapCategories[id] = title;\n    }\n    this.setState({ categories, mapCategories });\n  }\n\n  async getYouTubeTrending(categoryId: number = 0) {\n    const { mapCategories = {} } = this.state;\n    this.setState({ loading: true });\n    const videos: Array<any> = await apis.getYouTubeTrending(categoryId);\n    const trending = videos.map(video => {\n      const { categoryId } = video;\n      const category: string = mapCategories[categoryId] || '';\n      video.category = category;\n      return video;\n    });\n    this.setState({ trending, loading: false });\n  }\n\n  async updateVideoCategory(event: any) {\n    const { value: categoryId } = event.target;\n    await this.setState({ categoryId });\n    await this.getYouTubeTrending(categoryId);\n  }\n\n  render() {\n    const { trending = [], loading = false, categoryId = '', categories = [] } = this.state;\n\n    const rowConfigs = [\n      { header: 'URL', key: 'url' },\n      { header: 'Title', key: 'title' },\n      { header: 'Category', key: 'category' }\n    ];\n\n    return (\n      <div id=\"YouTubeTrending\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={categoryId}\n                  onChange={this.updateVideoCategory}>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category.id}>\n                        {category.title}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Trending'}\n              rows={trending}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IYouTubeVideoCategoriesProps {}\n\ninterface IYouTubeVideoCategoriesState {\n  categories: Array<any>;\n  loading: boolean;\n}\n\nexport default class YouTubeVideoCategories extends Component<\n  IYouTubeVideoCategoriesProps,\n  IYouTubeVideoCategoriesState\n> {\n  constructor(props: IYouTubeVideoCategoriesProps) {\n    super(props);\n\n    this.state = { categories: [], loading: true };\n\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n  }\n\n  async getYouTubeVideoCategories() {\n    this.setState({ loading: true });\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    this.setState({ categories, loading: false });\n  }\n\n  render() {\n    const { categories = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'ID', key: 'id' },\n      { header: 'Title', key: 'title' },\n      { header: 'Assignable', key: 'assignable' },\n      { header: 'Channel ID', key: 'channelId' }\n    ];\n\n    return (\n      <div id=\"YouTubeVideoCategories\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Video Categories'}\n              rows={categories}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route exact key={index} path={`/${path}`} component={component}></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}