{"version":3,"sources":["configs/index.js","helper/index.js","components/API.js","components/CURL.js","components/Table.js","components/Doc.js","components/Footer.js","components/Navigation.js","pages/banks/Banks.js","services/index.js","services/apis.js","pages/banks/Forex.js","graphql/index.js","pages/banks/History.js","pages/banks/List.js","pages/calendar/Calendar.js","pages/calendar/Converter.js","pages/docs/Docs.js","pages/ethnic-minorities/EthnicMinorities.js","pages/finance/Finance.js","pages/finance/Companies.js","pages/finance/Highlights.js","pages/finance/History.js","pages/finance/Potentials.js","pages/finance/Profit.js","pages/government/Government.js","pages/government/GeneralSecretaries.js","pages/government/Ministers.js","pages/government/Ministries.js","pages/government/national-assembly/Chairs.js","pages/government/national-assembly/Members.js","pages/government/Presidents.js","pages/government/PrimeMinisters.js","pages/Home.js","pages/license-plates/LicensePlates.js","pages/maps/Maps.js","pages/maps/Districts.js","pages/maps/PostalCodes.js","pages/maps/Provinces.js","pages/maps/Wards.js","pages/news/News.js","pages/news/Feed.js","pages/news/Sources.js","pages/news/Trends.js","pages/phones/Phones.js","pages/phones/Prefixes.js","pages/phones/Providers.js","pages/sports/Sports.js","pages/sports/Clubs.js","pages/technologies/Technologies.js","pages/technologies/GiaoHangNhanh.js","routers/index.js","pages/technologies/APIs.js","pages/technologies/Vietcetera.js","App.js","reportWebVitals.js","index.js"],"names":["baseAPI","baseGraphQL","periods","label","value","months","name","short","endpoints","banks","getForexBanks","id","path","url","demo","method","request","headers","key","query","body","response","200","schema","type","description","400","example","message","getForexRates","syncForexRates","required","calendar","convertLunarToSolar","convertSolarToLunar","getCanChi","ethnicMinorities","getEthnicMinorities","finance","getStockCompanies","getStockHistory","getStockHighlights","getStockPotentials","calculateProfit","government","getGeneralSecretaries","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","getMinistries","getMinisters","licensePlates","getLicensePlates","maps","getMapsPostalCodes","getMapsProvinces","getMapsDistricts","getMapsWards","news","getArticles","getTrends","getSources","getCategories","phones","getPhonesPrefixes","getPhonesProviders","sports","getSportsClubs","technologies","getTechnologies","getGHNProvinces","getVietceteraArticles","capitalize","s","charAt","toUpperCase","slice","addZero","x","toString","numberFormatter","replace","processPeriod","period","now","Date","oneDay","oneWeek","unit","includes","from","parseInt","to","deepClone","o","JSON","parse","stringify","API","this","props","api","className","onClick","text","navigator","clipboard","writeText","then","alert","catch","err","Component","CURL","buildQueryString","bind","buildDataRaw","map","item","join","trim","dataRaw","queryString","length","header","index","lastFlag","Table","loading","caption","rows","rowConfigs","emptyRowsText","Spinner","animation","variant","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","renderAPIs","renderRequest","renderResponses","requestRowConfigs","responseRowConfigs","responseCodes","Object","keys","Tabs","defaultActiveKey","code","Tab","eventKey","title","list","endpoint","cardIndex","group","values","Footer","year","getFullYear","href","target","rel","Navigation","state","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","filter","route","navigation","Banks","apis","input","options","Promise","resolve","fetch","res","json","error","console","no","ministry","trends","encodeURI","category","source","articles","buy","sell","volume","profit","symbol","data","currencies","currency","bank","status","province_id","month","date","canChi","BanksForex","sortBy","sortDir","getBanksForexRates","sort","setState","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","Card","Body","Form","Group","Control","as","defaultValue","time","graphql","fallback","result","graphGet","fields","fieldsString","params","_key","__value","paramsString","find","prefix","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","rates","rate","labels","hour","minute","datasets","buyData","transferData","sellData","lines","assign","Title","BanksList","renderTable","Button","Calendar","CalendarConverter","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","getDate","yyyy","mm","dd","event","split","controlId","Label","placeholder","pattern","onChange","Docs","renderSidebar","scrollTo","targetID","top","$","offset","log","animate","colors","get","post","color","toLowerCase","groups","EthnicMinorities","filterEthnicMinorities","ethnicMinority","type_en","typeFlag","typeEnFlag","Finance","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","highlight","startDate","industry","subsector","low","latest","latestDate","min","minDate","max","maxDate","diff","diffToMin","diffToMax","median","average","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","history","i","close","_labels","timestamp","concat","array","indexOf","class","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","Government","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","Home","npm","docs","filterAPIs","filterPackages","updateQuery","externalPackages","filterExternalPackages","packages","_package","LicensePlates","filterLicensePlates","licensePlate","license","Maps","MapsDistricts","provinces","districts","updateProvince","province","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","wards","News","NewsFeed","categories","sources","updateCategory","updateSource","ListGroup","article","dateTimeString","Subtitle","Text","NewsSources","Badge","NewsTrends","getGoogleTrends","trend","Phones","PhonesPrefixes","prefixes","PhonesProviders","providers","provider","_provider","Sports","SportsClubs","clubs","Technologies","GiaoHangNhanh","component","filterTechnologies","technology","nameFlag","option","publishDate","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca899cc5.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\nexport const periods = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport const endpoints = {\n  banks: {\n    getForexBanks: {\n      id: 'getForexBanks',\n      name: 'Get Forex Banks',\n      path: '/banks/forex/banks',\n      url: `${baseAPI}/banks/forex/banks`,\n      demo: 'banks-list',\n      method: 'GET',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getForexRates: {\n      id: 'getForexRates',\n      name: 'Get Forex Rates',\n      method: 'GET',\n      path: '/banks/forex/rates',\n      url: `${baseAPI}/banks/forex/rates`,\n      demo: 'banks-forex',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'currencies', type: 'Array<string>', description: '' },\n            { name: 'data', type: 'Array<Rates>', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    syncForexRates: {\n      id: 'syncForexRates',\n      name: 'Sync Forex Rates',\n      method: 'POST',\n      path: '/banks/forex/sync',\n      url: `${baseAPI}/banks/forex/sync`,\n      demo: 'banks-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'id', required: true, type: 'string', description: '' }]\n      },\n      response: {\n        200: { schema: [{ name: 'status', type: 'string', description: '' }] },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  calendar: {\n    convertLunarToSolar: {\n      id: 'convertLunarToSolar',\n      name: 'Convert Lunar Date to Solar Date',\n      method: 'POST',\n      path: '/calendar/lunar2solar',\n      url: `${baseAPI}/calendar/lunar2solar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    convertSolarToLunar: {\n      id: 'convertSolarToLunar',\n      name: 'Convert Solar Date to Lunar Date',\n      method: 'POST',\n      path: '/calendar/solar2lunar',\n      url: `${baseAPI}/calendar/solar2lunar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getCanChi: {\n      id: 'getCanChi',\n      name: 'Get Can Chi of Lunar Date',\n      method: 'POST',\n      path: '/calendar/lunar/can-chi',\n      url: `${baseAPI}/calendar/lunar/can-chi`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [{ name: 'canChi', type: 'string', description: '' }] },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  ethnicMinorities: {\n    getEthnicMinorities: {\n      id: 'getEthnicMinorities',\n      name: 'Get Ethnic Minorities',\n      method: 'GET',\n      path: '/ethnic-minorities',\n      url: `${baseAPI}/ethnic-minorities`,\n      demo: 'ethnic-minorities',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_en', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  finance: {\n    getStockCompanies: {\n      id: 'getStockCompanies',\n      name: 'Get Listed Companies',\n      method: 'GET',\n      path: '/finance/companies',\n      url: `${baseAPI}/finance/companies`,\n      demo: 'finance-companies',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'market', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'supersector', type: 'string', description: '' },\n            { name: 'sector', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'listingDate', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockHistory: {\n      id: 'getStockHistory',\n      name: 'Get Stock History',\n      method: 'POST',\n      path: '/finance/history',\n      url: `${baseAPI}/finance/history`,\n      demo: 'finance-history',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'symbol', type: 'string', required: true, description: '' },\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'history', type: 'Array<Date>', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockHighlights: {\n      id: 'getStockHighlights',\n      name: 'Get Stock Highlights',\n      method: 'POST',\n      path: '/finance/highlights',\n      url: `${baseAPI}/finance/highlights`,\n      demo: 'finance-highlights',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [] },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockPotentials: {\n      id: 'getStockPotentials',\n      name: 'Get Stock Potentials',\n      method: 'POST',\n      path: '/finance/potentials',\n      url: `${baseAPI}/finance/potentials`,\n      demo: 'finance-potentials',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [] },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    calculateProfit: {\n      id: 'calculateProfit',\n      name: 'Calculate Profit',\n      method: 'POST',\n      path: '/finance/profit',\n      url: `${baseAPI}/finance/profit`,\n      demo: 'finance-profit',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'buy', type: 'number', required: true, description: '' },\n          { name: 'sell', type: 'number', required: true, description: '' },\n          { name: 'volume', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [{ name: 'profit', type: 'number', description: '' }] },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  government: {\n    getGeneralSecretaries: {\n      id: 'getGeneralSecretaries',\n      name: 'Get General Secretaries',\n      method: 'GET',\n      path: '/government/general-secretaries',\n      url: `${baseAPI}/government/general-secretaries`,\n      demo: 'government-general-secretaries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPresidents: {\n      id: 'getPresidents',\n      name: 'Get Presidents',\n      method: 'GET',\n      path: '/government/presidents',\n      url: `${baseAPI}/government/presidents`,\n      demo: 'government-presidents',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPrimeMinisters: {\n      id: 'getPrimeMinisters',\n      name: 'Get Prime Ministers',\n      method: 'GET',\n      path: '/government/prime-ministers',\n      url: `${baseAPI}/government/prime-ministers`,\n      demo: 'government-prime-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getNationalAssemblyChairs: {\n      id: 'getNationalAssemblyChairs',\n      name: 'Get National Assembly Chairs',\n      method: 'GET',\n      path: '/government/national-assembly/chairs',\n      url: `${baseAPI}/government/national-assembly/chairs`,\n      demo: 'government-national-assembly-chairs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getNationalAssemblyMembers: {\n      id: 'getNationalAssemblyMembers',\n      name: 'Get National Assembly Members',\n      method: 'GET',\n      path: '/government/national-assembly/members',\n      url: `${baseAPI}/government/national-assembly/members`,\n      demo: 'government-national-assembly-members',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'no', type: 'number', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'no', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'date_of_birth', type: 'string', description: '' },\n            { name: 'city_of_birth', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'degree', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'percentage', type: 'number', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMinistries: {\n      id: 'getMinistries',\n      name: 'Get Ministries',\n      method: 'GET',\n      path: '/government/ministries',\n      url: `${baseAPI}/government/ministries`,\n      demo: 'government-ministries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'name_en', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMinisters: {\n      id: 'getMinisters',\n      name: 'Get Ministers',\n      method: 'GET',\n      path: '/government/ministers',\n      url: `${baseAPI}/government/ministers`,\n      demo: 'government-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  licensePlates: {\n    getLicensePlates: {\n      id: 'getLicensePlates',\n      name: 'Get License Plates',\n      method: 'GET',\n      path: '/license-plates',\n      url: `${baseAPI}/license-plates`,\n      demo: 'license-plates',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'license', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'license', type: 'string', description: '' },\n            { name: 'definition', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  maps: {\n    getMapsPostalCodes: {\n      id: 'getMapsPostalCodes',\n      name: 'Get Postal Codes',\n      method: 'GET',\n      path: '/maps/postal-codes',\n      url: `${baseAPI}/maps/postal-codes`,\n      demo: 'maps-postal-codes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'code', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsProvinces: {\n      id: 'getMapsProvinces',\n      name: 'Get Provinces',\n      method: 'GET',\n      path: '/maps/provinces',\n      url: `${baseAPI}/maps/provinces`,\n      demo: 'maps-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'level_en', type: 'string', required: false, description: '' },\n          { name: 'macro_region_en', type: 'string', required: false, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'province_id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'capital', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'macro_region', type: 'string', description: '' },\n            { name: 'macro_region_en', type: 'string', description: '' },\n            { name: 'region', type: 'string', description: '' },\n            { name: 'region_en', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsDistricts: {\n      id: 'getMapsDistricts',\n      name: 'Get Districts',\n      method: 'GET',\n      path: '/maps/districts',\n      url: `${baseAPI}/maps/districts`,\n      demo: 'maps-districts',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsWards: {\n      id: 'getMapsWards',\n      name: 'Get Wards',\n      method: 'GET',\n      path: '/maps/wards',\n      url: `${baseAPI}/maps/wards`,\n      demo: 'maps-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: { schema: [] },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  news: {\n    getArticles: {\n      id: 'getArticles',\n      name: 'Get Articles',\n      method: 'GET',\n      path: '/news',\n      url: `${baseAPI}/news`,\n      demo: 'news-feed',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'category', type: 'string', required: true, description: '' },\n          { name: 'source', type: 'string', required: true, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'source', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' },\n            { name: 'pubDate', type: 'string', description: '' },\n            { name: 'date', type: 'string', description: '' },\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hours', type: 'number', description: '' },\n            { name: 'minutes', type: 'number', description: '' },\n            { name: 'seconds', type: 'number', description: '' },\n            { name: 'timestamp', type: 'number', description: '' },\n            { name: 'dateTimeString', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getTrends: {\n      id: 'getTrends',\n      name: 'Get (Google) Trends',\n      method: 'GET',\n      path: '/news/trends',\n      url: `${baseAPI}/news/trends`,\n      demo: 'news-trends',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hour', type: 'number', description: '' },\n            { name: 'trends', type: 'Array<string>', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getSources: {\n      id: 'getSources',\n      name: 'Get Sources',\n      method: 'GET',\n      path: '/news/sources',\n      url: `${baseAPI}/news/sources`,\n      demo: 'news-sources',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'category', type: 'string', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getCategories: {\n      id: 'getCategories',\n      name: 'Get Categories',\n      method: 'GET',\n      path: '/news/categories',\n      url: `${baseAPI}/news/categories`,\n      demo: 'news-categories',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: []\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  phones: {\n    getPhonesPrefixes: {\n      id: 'getPhonesPrefixes',\n      name: 'Get Phone Prefixes',\n      method: 'GET',\n      path: '/phones/prefixes',\n      url: `${baseAPI}/phones/prefixes`,\n      demo: 'phones-prefixes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'prefix', type: 'string', description: '' },\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'provider_id', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPhonesProviders: {\n      id: 'getPhonesProviders',\n      name: 'Get Phone Providers',\n      method: 'GET',\n      path: '/phones/providers',\n      url: `${baseAPI}/phones/providers`,\n      demo: 'phones-providers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'prefixes', type: 'Array<string>', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  sports: {\n    getSportsClubs: {\n      id: 'getSportsClubs',\n      name: 'Get Sports Clubs',\n      method: 'GET',\n      path: '/sports/clubs',\n      url: `${baseAPI}/sports/clubs`,\n      demo: 'sports-clubs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'sport', type: 'string', description: '' },\n            { name: 'sport_en', type: 'string', description: '' },\n            { name: 'competition', type: 'string', description: '' },\n            { name: 'city', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  technologies: {\n    getTechnologies: {\n      id: 'getTechnologies',\n      name: 'Get Public APIs',\n      method: 'GET',\n      path: '/technologies',\n      url: `${baseAPI}/technologies`,\n      demo: 'technologies-apis',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_id', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'npm', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getGHNProvinces: {\n      id: 'getGHNProvinces',\n      name: 'GHN - Get Provinces',\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/provinces',\n      url: `${baseAPI}/technologies/giaohangnhanh/provinces`,\n      demo: 'technologies-ghn-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getVietceteraArticles: {\n      id: 'getVietceteraArticles',\n      name: 'Get Vietcetera Articles',\n      method: 'GET',\n      path: '/technologies/vietcetera',\n      url: `${baseAPI}/technologies/vietcetera`,\n      demo: 'technologies-vietcetera',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'publishDate', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  }\n};\n","export const capitalize = (s = '') => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const addZero = (x = 0) => {\n  return x > 9 ? x.toString() : `0${x}`;\n};\n\nexport const numberFormatter = (x = 0) => {\n  return x\n    .toString()\n    .replace(/,/g, '')\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const processPeriod = period => {\n  const now = Date.now();\n  const oneDay = 1000 * 60 * 60 * 24;\n  const oneYear = oneDay * 365;\n  const oneMonth = oneDay * 30;\n  const oneWeek = oneDay * 7;\n  let unit = oneWeek;\n  if (period.includes('Y')) {\n    unit = oneYear;\n  } else if (period.includes('M')) {\n    unit = oneMonth;\n  } else if (period.includes('W')) {\n    unit = oneWeek;\n  }\n\n  const time = parseInt(period[0]) || 2;\n  const from = now - unit * time;\n\n  return { from, to: now };\n};\n\nexport const deepClone = (o = {}) => {\n  return JSON.parse(JSON.stringify(o));\n};\n\nexport const copyToClipboard = text => {\n  navigator.clipboard\n    .writeText(text)\n    .then(() => {\n      alert('Text copied to clipboard');\n    })\n    .catch(err => {\n      alert('Error in copying text: ', err);\n    });\n};\n\nexport const buildQueryString = (query = {}) => {\n  const keys = Object.keys(query);\n  if (!keys.length) return '';\n  return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n};\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { copyToClipboard } from '../helper';\n\nexport default class API extends Component {\n  render() {\n    const { method, url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\nexport default class CURL extends Component {\n  constructor() {\n    super();\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query) {\n    return query\n      .map(item => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body) {\n    const dataRaw = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method, url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nexport default class Table extends Component {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data'\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\nexport default class Doc extends Component {\n  constructor() {\n    super();\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n  }\n\n  renderRequest(request, method, path) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  renderResponses(response) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">\n                    <b>{name}</b>\n                  </h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\" className=\"mt-3\">\n        <h2 className=\"mb-3\">\n          <b>{header}</b>\n        </h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\nexport default class Navigation extends Component {\n  constructor() {\n    super();\n\n    this.state = { routes };\n  }\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path, text } = route;\n                      return (\n                        <Dropdown.Item key={index} href={'#' + path}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <Doc group={'banks'} header={'Banks'}></Doc>\n      </div>\n    );\n  }\n}\n","import APIS from './apis';\n\nconst apis = new APIS();\n\nexport { apis };\n","import { endpoints } from '../configs';\n\nexport default class APIS {\n  buildQueryString(query = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  fetch(endpoint, request = {}) {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  async getGeneralSecretaries() {\n    const endpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  async getPresidents() {\n    const endpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  async getPrimeMinisters() {\n    const endpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  async getNationalAssemblyChairs() {\n    const endpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  async getNationalAssemblyMembers(no) {\n    const endpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no } });\n  }\n\n  async getMinistries() {\n    const endpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  async getMinisters(ministry) {\n    const endpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry } });\n  }\n\n  async getGoogleTrends() {\n    const endpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map(text => {\n      const url = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  async getSources() {\n    const endpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  async getCategories() {\n    const endpoint = endpoints.news.getCategories;\n    return await this.fetch(endpoint);\n  }\n\n  async getArticles(options = {}) {\n    const { category, source } = options;\n    const endpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source } })) || {};\n    return articles;\n  }\n\n  async calculateProfit(buy, sell, volume) {\n    const endpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { body: { buy, sell, volume } });\n    return profit;\n  }\n\n  async getStockHighlights(from, to) {\n    const endpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { body: { from, to } });\n  }\n\n  async getStockPotentials(from, to) {\n    const endpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { body: { from, to } });\n  }\n\n  async getStockCompanies() {\n    const endpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  async getStockHistory(symbol, from, to) {\n    const endpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: { symbol, from, to } });\n  }\n\n  async getBanksForexRates() {\n    const endpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  async getForexBanks() {\n    const endpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  async syncForexRates(id) {\n    const endpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, { body: { id } });\n    return status;\n  }\n\n  async getMapsPostalCodes() {\n    const endpoint = endpoints.maps.getMapsPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  async getMapsProvinces() {\n    const endpoint = endpoints.maps.getMapsProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  async getMapsDistricts(province_id) {\n    const endpoint = endpoints.maps.getMapsDistricts;\n    return await this.fetch(endpoint, { query: { province_id } });\n  }\n\n  async getMapsWards() {\n    const endpoint = endpoints.maps.getMapsWards;\n    return await this.fetch(endpoint);\n  }\n\n  async getSportsClubs() {\n    const endpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  async getLicensePlates() {\n    const endpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  async getEthnicMinorities() {\n    const endpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  async getTechnologies() {\n    const endpoint = endpoints.technologies.getTechnologies;\n    return await this.fetch(endpoint);\n  }\n\n  async getPhonesProviders() {\n    const endpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  async getPhonesPrefixes() {\n    const endpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  async getGHNProvinces() {\n    const endpoint = endpoints.technologies.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  async convertLunarToSolar(year, month, date) {\n    const endpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { body: { year, month, date } });\n  }\n\n  async convertSolarToLunar(year, month, date) {\n    const endpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { body: { year, month, date } });\n  }\n\n  async getCanChi(year, month, date) {\n    const endpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { body: { year, month, date } });\n    return canChi;\n  }\n\n  async getVietceteraArticles(type) {\n    const endpoint = endpoints.technologies.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type } })) || [];\n    return articles;\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class BanksForex extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    this.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && (\n              <Form>\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.value}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency.toUpperCase()}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n            )}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                          Buy\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                          Transfer\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                          Sell\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const { bank = '', time = '', buy = {}, transfer = {}, sell = {} } = item;\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buy[currency] || ''}</td>\n                              <td>{transfer[currency] || ''}</td>\n                              <td>{sell[currency] || ''}</td>\n                              <td>{time}</td>\n                            </tr>\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nconst graphql = async (key = '', query = '', fallback = {}) => {\n  const body = { query };\n  const url = `${baseGraphQL}`;\n  return new Promise(resolve => {\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        const { data = {} } = res;\n        const result = data[key] || fallback;\n        resolve(result);\n      })\n      .catch(error => {\n        console.error(error);\n        resolve({});\n      });\n  });\n};\n\nconst graphGet = async (key = '', fields = [], options = {}) => {\n  const fieldsString = fields.join(' ');\n  const params = Object.keys(options)\n    .map(key => {\n      let value = options[key];\n      if (key === 'filter') {\n        const filterKeys = Object.keys(options[key]);\n        value = filterKeys.map(_key => {\n          const __value =\n            typeof options[key][_key] === 'string' ? `\"${options[key][_key]}\"` : options[key][_key];\n          return `${_key}: ${__value}`;\n        });\n        value = `{${value}}`;\n      }\n      return `${key}: ${value}`;\n    })\n    .join(',');\n  const paramsString = params ? `(${params})` : '';\n  const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n  const fallback = [];\n  const list = await graphql(key, query, fallback);\n  return list;\n};\n\nconst graphPost = async (key = '', body = {}, fields = []) => {\n  const newRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n    })\n    .join(' ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${newRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphPut = async (key = '', body = {}, fields = []) => {\n  const updatedRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      if (valueType === 'string') return `${key}: \"${value}\"`;\n      return `${key}: ${value}`;\n    })\n    .join(', ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${updatedRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphDelete = async (key = '', id = '', fields = []) => {\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n/**\n * GraphQL Functions\n */\nexport const count = async (prefix = '') => {\n  const key = `${prefix}Count`;\n  const query = `query { ${key} }`;\n  const fallback = 0;\n  const count = await graphql(key, query, fallback);\n  return count;\n};\n\nexport const find = async (prefix = '', fields = [], options = {}) => {\n  const key = `${prefix}Many`;\n  const list = await graphGet(key, fields, options);\n  return list;\n};\n\nexport const add = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}CreateOne`;\n  const item = await graphPost(key, body, fields);\n  return item;\n};\n\nexport const updateById = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}UpdateById`;\n  const item = await graphPut(key, body, fields);\n  return item;\n};\n\nexport const removeById = async (prefix = '', id = '', fields = []) => {\n  const key = `${prefix}RemoveById`;\n  const item = await graphDelete(key, id, fields);\n  return item;\n};\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis } from '../../services';\nimport { find } from '../../graphql';\nimport { deepClone } from '../../helper';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nexport default class BanksHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [] };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map(rate => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map(item => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data, currency) {\n    const rates = data.map(item => {\n      const { rates } = item;\n      const rate = rates.find(rate => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map(rate => rate.buy);\n    const transferData = rates.map(rate => rate.transfer);\n    const sellData = rates.map(rate => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.value}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank.name}>\n                          {bank.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.value}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class BanksList extends Component {\n  constructor() {\n    super();\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id) {\n    const message = await apis.syncForexRates();\n    alert(message);\n  }\n\n  renderTable(loading, banks = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', url = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <Doc group={'calendar'} header={'Calendar'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../configs';\nimport { addZero, capitalize } from '../../helper';\nimport { apis } from '../../services';\n\nexport default class CalendarConverter extends Component {\n  constructor() {\n    super();\n\n    this.state = { solarDate: '', solarString: '', lunarDate: '', lunarString: '' };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = addZero(d.getMonth() + 1);\n    const date = addZero(d.getDate());\n    const solarDate = `${year}-${month}-${date}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year, month, date) {\n    return `${capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year, month, date) {\n    return await apis.getCanChi(year, month, date);\n  }\n\n  async updateSolarDate(event) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { capitalize } from '../../helper';\nimport { endpoints } from '../../configs';\nimport { Doc } from '../../components';\n\nimport $ from 'jquery';\n\nexport default class Docs extends Component {\n  constructor() {\n    super();\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollTo = this.scrollTo.bind(this);\n  }\n\n  scrollTo(id) {\n    const targetID = `#${id}`;\n    const top = $(targetID).offset().top;\n    console.log(targetID, top);\n    $('#DocsMain').animate({ scrollTo: top }, 1500);\n  }\n\n  renderTable(apis) {\n    const colors = { get: 'text-success', post: 'text-info' };\n    return (\n      apis.length > 0 && (\n        <table>\n          <tbody>\n            {apis.map((api, index) => {\n              const { id, method, name } = api;\n              const color = colors[method.toLowerCase()];\n              return (\n                <tr onClick={() => this.scrollTo(id)} key={index} className=\"cursor-pointer\">\n                  <td className=\"pt-1 pb-1 pr-3\">\n                    <small className={color}>\n                      <b>{method}</b>\n                    </small>\n                  </td>\n                  <td>\n                    <small>{name}</small>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )\n    );\n  }\n\n  renderSidebar(endpoints) {\n    const groups = Object.keys(endpoints);\n    const list = groups.map(group => {\n      const apis = Object.values(endpoints[group]);\n      return { group, apis };\n    });\n\n    console.log(list);\n    return (\n      <div id=\"DocSidebar\">\n        {list.length > 0 &&\n          list.map((item, index) => {\n            const { group, apis } = item;\n            const header = capitalize(group);\n            return (\n              <div key={index}>\n                <p className=\"m-0\">{header}</p>\n                {this.renderTable(apis)}\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        {/* <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div id=\"DocsMain\" className=\"h-80vh overflow-auto\">\n              \n            </div>\n          </div>\n        </div> */}\n        {groups.length > 0 &&\n          groups.map((group, index) => {\n            return <Doc key={index} group={group} header={capitalize(group)}></Doc>;\n          })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Doc, Table } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', ethnicMinorities: [], filterEthnicMinorities: [], loading: true };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <Doc group={'ethnicMinorities'} header={'Ethnic Minorities'}></Doc>\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.value}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <Doc group={'finance'} header={'Finance'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class FinanceCompanies extends Component {\n  constructor() {\n    super();\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { apis } from '../../services';\nimport { processPeriod } from '../../helper';\n\nexport default class FinanceHighlights extends Component {\n  constructor() {\n    super();\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0 };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading, highlights = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.value}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../configs';\nimport { addZero, processPeriod, deepClone } from '../../helper';\nimport { apis } from '../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nexport default class FinanceHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, data: [], symbols: [], symbol: '', from: 0, to: 0 };\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map(company => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels, historyData) {\n    const datasets = historyData.map(item => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find(i => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map(item => {\n      const { label = '', data = [] } = item;\n\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data) {\n    let labels = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels = history.map(value => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = addZero(d.getFullYear());\n        const month = addZero(d.getMonth() + 1);\n        const date = addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.value}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.value}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { processPeriod } from '../../helper';\nimport { apis } from '../../services';\n\nexport default class FinancePotentials extends Component {\n  constructor() {\n    super();\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0 };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading, potentials = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.value}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { numberFormatter } from '../../helper';\n\nexport default class FinanceProfit extends Component {\n  constructor() {\n    super();\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.value}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.value}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.value}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <Doc group={'government'} header={'Government'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentGeneralSecretaries extends Component {\n  constructor() {\n    super();\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentMinistries extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\nimport { Table } from '../../../components';\n\nexport default class GovernmentNationalAssemblyChairs extends Component {\n  constructor() {\n    super();\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\nimport { Table } from '../../../components';\n\nexport default class GovernmentNationalAssemblyMembers extends Component {\n  constructor() {\n    super();\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentPresidents extends Component {\n  constructor() {\n    super();\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GovernmentPrimeMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#lunar-calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: 'vnapis#maps',\n        docs: '/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = { query: '', apis, filterAPIs: apis };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages = [], query = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title, packages = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container h-60vh\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"w-100 mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.value}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Doc, Table } from '../../components';\n\nexport default class LicensePlates extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <Doc group={'licensePlates'} header={'License Plates'}></Doc>\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.value}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"Maps\" className=\"container\">\n        <Doc group={'maps'} header={'Maps'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class MapsDistricts extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n    this.getMapsDistricts = this.getMapsDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getMapsDistricts();\n  }\n\n  async getMapsProvinces() {\n    const provinces = await apis.getMapsProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getMapsDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getMapsDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getMapsDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class MapsPostalCodes extends Component {\n  constructor() {\n    super();\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getMapsPostalCodes = this.getMapsPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsPostalCodes();\n  }\n\n  async getMapsPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getMapsPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class MapsProvinces extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n  }\n\n  async getMapsProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getMapsProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class MapsWards extends Component {\n  constructor() {\n    super();\n\n    this.state = { wards: [], loading: true };\n\n    this.getMapsWards = this.getMapsWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsWards();\n  }\n\n  async getMapsWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getMapsWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Wards ({wards.length})</Card.Title>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <Doc group={'news'} header={'News'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { capitalize } from '../../helper';\n\nexport default class NewsFeed extends Component {\n  constructor() {\n    super();\n\n    this.state = { category: '', categories: [], source: '', sources: [], articles: [] };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.value}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.value}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class NewsSources extends Component {\n  constructor() {\n    super();\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading, sources = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category, index) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class NewsTrends extends Component {\n  constructor() {\n    super();\n    this.state = { trends: [] };\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <Doc group={'phones'} header={'Phones'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class PhonesPrefixes extends Component {\n  constructor() {\n    super();\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class PhonesProviders extends Component {\n  constructor() {\n    super();\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading, providers = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <Doc group={'sports'} header={'Sports'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../components';\nimport { apis } from '../../services';\n\nexport default class SportsClubs extends Component {\n  constructor() {\n    super();\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\" className=\"container\">\n        <Doc group={'technologies'} header={'Technologies'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Table } from '../../components';\n\nexport default class GiaoHangNhanh extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"GiaoHangNhanh\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">Giao Hang Nhanh</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  // Maps\n  Maps,\n  MapsPostalCodes,\n  MapsProvinces,\n  MapsDistricts,\n  MapsWards,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Technologies\n  Technologies,\n  APIs,\n  GiaoHangNhanh,\n  Vietcetera\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'maps',\n    text: 'Maps',\n    component: Maps,\n    navigation: true\n  },\n  {\n    path: 'maps-postal-codes',\n    text: 'Maps Postal Codes',\n    component: MapsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'maps-provinces',\n    text: 'Maps Provinces',\n    component: MapsProvinces,\n    navigation: false\n  },\n  {\n    path: 'maps-districts',\n    text: 'Maps Districts',\n    component: MapsDistricts,\n    navigation: false\n  },\n  {\n    path: 'maps-wards',\n    text: 'Maps Wards',\n    component: MapsWards,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies,\n    navigation: true\n  },\n  {\n    path: 'technologies-apis',\n    text: 'Technologies APIs',\n    component: APIs,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-provinces',\n    text: 'Technologies GHN',\n    component: GiaoHangNhanh,\n    navigation: false\n  },\n  {\n    path: 'technologies-vietcetera',\n    text: 'Technologies Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class APIs extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading, filterTechnologies = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"APIs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.value}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nexport default class Vietcetera extends Component {\n  constructor() {\n    super();\n    this.state = { articles: [], loading: false };\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}