{"version":3,"sources":["configs/urls.ts","configs/apis/administrative-divisions/get-postal-codes.ts","configs/apis/administrative-divisions/get-provinces.ts","configs/apis/administrative-divisions/get-districts.ts","configs/apis/administrative-divisions/get-wards.ts","configs/apis/administrative-divisions/get-total-wards.ts","configs/apis/administrative-divisions/index.ts","configs/apis/banks/get-banks.ts","configs/apis/banks/get-forex-banks.ts","configs/apis/banks/get-forex-rates.ts","configs/apis/banks/sync-forex-rates.ts","configs/apis/banks/index.ts","configs/apis/calendar/convert-lunar-to-solar.ts","configs/apis/calendar/convert-solar-to-lunar.ts","configs/apis/calendar/get-can-chi.ts","configs/apis/calendar/index.ts","configs/apis/ethnic-minorities/get-ethnic-minorities.ts","configs/apis/ethnic-minorities/index.ts","configs/apis/finance/calculate-profit.ts","configs/apis/finance/get-stock-companies.ts","configs/apis/finance/get-stock-highlights.ts","configs/apis/finance/get-stock-potentials.ts","configs/apis/finance/get-stock-history.ts","configs/apis/finance/index.ts","configs/apis/government/get-general-secretaries.ts","configs/apis/government/get-ministers.ts","configs/apis/government/get-ministries.ts","configs/apis/government/get-national-assembly-chairs.ts","configs/apis/government/get-national-assembly-members.ts","configs/apis/government/get-presidents.ts","configs/apis/government/get-prime-ministers.ts","configs/apis/government/index.ts","configs/apis/history/get-dynasties.ts","configs/apis/history/index.ts","configs/apis/license-plates/get-license-plates.ts","configs/apis/license-plates/index.ts","configs/apis/music/get-artists.ts","configs/apis/music/index.ts","configs/apis/news/get-trends.ts","configs/apis/news/get-sources.ts","configs/apis/news/get-categories.ts","configs/apis/news/get-articles.ts","configs/apis/news/index.ts","configs/apis/open-apis/get-ghn-districts.ts","configs/apis/open-apis/get-ghn-provinces.ts","configs/apis/open-apis/get-ghn-wards.ts","configs/apis/open-apis/get-open-apis.ts","configs/apis/open-apis/get-vietcetera-articles.ts","configs/apis/open-apis/index.ts","configs/apis/phones/get-prefixes.ts","configs/apis/phones/get-providers.ts","configs/apis/phones/index.ts","configs/apis/sports/get-sports-clubs.ts","configs/apis/sports/get-vleague.ts","configs/apis/sports/index.ts","configs/apis/usa/get-congress.ts","configs/apis/usa/index.ts","configs/apis/visas/get-visas.ts","configs/apis/visas/index.ts","configs/apis/weather/get-air-visual-cities.ts","configs/apis/weather/get-air-visual.ts","configs/apis/weather/get-current-weather.ts","configs/apis/weather/index.ts","configs/apis/youtube/get-trending.ts","configs/apis/youtube/get-video-categories.ts","configs/apis/youtube/index.ts","configs/apis/index.ts","configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/storage.ts","services/index.ts","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/demo/history/Dynasties.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/music/Artists.tsx","pages/demo/open-apis/List.tsx","pages/demo/open-apis/ghn/Provinces.tsx","pages/demo/open-apis/ghn/Districts.tsx","pages/demo/open-apis/ghn/Wards.tsx","pages/demo/open-apis/Vietcetera.tsx","pages/docs/AdministrativeDivisions.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/History.tsx","pages/docs/LicensePlates.tsx","pages/docs/Music.tsx","pages/docs/News.tsx","pages/docs/OpenAPIs.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Visas.tsx","pages/docs/Weather.tsx","pages/docs/YouTube.tsx","pages/demo/administrative-divisions/Districts.tsx","pages/demo/administrative-divisions/PostalCodes.tsx","pages/demo/administrative-divisions/Provinces.tsx","pages/demo/administrative-divisions/Wards.tsx","pages/demo/banks/List.tsx","pages/demo/banks/forex/Rates.tsx","pages/demo/banks/forex/History.tsx","pages/demo/banks/forex/Sync.tsx","pages/demo/calendar/Converter.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/news/Trends.tsx","pages/demo/news/Feed.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/sports/Clubs.tsx","pages/demo/sports/VLeague.tsx","pages/demo/usa/Congress.tsx","pages/demo/visas/List.tsx","pages/demo/weather/AirVisual.tsx","pages/demo/weather/Current.tsx","pages/demo/youtube/Trending.tsx","routers/index.ts","redux/actions/theme.ts","components/Navigation.tsx","components/NavPills.tsx","components/SmallDoc.tsx","App.tsx","redux/reducers/theme.ts","redux/reducers/index.ts","redux/store.ts","serviceWorkerRegistration.js","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","getPostalCodes","id","name","public","method","path","url","demo","request","headers","key","value","query","type","required","description","body","response","200","schema","example","code","province","province_id","400","message","getProvinces","capital","level","level_en","macro_region","macro_region_en","region","region_en","getDistricts","getWards","ward","district","getTotalWards","total","administrativeDivisions","getBanks","name_en","name_short","type_en","getForexBanks","banks","getForexRates","bank","buyCash","buyTransfer","sellCash","sellTransfer","syncForexRates","status","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","calendar","getEthnicMinorities","ethnicMinorities","calculateProfit","profit","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","getStockHistory","history","finance","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getMinisters","getMinistries","short","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","percentage","getPresidents","getPrimeMinisters","government","getDynasties","temple_name","birth_name","birth","death","start_year","end_year","dynasty","getLicensePlates","license","definition","licensePlates","getArtists","music","getTrends","hour","categories","getSources","sources","getCategories","getArticles","source","sourceURL","publishedDate","news","getGHNDistricts","district_id","support_type","getGHNProvinces","getGHNWards","getOpenAPIs","type_id","npm","getVietceteraArticles","publishDate","openAPIs","getPrefixes","prefix","provider","provider_id","getProviders","prefixes","phones","getSportsClubs","sport","sport_en","competition","city","getVLeague","matches","leagueTable","sports","getCongressMembers","first_name","last_name","middle_name","state","seniority","party","usa","getCongress","getVisas","country","requirement","visas","getAirVisualCities","getAirVisual","location","current","getCurrentWeather","coord","weather","base","main","visibility","wind","clouds","dt","sys","timezone","cod","getTrending","channelId","publishedAt","channelTitle","tags","categoryId","getVideoCategories","assignable","youtube","endpoints","periods","label","months","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","timeout","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","category","articles","buy","sell","volume","from","to","skip","chamber","GraphQL","fallback","data","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","str","match","Storage","localStorage","setItem","getItem","apis","helper","storage","API","props","themeTextColor","api","className","onClick","copyToClipboard","Component","connect","_","get","CURL","bind","buildDataRaw","trim","dataRaw","header","index","lastFlag","Table","sortBy","sortDir","renderCell","sort","by","rows","dir","setState","a","b","row","config","seperator","cell","href","target","rel","loading","caption","rowConfigs","emptyRowsText","rowIndexEnabled","themeSpinnerVariant","themePrimaryBackgroundColor","themeBorder","Spinner","animation","variant","headerIndex","rowIndex","cellIndex","Doc","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","themeBorderTop","getFullYear","List","filterEthnicMinorities","event","ethnicMinority","typeFlag","toLowerCase","typeEnFlag","themeInput","Form","Control","placeholder","onChange","GeneralSecretaries","generalSecretaries","Ministers","ministries","ministers","updateMinistry","renderForm","Group","as","Ministries","Chairs","chairs","Members","members","Presidents","presidents","PrimeMinisters","primeMinisters","Dynasties","dynasties","Home","docs","filterAPIs","renderList","updateQuery","packages","_package","themeListItemBorderBottom","themeSecondaryBackgroundColor","ListGroup","Item","Label","htmlFor","filterLicensePlates","licensePlate","Artists","artists","technologies","filterTechnologies","technology","nameFlag","Provinces","provinces","Districts","districts","Wards","wards","Vietcetera","option","themeMutedTextColor","article","Card","Title","Subtitle","Text","AdministrativeDivisions","Banks","Calendar","Docs","renderSidebar","renderTable","scrollIntoView","element","document","getElementById","behavior","colors","post","color","Accordion","camelize","capitalize","Toggle","Button","Collapse","groups","EthnicMinorities","Finance","Government","History","LicensePlates","Music","News","OpenAPIs","Phones","Sports","Visas","Weather","YouTube","updateProvince","PostalCodes","postalCodes","active","renderPagination","goToPage","updateActive","page","Math","floor","final","items","push","Pagination","size","Prev","Next","Rates","rates","currency","currencies","getBanksForexRates","updateCurrency","uniq","rate","filterRates","log","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","processRates","find","labels","minute","datasets","transfer","buyData","transferData","sellData","lines","deepClone","assign","Body","Sync","syncing","syncAll","addToSyncing","removeFromSyncing","indexOf","themeRevertSpinnerVariant","themeButtonVariant","syncingFlag","align","disabled","Converter","loadingText","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","split","controlId","pattern","Companies","companies","Highlights","highlights","updatePeriod","processPeriod","highlight","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","timestamp","concat","array","Potentials","potentials","potential","Profit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","Trends","getGoogleTrends","themeBadge","trend","Badge","Feed","updateCategory","updateSource","renderArticles","startIndex","endIndex","substring","dangerouslySetInnerHTML","__html","Prefixes","Providers","providers","Clubs","clubs","getClubs","VLeague","Congress","congress","updateChamber","member","in_office","filterVisas","visa","countryFlag","requirementFlag","AirVisual","cities","airVisual","updateCity","fallbackCity","aqius","Current","getCurrent","temp","feels_like","temp_min","temp_max","YouTubeTrending","mapCategories","trending","getYouTubeTrending","getYouTubeVideoCategories","updateVideoCategory","renderCards","videoCategory","videos","video","channelUrl","routes","component","navigation","AdministrativeDivisionsPostalCodes","AdministrativeDivisionsProvinces","AdministrativeDivisionsDistricts","AdministrativeDivisionsWards","BanksList","BanksForexRates","BanksForexHistory","BanksForexSync","CalendarConverter","EthnicMinoritiesList","FinanceCompanies","FinanceHistory","FinanceHighlights","FinancePotentials","FinanceProfit","GovernmentGeneralSecretaries","GovernmentPresidents","GovernmentPrimeMinisters","GovernmentMinistries","GovernmentMinisters","GovernmentNationalAssemblyChairs","GovernmentNationalAssemblyMembers","HistoryDynasties","LicensePlatesList","MusicArtists","NewsFeed","OpenAPIsList","GHNProvinces","GHNDistricts","GHNWards","PhonesPrefixes","PhonesProviders","SportsClubs","SportsVLeague","USACongress","VisasList","WeatherAirVisual","WeatherCurrent","updateTheme","theme","set","Navigation","newTheme","themeBorderBottom","Navbar","expand","Brand","aria-controls","Nav","pathname","inline","Dropdown","DropdownButton","menuAlign","route","Link","Check","checked","dispatch","themeActions","NavPills","themeLink","marginRight","SmallDoc","App","basename","exact","LIGHT_THEME","DARK_THEME","LIGHT_TEXT_COLOR","DARK_TEXT_COLOR","LIGHT_MUTED_TEXT_COLOR","DARK_MUTED_TEXT_COLOR","LIGHT_BORDER","DARK_BORDER","LIGHT_BORDER_TOP","DARK_BORDER_TOP","LIGHT_BORDER_BOTTOM","DARK_BORDER_BOTTOM","LIGHT_SPINNER_VARIANT","DARK_SPINNER_VARIANT","LIGHT_REVERT_SPINNER_VARIANT","DARK_REVERT_SPINNER_VARIANT","LIGHT_BUTTON_VARIANT","DARK_BUTTON_VARIANT","LIGHT_PRIMARY_BACKGROUND_COLOR","DARK_PRIMARY_BACKGROUND_COLOR","LIGHT_SECONDARY_BACKGROUND_COLOR","DARK_SECONDARY_BACKGROUND_COLOR","LIGHT_LIST_ITEM_BORDER_BOTTOM","DARK_LIST_ITEM_BORDER_BOTTOM","DARK_INPUT","LIGHT_BADGE","DARK_BADGE","LIGHT_LINK","DARK_LINK","initialState","textColor","mutedTextColor","spinnerVariant","revertSpinnerVariant","buttonVariant","border","borderTop","borderBottom","primaryBackgroundColor","secondaryBackgroundColor","listItemBorderBottom","badge","link","themeReducer","action","reducers","combineReducers","store","createStore","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.50a5169f.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietzam.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietzam.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n","import { baseAPI } from '../../urls';\n\nconst getPostalCodes = {\n  id: 'getPostalCodes',\n  name: 'Get Postal Codes',\n  public: true,\n  method: 'GET',\n  path: '/administrative-divisions/postal-codes',\n  url: `${baseAPI}/administrative-divisions/postal-codes`,\n  demo: 'administrative-divisions-postal-codes',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'code', type: 'string', description: '' },\n        { name: 'province', type: 'string', description: '' },\n        { name: 'province_id', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          code: '<string>',\n          province: '<string>',\n          province_id: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getPostalCodes;\n","import { baseAPI } from '../../urls';\n\nconst getProvinces = {\n  id: 'getProvinces',\n  name: 'Get Provinces',\n  public: true,\n  method: 'GET',\n  path: '/administrative-divisions/provinces',\n  url: `${baseAPI}/administrative-divisions/provinces`,\n  demo: 'administrative-divisions-provinces',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [\n      { name: 'level_en', type: 'string', required: false, description: '' },\n      { name: 'macro_region_en', type: 'string', required: false, description: '' }\n    ],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'province_id', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'capital', type: 'string', description: '' },\n        { name: 'level', type: 'string', description: '' },\n        { name: 'level_en', type: 'string', description: '' },\n        { name: 'macro_region', type: 'string', description: '' },\n        { name: 'macro_region_en', type: 'string', description: '' },\n        { name: 'region', type: 'string', description: '' },\n        { name: 'region_en', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          province_id: '<string>',\n          name: '<string>',\n          capital: '<string>',\n          level: '<string>',\n          level_en: '<string>',\n          macro_region: '<string>',\n          macro_region_en: '<string>',\n          region: '<string>',\n          region_en: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getProvinces;\n","import { baseAPI } from '../../urls';\n\nconst getDistricts = {\n  id: 'getDistricts',\n  name: 'Get Districts',\n  public: true,\n  method: 'GET',\n  path: '/administrative-divisions/districts',\n  url: `${baseAPI}/administrative-divisions/districts`,\n  demo: 'administrative-divisions-districts',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'name', type: 'string', description: '' },\n        { name: 'level', type: 'string', description: '' },\n        { name: 'level_en', type: 'string', description: '' },\n        { name: 'province', type: 'string', description: '' },\n        { name: 'province_id', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          name: '<string>',\n          level: '<string>',\n          level_en: '<string>',\n          province: '<string>',\n          province_id: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getDistricts;\n","import { baseAPI } from '../../urls';\n\nconst getWards = {\n  id: 'getWards',\n  name: 'Get Wards',\n  public: true,\n  method: 'GET',\n  path: '/administrative-divisions/wards',\n  url: `${baseAPI}/administrative-divisions/wards`,\n  demo: 'administrative-divisions-wards',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [\n      { name: 'skip', type: 'number', required: false, description: '' },\n      { name: 'limit', type: 'number', required: false, description: '' }\n    ],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'ward', type: 'string', description: '' },\n        { name: 'district', type: 'string', description: '' },\n        { name: 'province', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          ward: '<string>',\n          district: '<string>',\n          province: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getWards;\n","import { baseAPI } from '../../urls';\n\nconst getTotalWards = {\n  id: 'getTotalWards',\n  name: 'Get Total Wards',\n  public: false,\n  method: 'GET',\n  path: '/administrative-divisions/wards/total',\n  url: `${baseAPI}/administrative-divisions/wards/total`,\n  demo: 'administrative-divisions-wards',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [{ name: 'total', type: 'number', description: '' }],\n      example: { total: '<number>' }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getTotalWards;\n","import { IAdministrativeDivisionsEndpoints } from '../../interfaces';\n\nimport getPostalCodes from './get-postal-codes';\nimport getProvinces from './get-provinces';\nimport getDistricts from './get-districts';\nimport getWards from './get-wards';\nimport getTotalWards from './get-total-wards';\n\nconst administrativeDivisions: IAdministrativeDivisionsEndpoints = {\n  getPostalCodes,\n  getProvinces,\n  getDistricts,\n  getWards,\n  getTotalWards\n};\n\nexport default administrativeDivisions;\n","import { baseAPI } from '../../urls';\n\nconst getBanks = {\n  id: 'getBanks',\n  name: 'Get Banks',\n  public: true,\n  path: '/banks',\n  url: `${baseAPI}/banks`,\n  demo: 'banks-list',\n  method: 'GET',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'code', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'name_en', type: 'string', description: '' },\n        { name: 'name_short', type: 'string', description: '' },\n        { name: 'type', type: 'string', description: '' },\n        { name: 'type_en', type: 'string', description: '' },\n        { name: 'url', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          code: '<string>',\n          name: '<string>',\n          name_en: '<string>',\n          name_short: '<string>',\n          type: '<string>',\n          type_en: '<string>',\n          url: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getBanks;\n","import { baseAPI } from '../../urls';\n\nconst getForexBanks = {\n  id: 'getForexBanks',\n  name: 'Get Forex Banks',\n  public: true,\n  path: '/banks/forex/banks',\n  url: `${baseAPI}/banks/forex/banks`,\n  demo: 'banks-forex-sync',\n  method: 'GET',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'total', type: 'number', description: '' },\n        { name: 'banks', type: 'Array<string>', description: '' }\n      ],\n      example: [{ total: '<number>', banks: '<Array<string>>' }]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getForexBanks;\n","import { baseAPI } from '../../urls';\n\nconst getForexRates = {\n  id: 'getForexRates',\n  name: 'Get Forex Rates',\n  public: true,\n  method: 'GET',\n  path: '/banks/forex/rates',\n  url: `${baseAPI}/banks/forex/rates`,\n  demo: 'banks-forex-rates',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'bank', type: 'string', description: '' },\n        { name: 'code', type: 'string', description: '' },\n        { name: 'buyCash', type: 'string', description: '' },\n        { name: 'buyTransfer', type: 'string', description: '' },\n        { name: 'sellCash', type: 'string', description: '' },\n        { name: 'sellTransfer', type: 'string', description: '' }\n      ],\n      example: {\n        bank: '<string>',\n        code: '<string>',\n        buyCash: '<string>',\n        buyTransfer: '<string>',\n        sellCash: '<string>',\n        sellTransfer: '<string>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getForexRates;\n","import { baseAPI } from '../../urls';\n\nconst syncForexRates = {\n  id: 'syncForexRates',\n  name: 'Sync Forex Rates',\n  public: true,\n  method: 'POST',\n  path: '/banks/forex/sync',\n  url: `${baseAPI}/banks/forex/sync`,\n  demo: 'banks-forex-sync',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: [{ name: 'id', required: true, type: 'string', description: '' }]\n  },\n  response: {\n    200: {\n      schema: [{ name: 'status', type: 'string', description: '' }],\n      example: { status: '<string>' }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default syncForexRates;\n","import { IBanksEndpoints } from '../../interfaces';\n\nimport getBanks from './get-banks';\nimport getForexBanks from './get-forex-banks';\nimport getForexRates from './get-forex-rates';\nimport syncForexRates from './sync-forex-rates';\n\nconst banks: IBanksEndpoints = {\n  getBanks,\n  getForexBanks,\n  getForexRates,\n  syncForexRates\n};\n\nexport default banks;\n","import { baseAPI } from '../../urls';\n\nconst convertLunarToSolar = {\n  id: 'convertLunarToSolar',\n  name: 'Convert Lunar Date to Solar Date',\n  public: true,\n  method: 'POST',\n  path: '/calendar/lunar2solar',\n  url: `${baseAPI}/calendar/lunar2solar`,\n  demo: 'calendar-converter',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: [\n      { name: 'year', required: true, type: 'number', description: '' },\n      { name: 'month', required: true, type: 'number', description: '' },\n      { name: 'date', required: true, type: 'number', description: '' }\n    ]\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'year', type: 'number', description: '' },\n        { name: 'month', type: 'number', description: '' },\n        { name: 'date', type: 'number', description: '' }\n      ],\n      example: { year: '<number>', month: '<number>', date: '<number>' }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default convertLunarToSolar;\n","import { baseAPI } from '../../urls';\n\nconst convertSolarToLunar = {\n  id: 'convertSolarToLunar',\n  name: 'Convert Solar Date to Lunar Date',\n  public: true,\n  method: 'POST',\n  path: '/calendar/solar2lunar',\n  url: `${baseAPI}/calendar/solar2lunar`,\n  demo: 'calendar-converter',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: [\n      { name: 'year', required: true, type: 'number', description: '' },\n      { name: 'month', required: true, type: 'number', description: '' },\n      { name: 'date', required: true, type: 'number', description: '' }\n    ]\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'year', type: 'number', description: '' },\n        { name: 'month', type: 'number', description: '' },\n        { name: 'date', type: 'number', description: '' }\n      ],\n      example: { year: '<number>', month: '<number>', date: '<number>' }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default convertSolarToLunar;\n","import { baseAPI } from '../../urls';\n\nconst getCanChi = {\n  id: 'getCanChi',\n  name: 'Get Can Chi of Lunar Date',\n  public: true,\n  method: 'POST',\n  path: '/calendar/lunar/can-chi',\n  url: `${baseAPI}/calendar/lunar/can-chi`,\n  demo: 'calendar-converter',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: [\n      { name: 'year', required: true, type: 'number', description: '' },\n      { name: 'month', required: true, type: 'number', description: '' },\n      { name: 'date', required: true, type: 'number', description: '' }\n    ]\n  },\n  response: {\n    200: {\n      schema: [{ name: 'canChi', type: 'string', description: '' }],\n      example: { canChi: '<string>' }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getCanChi;\n","import { ICalendarEndpoints } from '../../interfaces';\n\nimport convertLunarToSolar from './convert-lunar-to-solar';\nimport convertSolarToLunar from './convert-solar-to-lunar';\nimport getCanChi from './get-can-chi';\n\nconst calendar: ICalendarEndpoints = {\n  convertLunarToSolar,\n  convertSolarToLunar,\n  getCanChi\n};\n\nexport default calendar;\n","import { baseAPI } from '../../urls';\n\nconst getEthnicMinorities = {\n  id: 'getEthnicMinorities',\n  name: 'Get Ethnic Minorities',\n  public: true,\n  method: 'GET',\n  path: '/ethnic-minorities',\n  url: `${baseAPI}/ethnic-minorities`,\n  demo: 'ethnic-minorities-list',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'name', type: 'string', description: '' },\n        { name: 'type', type: 'string', description: '' },\n        { name: 'type_en', type: 'string', description: '' }\n      ],\n      example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getEthnicMinorities;\n","import { IEthnicMinoritiesEndpoints } from '../../interfaces';\n\nimport getEthnicMinorities from './get-ethnic-minorities';\n\nconst ethnicMinorities: IEthnicMinoritiesEndpoints = { getEthnicMinorities };\n\nexport default ethnicMinorities;\n","import { baseAPI } from '../../urls';\n\nconst calculateProfit = {\n  id: 'calculateProfit',\n  name: 'Calculate Profit',\n  public: false,\n  method: 'POST',\n  path: '/finance/profit',\n  url: `${baseAPI}/finance/profit`,\n  demo: 'finance-profit',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: [\n      { name: 'buy', type: 'number', required: true, description: '' },\n      { name: 'sell', type: 'number', required: true, description: '' },\n      { name: 'volume', type: 'number', required: true, description: '' }\n    ]\n  },\n  response: {\n    200: {\n      schema: [{ name: 'profit', type: 'number', description: '' }],\n      example: { profit: '<number>' }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default calculateProfit;\n","import { baseAPI } from '../../urls';\n\nconst getStockCompanies = {\n  id: 'getStockCompanies',\n  name: 'Get Listed Companies',\n  public: true,\n  method: 'GET',\n  path: '/finance/companies',\n  url: `${baseAPI}/finance/companies`,\n  demo: 'finance-companies',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'market', type: 'string', description: '' },\n        { name: 'group', type: 'string', description: '' },\n        { name: 'symbol', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'industry', type: 'string', description: '' },\n        { name: 'supersector', type: 'string', description: '' },\n        { name: 'sector', type: 'string', description: '' },\n        { name: 'subsector', type: 'string', description: '' },\n        { name: 'listingDate', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          market: '<string>',\n          group: '<string>',\n          symbol: '<string>',\n          name: '<string>',\n          industry: '<string>',\n          supersector: '<string>',\n          sector: '<string>',\n          subsector: '<string>',\n          listingDate: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getStockCompanies;\n","import { baseAPI } from '../../urls';\n\nconst getStockHighlights = {\n  id: 'getStockHighlights',\n  name: 'Get Stock Highlights',\n  public: false,\n  method: 'POST',\n  path: '/finance/highlights',\n  url: `${baseAPI}/finance/highlights`,\n  demo: 'finance-highlights',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: [\n      { name: 'from', type: 'number', required: true, description: '' },\n      { name: 'to', type: 'number', required: true, description: '' }\n    ]\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'average', type: 'number', description: '' },\n        { name: 'diff', type: 'number', description: '' },\n        { name: 'diffToMax', type: 'number', description: '' },\n        { name: 'diffToMin', type: 'number', description: '' },\n        { name: 'group', type: 'string', description: '' },\n        { name: 'industry', type: 'string', description: '' },\n        { name: 'latest', type: 'number', description: '' },\n        { name: 'latestDate', type: 'string', description: '' },\n        { name: 'low', type: 'boolean', description: '' },\n        { name: 'max', type: 'number', description: '' },\n        { name: 'maxDate', type: 'string', description: '' },\n        { name: 'median', type: 'number', description: '' },\n        { name: 'min', type: 'number', description: '' },\n        { name: 'minDate', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'numberOfDates', type: 'number', description: '' },\n        { name: 'start', type: 'number', description: '' },\n        { name: 'startDate', type: 'string', description: '' },\n        { name: 'subsector', type: 'string', description: '' },\n        { name: 'symbol', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          average: '<number>',\n          diff: '<number>',\n          diffToMax: '<number>',\n          diffToMin: '<number>',\n          group: '<string>',\n          industry: '<string>',\n          latest: '<number>',\n          latestDate: '<string>',\n          low: '<boolean>',\n          max: '<number>',\n          maxDate: '<string>',\n          median: '<number>',\n          min: '<number>',\n          minDate: '<string>',\n          name: '<string>',\n          numberOfDates: '<number>',\n          start: '<number>',\n          startDate: '<string>',\n          subsector: '<string>',\n          symbol: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getStockHighlights;\n","import { baseAPI } from '../../urls';\n\nconst getStockPotentials = {\n  id: 'getStockPotentials',\n  name: 'Get Stock Potentials',\n  public: false,\n  method: 'POST',\n  path: '/finance/potentials',\n  url: `${baseAPI}/finance/potentials`,\n  demo: 'finance-potentials',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: [\n      { name: 'from', type: 'number', required: true, description: '' },\n      { name: 'to', type: 'number', required: true, description: '' }\n    ]\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'average', type: 'number', description: '' },\n        { name: 'diff', type: 'number', description: '' },\n        { name: 'diffToMax', type: 'number', description: '' },\n        { name: 'diffToMin', type: 'number', description: '' },\n        { name: 'group', type: 'string', description: '' },\n        { name: 'industry', type: 'string', description: '' },\n        { name: 'latest', type: 'number', description: '' },\n        { name: 'latestDate', type: 'string', description: '' },\n        { name: 'low', type: 'boolean', description: '' },\n        { name: 'max', type: 'number', description: '' },\n        { name: 'maxDate', type: 'string', description: '' },\n        { name: 'median', type: 'number', description: '' },\n        { name: 'min', type: 'number', description: '' },\n        { name: 'minDate', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'numberOfDates', type: 'number', description: '' },\n        { name: 'start', type: 'number', description: '' },\n        { name: 'startDate', type: 'string', description: '' },\n        { name: 'subsector', type: 'string', description: '' },\n        { name: 'symbol', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          average: '<number>',\n          diff: '<number>',\n          diffToMax: '<number>',\n          diffToMin: '<number>',\n          group: '<string>',\n          industry: '<string>',\n          latest: '<number>',\n          latestDate: '<string>',\n          low: '<boolean>',\n          max: '<number>',\n          maxDate: '<string>',\n          median: '<number>',\n          min: '<number>',\n          minDate: '<string>',\n          name: '<string>',\n          numberOfDates: '<number>',\n          start: '<number>',\n          startDate: '<string>',\n          subsector: '<string>',\n          symbol: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getStockPotentials;\n","import { baseAPI } from '../../urls';\n\nconst getStockHistory = {\n  id: 'getStockHistory',\n  name: 'Get Stock History',\n  public: true,\n  method: 'GET',\n  path: '/finance/history',\n  url: `${baseAPI}/finance/history`,\n  demo: 'finance-history',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [\n      { name: 'symbol', type: 'string', required: true, description: '' },\n      { name: 'from', type: 'number', required: true, description: '' },\n      { name: 'to', type: 'number', required: true, description: '' }\n    ],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'symbol', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'group', type: 'string', description: '' },\n        { name: 'industry', type: 'string', description: '' },\n        { name: 'subsector', type: 'string', description: '' },\n        { name: 'history', type: 'Array<Date>', description: '' }\n      ],\n      example: {\n        symbol: '<string>',\n        name: '<string>',\n        group: '<string>',\n        industry: '<string>',\n        subsector: '<string>',\n        history: '<Array<any>>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getStockHistory;\n","import { IFinanceEndpoints } from '../../interfaces';\n\nimport calculateProfit from './calculate-profit';\nimport getStockCompanies from './get-stock-companies';\nimport getStockHighlights from './get-stock-highlights';\nimport getStockPotentials from './get-stock-potentials';\nimport getStockHistory from './get-stock-history';\n\nconst finance: IFinanceEndpoints = {\n  getStockCompanies,\n  getStockHistory,\n  getStockHighlights,\n  getStockPotentials,\n  calculateProfit\n};\n\nexport default finance;\n","import { baseAPI } from '../../urls';\n\nconst getGeneralSecretaries = {\n  id: 'getGeneralSecretaries',\n  name: 'Get General Secretaries',\n  public: true,\n  method: 'GET',\n  path: '/government/general-secretaries',\n  url: `${baseAPI}/government/general-secretaries`,\n  demo: 'government-general-secretaries',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'title', type: 'string', description: '' },\n        { name: 'title_en', type: 'string', description: '' },\n        { name: 'title_short', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'gender', type: 'string', description: '' },\n        { name: 'gender_en', type: 'string', description: '' },\n        { name: 'start_date', type: 'string', description: '' },\n        { name: 'end_date', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          title: '<string>',\n          title_en: '<string>',\n          title_short: '<string>',\n          name: '<string>',\n          gender: '<string>',\n          gender_en: '<string>',\n          start_date: '<string>',\n          end_date: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getGeneralSecretaries;\n","import { baseAPI } from '../../urls';\n\nconst getMinisters = {\n  id: 'getMinisters',\n  name: 'Get Ministers',\n  public: true,\n  method: 'GET',\n  path: '/government/ministers',\n  url: `${baseAPI}/government/ministers`,\n  demo: 'government-ministers',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'title', type: 'string', description: '' },\n        { name: 'title_en', type: 'number', description: '' },\n        { name: 'title_short', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'gender', type: 'string', description: '' },\n        { name: 'gender_en', type: 'string', description: '' },\n        { name: 'start_date', type: 'string', description: '' },\n        { name: 'end_date', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          title: '<string>',\n          title_en: '<string>',\n          title_short: '<string>',\n          name: '<string>',\n          gender: '<string>',\n          gender_en: '<string>',\n          start_date: '<string>',\n          end_date: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getMinisters;\n","import { baseAPI } from '../../urls';\n\nconst getMinistries = {\n  id: 'getMinistries',\n  name: 'Get Ministries',\n  public: true,\n  method: 'GET',\n  path: '/government/ministries',\n  url: `${baseAPI}/government/ministries`,\n  demo: 'government-ministries',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'short', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'name_en', type: 'string', description: '' },\n        { name: 'level', type: 'string', description: '' },\n        { name: 'level_en', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          short: '<string>',\n          name: '<string>',\n          name_en: '<string>',\n          level: '<string>',\n          level_en: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getMinistries;\n","import { baseAPI } from '../../urls';\n\nconst getNationalAssemblyChairs = {\n  id: 'getNationalAssemblyChairs',\n  name: 'Get National Assembly Chairs',\n  public: true,\n  method: 'GET',\n  path: '/government/national-assembly/chairs',\n  url: `${baseAPI}/government/national-assembly/chairs`,\n  demo: 'government-national-assembly-chairs',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'title', type: 'string', description: '' },\n        { name: 'title_en', type: 'number', description: '' },\n        { name: 'title_short', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'gender', type: 'string', description: '' },\n        { name: 'gender_en', type: 'string', description: '' },\n        { name: 'start_date', type: 'string', description: '' },\n        { name: 'end_date', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          title: '<string>',\n          title_en: '<string>',\n          title_short: '<string>',\n          name: '<string>',\n          gender: '<string>',\n          gender_en: '<string>',\n          start_date: '<string>',\n          end_date: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getNationalAssemblyChairs;\n","import { baseAPI } from '../../urls';\n\nconst getNationalAssemblyMembers = {\n  id: 'getNationalAssemblyMembers',\n  name: 'Get National Assembly Members',\n  public: true,\n  method: 'GET',\n  path: '/government/national-assembly/members',\n  url: `${baseAPI}/government/national-assembly/members`,\n  demo: 'government-national-assembly-members',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'no', type: 'number', required: true, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'no', type: 'number', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'date_of_birth', type: 'string', description: '' },\n        { name: 'city_of_birth', type: 'string', description: '' },\n        { name: 'gender', type: 'string', description: '' },\n        { name: 'degree', type: 'string', description: '' },\n        { name: 'province', type: 'string', description: '' },\n        { name: 'district', type: 'string', description: '' },\n        { name: 'percentage', type: 'number', description: '' }\n      ],\n      example: [\n        {\n          no: '<number>',\n          name: '<string>',\n          date_of_birth: '<string>',\n          city_of_birth: '<string>',\n          gender: '<string>',\n          degree: '<string>',\n          province: '<string>',\n          district: '<string>',\n          percentage: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getNationalAssemblyMembers;\n","import { baseAPI } from '../../urls';\n\nconst getPresidents = {\n  id: 'getPresidents',\n  name: 'Get Presidents',\n  public: true,\n  method: 'GET',\n  path: '/government/presidents',\n  url: `${baseAPI}/government/presidents`,\n  demo: 'government-presidents',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'title', type: 'string', description: '' },\n        { name: 'title_en', type: 'number', description: '' },\n        { name: 'title_short', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'gender', type: 'string', description: '' },\n        { name: 'gender_en', type: 'string', description: '' },\n        { name: 'start_date', type: 'string', description: '' },\n        { name: 'end_date', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          title: '<string>',\n          title_en: '<string>',\n          title_short: '<string>',\n          name: '<string>',\n          gender: '<string>',\n          gender_en: '<string>',\n          start_date: '<string>',\n          end_date: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getPresidents;\n","import { baseAPI } from '../../urls';\n\nconst getPrimeMinisters = {\n  id: 'getPrimeMinisters',\n  name: 'Get Prime Ministers',\n  public: true,\n  method: 'GET',\n  path: '/government/prime-ministers',\n  url: `${baseAPI}/government/prime-ministers`,\n  demo: 'government-prime-ministers',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'title', type: 'string', description: '' },\n        { name: 'title_en', type: 'number', description: '' },\n        { name: 'title_short', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'gender', type: 'string', description: '' },\n        { name: 'gender_en', type: 'string', description: '' },\n        { name: 'start_date', type: 'string', description: '' },\n        { name: 'end_date', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          title: '<string>',\n          title_en: '<string>',\n          title_short: '<string>',\n          name: '<string>',\n          gender: '<string>',\n          gender_en: '<string>',\n          start_date: '<string>',\n          end_date: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getPrimeMinisters;\n","import { IGovernmentEndpoints } from '../../interfaces';\n\nimport getGeneralSecretaries from './get-general-secretaries';\nimport getMinisters from './get-ministers';\nimport getMinistries from './get-ministries';\nimport getNationalAssemblyChairs from './get-national-assembly-chairs';\nimport getNationalAssemblyMembers from './get-national-assembly-members';\nimport getPresidents from './get-presidents';\nimport getPrimeMinisters from './get-prime-ministers';\n\nconst government: IGovernmentEndpoints = {\n  getGeneralSecretaries,\n  getPresidents,\n  getPrimeMinisters,\n  getNationalAssemblyChairs,\n  getNationalAssemblyMembers,\n  getMinistries,\n  getMinisters\n};\n\nexport default government;\n","import { baseAPI } from '../../urls';\n\nconst getDynasties = {\n  id: 'getDynasties',\n  name: 'Get Dynasties',\n  public: true,\n  method: 'GET',\n  path: '/history/dynasties',\n  url: `${baseAPI}/history/dynasties`,\n  demo: 'history-dynasties',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'temple_name', type: 'string', description: '' },\n        { name: 'birth_name', type: 'string', description: '' },\n        { name: 'birth', type: 'number', description: '' },\n        { name: 'death', type: 'number', description: '' },\n        { name: 'start_year', type: 'number', description: '' },\n        { name: 'end_year', type: 'number', description: '' },\n        { name: 'dynasty', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          temple_name: '<string>',\n          birth_name: '<string>',\n          birth: '<number>',\n          death: '<number>',\n          start_year: '<number>',\n          end_year: '<number>',\n          dynasty: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getDynasties;\n","import { IHistoryEndpoints } from '../../interfaces';\nimport getDynasties from './get-dynasties';\n\nconst history: IHistoryEndpoints = {\n  getDynasties\n};\n\nexport default history;\n","import { baseAPI } from '../../urls';\n\nconst getLicensePlates = {\n  id: 'getLicensePlates',\n  name: 'Get License Plates',\n  public: true,\n  method: 'GET',\n  path: '/license-plates',\n  url: `${baseAPI}/license-plates`,\n  demo: 'license-plates-list',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'license', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'license', type: 'string', description: '' },\n        { name: 'definition', type: 'string', description: '' },\n        { name: 'type', type: 'string', description: '' }\n      ],\n      example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getLicensePlates;\n","import { ILicensePlatesEndpoints } from '../../interfaces';\n\nimport getLicensePlates from './get-license-plates';\n\nconst licensePlates: ILicensePlatesEndpoints = { getLicensePlates };\n\nexport default licensePlates;\n","import { baseAPI } from '../../urls';\n\nconst getArtists = {\n  id: 'getArtists',\n  name: 'Get Artists',\n  public: true,\n  method: 'GET',\n  path: '/music/artists',\n  url: `${baseAPI}/music/artists`,\n  demo: 'music-artists',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [{ name: 'name', type: 'string', description: '' }],\n      example: [\n        {\n          name: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getArtists;\n","import { IMusicEndpoints } from '../../interfaces';\n\nimport getArtists from './get-artists';\n\nconst music: IMusicEndpoints = {\n  getArtists\n};\n\nexport default music;\n","import { baseAPI } from '../../urls';\n\nconst getTrends = {\n  id: 'getTrends',\n  name: 'Get (Google) Trends',\n  public: true,\n  method: 'GET',\n  path: '/news/trends',\n  url: `${baseAPI}/news/trends`,\n  demo: 'news-feed',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'year', type: 'number', description: '' },\n        { name: 'month', type: 'number', description: '' },\n        { name: 'date', type: 'number', description: '' },\n        { name: 'hour', type: 'number', description: '' },\n        { name: 'trends', type: 'Array<string>', description: '' }\n      ],\n      example: {\n        year: '<number>',\n        month: '<number>',\n        date: '<number>',\n        hour: '<number>',\n        categories: '<Array<string>>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getTrends;\n","import { baseAPI } from '../../urls';\n\nconst getSources = {\n  id: 'getSources',\n  name: 'Get Sources',\n  public: true,\n  method: 'GET',\n  path: '/news/sources',\n  url: `${baseAPI}/news/sources`,\n  demo: 'news-feed',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'total', type: 'number', description: '' },\n        { name: 'sources', type: 'Array<string>', description: '' }\n      ],\n      example: {\n        total: '<number>',\n        sources: '<Array<string>>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getSources;\n","import { baseAPI } from '../../urls';\n\nconst getCategories = {\n  id: 'getCategories',\n  name: 'Get Categories',\n  public: true,\n  method: 'GET',\n  path: '/news/categories',\n  url: `${baseAPI}/news/categories`,\n  demo: 'news-feed',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'source', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'total', type: 'number', description: '' },\n        { name: 'categories', type: 'Array<string>', description: '' }\n      ],\n      example: {\n        total: '<number>',\n        categories: '<Array<string>>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getCategories;\n","import { baseAPI } from '../../urls';\n\nconst getArticles = {\n  id: 'getArticles',\n  name: 'Get Articles',\n  public: true,\n  method: 'GET',\n  path: '/news/articles',\n  url: `${baseAPI}/news/articles`,\n  demo: 'news-feed',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [\n      { name: 'source', type: 'string', required: false, description: '' },\n      { name: 'category', type: 'string', required: false, description: '' }\n    ],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'title', type: 'string', description: '' },\n        { name: 'url', type: 'string', description: '' },\n        { name: 'source', type: 'string', description: '' },\n        { name: 'description', type: 'string', description: '' },\n        { name: 'publishedDate', type: 'string', description: '' },\n        { name: 'sourceURL', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          title: '<string>',\n          url: '<string>',\n          source: '<string>',\n          sourceURL: '<string>',\n          description: '<string>',\n          publishedDate: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getArticles;\n","import { INewsEndpoints } from '../../interfaces';\n\nimport getTrends from './get-trends';\nimport getSources from './get-sources';\nimport getCategories from './get-categories';\nimport getArticles from './get-articles';\n\nconst news: INewsEndpoints = { getTrends, getSources, getCategories, getArticles };\n\nexport default news;\n","import { baseAPI } from '../../urls';\n\nconst getGHNDistricts = {\n  id: 'getGHNDistricts',\n  name: 'GHN - Get Districts',\n  public: true,\n  method: 'GET',\n  path: '/open-apis/giaohangnhanh/districts',\n  url: `${baseAPI}/open-apis/giaohangnhanh/districts`,\n  demo: 'open-apis-ghn-districts',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'province_id', type: 'number', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'district_id', type: 'number', description: '' },\n        { name: 'province_id', type: 'number', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'code', type: 'string', description: '' },\n        { name: 'type', type: 'number', description: '' },\n        { name: 'support_type', type: 'number', description: '' }\n      ],\n      example: [\n        {\n          district_id: '<string>',\n          province_id: '<string>',\n          name: '<string>',\n          code: '<string>',\n          type: '<number>',\n          support_type: '<number>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getGHNDistricts;\n","import { baseAPI } from '../../urls';\n\nconst getGHNProvinces = {\n  id: 'getGHNProvinces',\n  name: 'GHN - Get Provinces',\n  public: true,\n  method: 'GET',\n  path: '/open-apis/giaohangnhanh/provinces',\n  url: `${baseAPI}/open-apis/giaohangnhanh/provinces`,\n  demo: 'open-apis-ghn-provinces',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'province_id', type: 'number', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'code', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          province_id: '<string>',\n          name: '<string>',\n          code: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getGHNProvinces;\n","import { baseAPI } from '../../urls';\n\nconst getGHNWards = {\n  id: 'getGHNWards',\n  name: 'GHN - Get Wards',\n  public: true,\n  method: 'GET',\n  path: '/open-apis/giaohangnhanh/wards',\n  url: `${baseAPI}/open-apis/giaohangnhanh/wards`,\n  demo: 'open-apis-ghn-wards',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'district_id', type: 'number', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'district_id', type: 'number', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'code', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          district_id: '<string>',\n          name: '<string>',\n          code: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getGHNWards;\n","import { baseAPI } from '../../urls';\n\nconst getOpenAPIs = {\n  id: 'getOpenAPIs',\n  name: 'Get Open APIs',\n  public: true,\n  method: 'GET',\n  path: '/open-apis',\n  url: `${baseAPI}/open-apis`,\n  demo: 'open-apis-list',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'name', type: 'string', description: '' },\n        { name: 'type', type: 'string', description: '' },\n        { name: 'type_id', type: 'string', description: '' },\n        { name: 'url', type: 'string', description: '' },\n        { name: 'npm', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          name: '<string>',\n          type: '<string>',\n          type_id: '<string>',\n          url: '<string>',\n          npm: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getOpenAPIs;\n","import { baseAPI } from '../../urls';\n\nconst getVietceteraArticles = {\n  id: 'getVietceteraArticles',\n  name: 'Get Vietcetera Articles',\n  public: true,\n  method: 'GET',\n  path: '/open-apis/vietcetera',\n  url: `${baseAPI}/open-apis/vietcetera`,\n  demo: 'open-apis-vietcetera',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'type', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'title', type: 'string', description: '' },\n        { name: 'url', type: 'string', description: '' },\n        { name: 'publishDate', type: 'string', description: '' },\n        { name: 'description', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          title: '<string>',\n          url: '<string>',\n          publishDate: '<string>',\n          description: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getVietceteraArticles;\n","import { IOpenAPIsEndpoints } from '../../interfaces';\n\nimport getGHNDistricts from './get-ghn-districts';\nimport getGHNProvinces from './get-ghn-provinces';\nimport getGHNWards from './get-ghn-wards';\nimport getOpenAPIs from './get-open-apis';\nimport getVietceteraArticles from './get-vietcetera-articles';\n\nconst openAPIs: IOpenAPIsEndpoints = {\n  getGHNDistricts,\n  getGHNProvinces,\n  getGHNWards,\n  getOpenAPIs,\n  getVietceteraArticles\n};\n\nexport default openAPIs;\n","import { baseAPI } from '../../urls';\nimport { IEndpoint } from '../../interfaces';\n\nconst getPrefixes: IEndpoint = {\n  id: 'getPrefixes',\n  name: 'Get Prefixes',\n  public: true,\n  method: 'GET',\n  path: '/information/phones/prefixes',\n  url: `${baseAPI}/information/phones/prefixes`,\n  demo: 'phones-prefixes',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'id', type: 'string', description: '' },\n        { name: 'prefix', type: 'string', description: '' },\n        { name: 'provider', type: 'string', description: '' },\n        { name: 'provider_id', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          id: '<string>',\n          prefix: '<string>',\n          provider: '<string>',\n          provider_id: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getPrefixes;\n","import { baseAPI } from '../../urls';\nimport { IEndpoint } from '../../interfaces';\n\nconst getProviders: IEndpoint = {\n  id: 'getProviders',\n  name: 'Get Providers',\n  public: true,\n  method: 'GET',\n  path: '/information/phones/providers',\n  url: `${baseAPI}/information/phones/providers`,\n  demo: 'phones-providers',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'provider', type: 'string', description: '' },\n        { name: 'prefixes', type: 'Array<string>', description: '' }\n      ],\n      example: [\n        {\n          provider: '<string>',\n          prefixes: '<Array<string>>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getProviders;\n","import { IPhonesEndpoints } from '../../interfaces';\n\nimport getPrefixes from './get-prefixes';\nimport getProviders from './get-providers';\n\nconst phones: IPhonesEndpoints = { getPrefixes, getProviders };\n\nexport default phones;\n","import { baseAPI } from '../../urls';\n\nconst getSportsClubs = {\n  id: 'getSportsClubs',\n  name: 'Get Sports Clubs',\n  public: true,\n  method: 'GET',\n  path: '/sports/clubs',\n  url: `${baseAPI}/sports/clubs`,\n  demo: 'sports-clubs',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'sport', type: 'string', description: '' },\n        { name: 'sport_en', type: 'string', description: '' },\n        { name: 'competition', type: 'string', description: '' },\n        { name: 'city', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          sport: '<string>',\n          sport_en: '<string>',\n          competition: '<string>',\n          city: '<string>',\n          name: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getSportsClubs;\n","import { baseAPI } from '../../urls';\n\nconst getVLeague = {\n  id: 'getVLeague',\n  name: 'Get VLeague',\n  public: true,\n  method: 'GET',\n  path: '/sports/vleague',\n  url: `${baseAPI}/sports/vleague`,\n  demo: 'sports-vleague',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'matches', type: 'Array<any>', description: '' },\n        { name: 'leagueTable', type: 'Array<any>', description: '' }\n      ],\n      example: {\n        matches: '<Array<any>>',\n        leagueTable: '<Array<any>>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getVLeague;\n","import { ISportsEndpoints } from '../../interfaces';\n\nimport getSportsClubs from './get-sports-clubs';\nimport getVLeague from './get-vleague';\n\nconst sports: ISportsEndpoints = {\n  getSportsClubs,\n  getVLeague\n};\n\nexport default sports;\n","import { baseAPI } from '../../urls';\n\nconst getCongressMembers = {\n  id: 'getCongressMembers',\n  name: 'Get Congress Members',\n  public: false,\n  method: 'GET',\n  path: '/usa/congress',\n  url: `${baseAPI}/usa/congress`,\n  demo: 'usa-congress',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [\n      { name: 'chamber', type: 'string', required: false, description: '' },\n      { name: 'congress', type: 'number', required: false, description: '' }\n    ],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'id', type: 'string', description: '' },\n        { name: 'title', type: 'string', description: '' },\n        { name: 'first_name', type: 'string', description: '' },\n        { name: 'last_name', type: 'string', description: '' },\n        { name: 'middle_name', type: 'string', description: '' },\n        { name: 'state', type: 'string', description: '' },\n        { name: 'district', type: 'string', description: '' },\n        { name: 'seniority', type: 'string', description: '' },\n        { name: 'gender', type: 'string', description: '' },\n        { name: 'party', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          id: '<string>',\n          title: '<string>',\n          first_name: '<string>',\n          last_name: '<string>',\n          middle_name: '<string>',\n          state: '<string>',\n          district: '<string>',\n          seniority: '<string>',\n          gender: '<string>',\n          party: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getCongressMembers;\n","import { IUSAEndpoints } from '../../interfaces';\n\nimport getCongress from './get-congress';\n\nconst usa: IUSAEndpoints = {\n  getCongress\n};\n\nexport default usa;\n","import { baseAPI } from '../../urls';\n\nconst getVisas = {\n  id: 'getVisas',\n  name: 'Get Visas',\n  public: true,\n  method: 'GET',\n  path: '/visas',\n  url: `${baseAPI}/visas`,\n  demo: 'visas-list',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'country', type: 'string', description: '' },\n        { name: 'requirement', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          country: '<string>',\n          requirement: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getVisas;\n","import { IVisasEndpoints } from '../../interfaces';\n\nimport getVisas from './get-visas';\n\nconst visas: IVisasEndpoints = { getVisas };\n\nexport default visas;\n","import { baseAPI } from '../../urls';\n\nconst getAirVisualCities = {\n  id: 'getAirVisualCities',\n  name: 'Get Air Visual Cities',\n  public: true,\n  method: 'GET',\n  path: '/weather/air-visual/cities',\n  url: `${baseAPI}/weather/air-visual/cities`,\n  demo: 'weather-air-visual',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'city', type: 'string', description: '' },\n        { name: 'state', type: 'string', description: '' },\n        { name: 'country', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          city: '<string>',\n          state: '<string>',\n          country: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getAirVisualCities;\n","import { baseAPI } from '../../urls';\n\nconst getAirVisual = {\n  id: 'getAirVisual',\n  name: 'Get Air Visual',\n  public: true,\n  method: 'GET',\n  path: '/weather/air-visual',\n  url: `${baseAPI}/weather/air-visual`,\n  demo: 'weather-air-visual',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'city', type: 'string', required: true, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'city', type: 'string', description: '' },\n        { name: 'state', type: 'string', description: '' },\n        { name: 'country', type: 'string', description: '' },\n        { name: 'location', type: 'object', description: '' },\n        { name: 'current', type: 'object', description: '' }\n      ],\n      example: [\n        {\n          city: '<string>',\n          state: '<string>',\n          country: '<string>',\n          location: '<object>',\n          current: '<object>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getAirVisual;\n","import { baseAPI } from '../../urls';\n\nconst getCurrentWeather = {\n  id: 'getCurrentWeather',\n  name: 'Get Current Weather',\n  public: true,\n  method: 'GET',\n  path: '/weather',\n  url: `${baseAPI}/weather`,\n  demo: 'weather-current',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'city', type: 'string', required: true, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'coord', type: 'object', description: '' },\n        { name: 'weather', type: 'Array<object>', description: '' },\n        { name: 'base', type: 'string', description: '' },\n        { name: 'main', type: 'object', description: '' },\n        { name: 'visibility', type: 'number', description: '' },\n        { name: 'wind', type: 'object', description: '' },\n        { name: 'clouds', type: 'object', description: '' },\n        { name: 'dt', type: 'number', description: '' },\n        { name: 'sys', type: 'number', description: '' },\n        { name: 'timezone', type: 'number', description: '' },\n        { name: 'id', type: 'number', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'cod', type: 'number', description: '' }\n      ],\n      example: [\n        {\n          coord: '<object>',\n          weather: '<Array<object>>',\n          base: '<string>',\n          main: '<object>',\n          visibility: '<number>',\n          wind: '<object>',\n          clouds: '<object>',\n          dt: '<number>',\n          sys: '<number>',\n          timezone: '<number>',\n          id: '<number>',\n          name: '<string>',\n          cod: '<number>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getCurrentWeather;\n","import { IWeatherEndpoints } from '../../interfaces';\n\nimport getAirVisualCities from './get-air-visual-cities';\nimport getAirVisual from './get-air-visual';\nimport getCurrentWeather from './get-current-weather';\n\nconst weather: IWeatherEndpoints = {\n  getCurrentWeather,\n  getAirVisual,\n  getAirVisualCities\n};\n\nexport default weather;\n","import { baseAPI } from '../../urls';\n\nconst getTrending = {\n  id: 'getTrending',\n  name: 'Get Trending',\n  public: true,\n  method: 'GET',\n  path: '/youtube/trending',\n  url: `${baseAPI}/youtube/trending`,\n  demo: 'youtube-trending',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'categoryId', type: 'number', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'id', type: 'string', description: '' },\n        { name: 'channelId', type: 'string', description: '' },\n        { name: 'title', type: 'string', description: '' },\n        { name: 'publishedAt', type: 'string', description: '' },\n        { name: 'description', type: 'string', description: '' },\n        { name: 'channelTitle', type: 'string', description: '' },\n        { name: 'tags', type: 'Array<string>', description: '' },\n        { name: 'categoryId', type: 'string', description: '' },\n        { name: 'url', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          id: '<string>',\n          channelId: '<string>',\n          title: '<string>',\n          publishedAt: '<string>',\n          description: '<string>',\n          channelTitle: '<string>',\n          tags: '<Array<string>>',\n          categoryId: '<string>',\n          url: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getTrending;\n","import { baseAPI } from '../../urls';\n\nconst getVideoCategories = {\n  id: 'getVideoCategories',\n  name: 'Get Video Categories',\n  public: true,\n  method: 'GET',\n  path: '/youtube/video-categories',\n  url: `${baseAPI}/youtube/video-categories`,\n  demo: 'youtube-trending',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'id', type: 'string', description: '' },\n        { name: 'title', type: 'string', description: '' },\n        { name: 'assignable', type: 'boolean', description: '' },\n        { name: 'channelId', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          id: '<string>',\n          title: '<string>',\n          assignable: '<string>',\n          channelId: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getVideoCategories;\n","import { IYouTubeEndpoints } from '../../interfaces';\n\nimport getTrending from './get-trending';\nimport getVideoCategories from './get-video-categories';\n\nconst youtube: IYouTubeEndpoints = { getTrending, getVideoCategories };\n\nexport default youtube;\n","import { IEndpoints } from '../interfaces';\n\nimport administrativeDivisions from './administrative-divisions';\nimport banks from './banks';\nimport calendar from './calendar';\nimport ethnicMinorities from './ethnic-minorities';\nimport finance from './finance';\nimport government from './government';\nimport history from './history';\nimport licensePlates from './license-plates';\nimport music from './music';\nimport news from './news';\nimport openAPIs from './open-apis';\nimport phones from './phones';\nimport sports from './sports';\nimport usa from './usa';\nimport visas from './visas';\nimport weather from './weather';\nimport youtube from './youtube';\n\nconst endpoints: IEndpoints = {\n  administrativeDivisions,\n  banks,\n  calendar,\n  ethnicMinorities,\n  finance,\n  government,\n  history,\n  licensePlates,\n  music,\n  news,\n  openAPIs,\n  phones,\n  sports,\n  usa,\n  visas,\n  weather,\n  youtube\n};\n\nexport default endpoints;\n","import { baseAPI, baseGraphQL } from './urls';\nimport { IPeriod, IMonth } from './interfaces';\nimport endpoints from './apis';\n\nexport { baseAPI, baseGraphQL, endpoints };\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'administrativeDivisions'\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'music'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n","import { endpoints } from '../configs';\nimport { IEndpoint } from '../configs/interfaces';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}): string {\n    const keys: Array<string> = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map((key: string) => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString: string = this.buildQueryString(query);\n    const input: string = queryString ? `${url}?${queryString}` : url;\n    const timeout: number = 1000 * 60 * 6;\n    const headers = { 'Content-Type': 'application/json' };\n    const options =\n      method === 'GET'\n        ? { method, timeout, headers }\n        : { method, timeout, headers, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res: any = {}) => {\n          resolve(res);\n        })\n        .catch((error: Error) => {\n          console.error('fetch', error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    const { sources = [] } = await this.fetch(endpoint);\n    return sources;\n  }\n\n  public async getCategories(source: string): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint, { query: { source }, body: {} });\n    return categories;\n  }\n\n  public async getArticles(source: string, category: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number): Promise<number> {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: {}, query: { symbol, from, to } });\n  }\n\n  public async getBanks(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.banks.getBanks;\n    return await this.fetch(endpoint);\n  }\n\n  public async getBanksForexRates(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getForexBanks(): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const { banks = [] } = (await this.fetch(endpoint)) || {};\n    return banks;\n  }\n\n  public async syncForexRates(id: string): Promise<string> {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = 'ERROR' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getPostalCodes(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProvinces(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDistricts(province_id: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getWards(skip: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getWards;\n    return await this.fetch(endpoint, { query: { skip }, body: {} });\n  }\n\n  public async getTotalWards(): Promise<number> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getTotalWards;\n    const { total = 0 } = await this.fetch(endpoint);\n    return total;\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getVLeague(): Promise<any> {\n    const endpoint: IEndpoint = endpoints.sports.getVLeague;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getOpenAPIs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getOpenAPIs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProviders(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.phones.getProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrefixes(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.phones.getPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number): Promise<any> {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number): Promise<any> {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number): Promise<string> {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n\n  public async getGHNProvinces(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNDistricts(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNWards(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getArtists(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.music.getArtists;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDynasties(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.history.getDynasties;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCurrentWeather(city: string): Promise<any> {\n    const endpoint: IEndpoint = endpoints.weather.getCurrentWeather;\n    return await this.fetch(endpoint, { query: { city }, body: {} });\n  }\n\n  public async getAirVisual(city: string): Promise<any> {\n    const endpoint: IEndpoint = endpoints.weather.getAirVisual;\n    return await this.fetch(endpoint, { query: { city }, body: {} });\n  }\n\n  public async getAirVisualCities(): Promise<any> {\n    const endpoint: IEndpoint = endpoints.weather.getAirVisualCities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getYouTubeTrending(categoryId: number = 0): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.youtube.getTrending;\n    return await this.fetch(endpoint, { query: { categoryId }, body: {} });\n  }\n\n  public async getYouTubeVideoCategories(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.youtube.getVideoCategories;\n    return await this.fetch(endpoint);\n  }\n\n  public async getVisas(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.visas.getVisas;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCongress(chamber: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.usa.getCongress;\n    return await this.fetch(endpoint, { query: { chamber }, body: {} });\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n\n  public camelize(str: string = ''): string {\n    return (str.match(/[A-Z]+(?![a-z])|[A-Z]?[a-z]+|\\d+/g) || []).join(' ');\n  }\n}\n","export default class Storage {\n  public set(key: string, value: any): void {\n    if (typeof value === 'string') {\n      localStorage.setItem(key, value);\n    } else {\n      localStorage.setItem(key, value.toString());\n    }\n  }\n\n  public get(key: string): any {\n    return localStorage.getItem(key) || '';\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\nimport Storage from './storage';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\nconst storage: Storage = new Storage();\n\nexport { apis, graphql, helper, storage };\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n  themeTextColor: string;\n}\n\nclass API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '', themeTextColor = '' } = this.props;\n\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className={`${themeTextColor} d-inline m-0 cursor-pointer`}>\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeTextColor };\n};\n\nexport default connect(mapStateToProps)(API);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nclass CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(CURL);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\n\ninterface IRowConfig {\n  header: string;\n  key: string;\n  className?: string;\n  seperator?: string;\n  type?: string;\n}\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<IRowConfig>;\n  emptyRowsText?: string;\n  rowIndexEnabled?: boolean;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themePrimaryBackgroundColor: string;\n  themeBorder: string;\n}\n\ninterface ITableState {\n  sortBy: string;\n  sortDir: number;\n}\n\nclass Table extends Component<ITableProps, ITableState> {\n  constructor(props: ITableProps) {\n    super(props);\n\n    this.state = { sortBy: '', sortDir: 1 };\n\n    this.renderCell = this.renderCell.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async sort(by: string) {\n    const { sortDir = 1, sortBy = '' } = this.state;\n    const { rows = [] } = this.props;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    rows.sort((a, b) => dir * (a[by] > b[by] ? 1 : -1));\n  }\n\n  renderCell(row: any, config: any, index: number) {\n    const { themeTextColor } = this.props;\n    const { key, className = '', type = 'text', seperator = ' - ' } = config;\n    const { url = '' } = row;\n    let value: any = '';\n    if (typeof row[key] === 'boolean') {\n      value = row[key].toString();\n    } else if (typeof row[key] === 'string') {\n      value = (row[key] || '').toString();\n    } else {\n      value = row[key];\n    }\n    let cell: any = '';\n    switch (type) {\n      case 'text':\n        cell = value;\n        break;\n      case 'link':\n        cell = (\n          <a href={url} target=\"_blank\" rel=\"noreferrer\" className={themeTextColor}>\n            <u>{value}</u>\n          </a>\n        );\n        break;\n      case 'npm':\n        cell = (\n          <a\n            href={`https://www.npmjs.com/package/${value}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className={themeTextColor}>\n            <u>npm</u>\n          </a>\n        );\n        break;\n      case 'list':\n        cell = value.join(seperator);\n        break;\n      default:\n        cell = value;\n        break;\n    }\n    return (\n      <td key={index} className={`${className} ${themeTextColor}`}>\n        {cell}\n      </td>\n    );\n  }\n\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data',\n      rowIndexEnabled = false,\n      themeTextColor = '',\n      themeSpinnerVariant = '',\n      themePrimaryBackgroundColor = '',\n      themeBorder = ''\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5 className={`${themeTextColor}`}>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className={`border p-3 rounded-lg ${themeTextColor}`}>\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length > 0 && (\n          <div className={`table-responsive table-container rounded-lg border ${themeBorder}`}>\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className={`${themePrimaryBackgroundColor} text-center text-white`}>\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowIndexEnabled && <th className={`${themeTextColor}`}>#</th>}\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return (\n                        <th key={headerIndex} className={`${themeTextColor}`}>\n                          {header}\n                        </th>\n                      );\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowIndexEnabled && <td className={`${themeTextColor}`}>{rowIndex + 1}</td>}\n                        {rowConfigs.map((config, cellIndex) => {\n                          return this.renderCell(row, config, cellIndex);\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  return { themeTextColor, themeSpinnerVariant, themePrimaryBackgroundColor, themeBorder };\n};\n\nexport default connect(mapStateToProps)(Table);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n  themeTextColor: string;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\nclass Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { themeTextColor = '' } = this.props;\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p className={`${themeTextColor}`}>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const { themeTextColor = '' } = this.props;\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5 className={`${themeTextColor}`}>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-3\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p className={`${themeTextColor}`}>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    const { themeTextColor = '' } = this.props;\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className={`${themeTextColor} mb-3`}>{name}</h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo} className={themeTextColor}>\n                        <u>Demo</u>\n                      </Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group, themeTextColor } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className={`${themeTextColor} mb-3`}>{header}</h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeTextColor };\n};\n\nexport default connect(mapStateToProps)(Doc);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\ninterface IFooterProps {\n  themeBorderTop: string;\n  themePrimaryBackgroundColor: string;\n}\n\nclass Footer extends Component<IFooterProps> {\n  render() {\n    const { themeBorderTop, themePrimaryBackgroundColor } = this.props;\n\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <footer\n        id=\"Footer\"\n        className={`${themePrimaryBackgroundColor} ${themeBorderTop} pt-3 pb-3 text-white text-center`}>\n        &copy;{' '}\n        <a\n          href=\"https://www.linkedin.com/in/hieudoanm/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"text-white\">\n          HIEU DOAN\n        </a>{' '}\n        {year}\n      </footer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBorderTop: string = _.get(state, 'theme.borderTop', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return { themeBorderTop, themePrimaryBackgroundColor };\n};\n\nexport default connect(mapStateToProps)(Footer);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IListProps {\n  themeInput: string;\n}\n\ninterface IListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<IListProps, IListState> {\n  constructor(props: IListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true, query = '' } = this.state;\n    const { themeInput } = this.props;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        <Form className=\"mb-3\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Query\"\n            className={`${themeInput}`}\n            value={query}\n            onChange={this.filter}></Form.Control>\n        </Form>\n        <Table\n          loading={loading}\n          caption={'Ethnic Minorities'}\n          rows={filterEthnicMinorities}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IGeneralSecretariesProps {}\n\ninterface IGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nclass GeneralSecretaries extends Component<IGeneralSecretariesProps, IGeneralSecretariesState> {\n  constructor(props: IGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GeneralSecretaries\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'General Secretaries'}\n          rows={generalSecretaries}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(GeneralSecretaries);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IMinistersProps {\n  themeInput: string;\n}\n\ninterface IMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nclass Ministers extends Component<IMinistersProps, IMinistersState> {\n  constructor(props: IMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  renderForm() {\n    const { ministries = [], ministry = '' } = this.state;\n    const { themeInput } = this.props;\n    return (\n      ministries.length > 0 && (\n        <Form>\n          <Form.Group>\n            <Form.Control\n              as=\"select\"\n              className={themeInput}\n              value={ministry}\n              onChange={this.updateMinistry}>\n              {ministries.map((ministry, index) => {\n                const { short, name } = ministry;\n                return (\n                  <option key={index} value={short}>\n                    {name}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      )\n    );\n  }\n\n  render() {\n    const { ministers = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"Ministers\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        {this.renderForm()}\n        <Table\n          loading={loading}\n          caption={'Ministers'}\n          rows={ministers}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(Ministers);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IMinistriesProps {}\n\ninterface IMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nclass Ministries extends Component<IMinistriesProps, IMinistriesState> {\n  constructor(props: IMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"Ministries\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Ministries'}\n          rows={ministries}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Ministries);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IChairsProps {}\n\ninterface IChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nclass Chairs extends Component<IChairsProps, IChairsState> {\n  constructor(props: IChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"Chairs\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'National Assembly Chairs'}\n          rows={chairs}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Chairs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IMembersProps {}\n\ninterface IMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\n\nclass Members extends Component<IMembersProps, IMembersState> {\n  constructor(props: IMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"Members\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table loading={loading} caption={'Members'} rows={members} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Members);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IPresidentsProps {}\n\ninterface IPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nclass Presidents extends Component<IPresidentsProps, IPresidentsState> {\n  constructor(props: IPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"Presidents\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Presidents'}\n          rows={presidents}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Presidents);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IPrimeMinistersProps {}\n\ninterface IPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nclass PrimeMinisters extends Component<IPrimeMinistersProps, IPrimeMinistersState> {\n  constructor(props: IPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"PrimeMinisters\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Prime Ministers'}\n          rows={primeMinisters}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(PrimeMinisters);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IDynastiesProps {}\n\ninterface IDynastiesState {\n  dynasties: Array<any>;\n  loading: boolean;\n}\n\nclass Dynasties extends Component<IDynastiesProps, IDynastiesState> {\n  constructor(props: IDynastiesProps) {\n    super(props);\n\n    this.state = { dynasties: [], loading: true };\n\n    this.getDynasties = this.getDynasties.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getDynasties();\n  }\n\n  async getDynasties() {\n    this.setState({ loading: true });\n    const dynasties: Array<any> = await apis.getDynasties();\n    this.setState({ dynasties, loading: false });\n  }\n\n  render() {\n    const { dynasties = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Temple Name', key: 'temple_name' },\n      { header: 'Birth Name', key: 'birth_name' },\n      { header: 'Start', key: 'start_year' },\n      { header: 'End', key: 'end_year' },\n      { header: 'Dynasty', key: 'dynasty' }\n    ];\n\n    return (\n      <div id=\"Dynasties\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Dynasties'}\n          rows={dynasties}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Dynasties);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, ListGroup } from 'react-bootstrap';\n\ninterface IHomeProps {\n  themeInput: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeListItemBorderBottom: string;\n  themeSecondaryBackgroundColor: string;\n}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n}\n\ninterface IAPI {\n  name: string;\n  docs: string;\n}\n\nclass Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis: Array<IAPI> = [\n      { name: 'administrative-divisions', docs: '/administrative-divisions' },\n      { name: 'banks', docs: '/banks' },\n      { name: 'calendar', docs: '/calendar' },\n      { name: 'ethnic-minorities', docs: '/ethnic-minorities' },\n      { name: 'finance', docs: '/finance' },\n      { name: 'government', docs: '/government' },\n      { name: 'license-plates', docs: '/license-plates' },\n      { name: 'music', docs: '/music' },\n      { name: 'news', docs: '/news' },\n      { name: 'open-apis', docs: '/open-apis' },\n      { name: 'phones', docs: '/phones' },\n      { name: 'sports', docs: '/sports' },\n      { name: 'vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis\n    };\n\n    this.filter = this.filter.bind(this);\n    this.renderList = this.renderList.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [] } = this.state;\n    const filterAPIs = this.filter(apis, query);\n\n    await this.setState({ filterAPIs });\n  }\n\n  filter(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderList() {\n    const { filterAPIs = [] } = this.state;\n    const {\n      themeTextColor = '',\n      themeBorder = '',\n      themeListItemBorderBottom = '',\n      themeSecondaryBackgroundColor = ''\n    } = this.props;\n\n    return (\n      <ListGroup className={`${themeBorder} list-group-flush rounded-lg`}>\n        {filterAPIs.length !== 0 &&\n          filterAPIs.map((_package, index) => {\n            const { name = '', docs = '' } = _package;\n            return (\n              <ListGroup.Item\n                key={index}\n                className={`${themeSecondaryBackgroundColor} ${themeTextColor} ${themeListItemBorderBottom} d-flex justify-content-between align-items-center`}>\n                {name}\n                <span>\n                  {docs && (\n                    <Link className={`${themeTextColor} ml-1`} to={docs}>\n                      <u>Docs</u>\n                    </Link>\n                  )}\n                </span>\n              </ListGroup.Item>\n            );\n          })}\n      </ListGroup>\n    );\n  }\n\n  render() {\n    const { query } = this.state;\n    const { themeTextColor, themeInput } = this.props;\n    return (\n      <div id=\"Home\" className=\"container-fluid\">\n        <Form className=\"mb-3\">\n          <Form.Label className={`${themeTextColor}`} htmlFor=\"query\">\n            Query\n          </Form.Label>\n          <Form.Control\n            id=\"query\"\n            type=\"text\"\n            placeholder=\"Query\"\n            className={`${themeInput}`}\n            value={query}\n            onChange={this.updateQuery}></Form.Control>\n        </Form>\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeListItemBorderBottom: string = _.get(state, 'theme.listItemBorderBottom', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return {\n    themeTextColor,\n    themeBorder,\n    themeListItemBorderBottom,\n    themeSecondaryBackgroundColor,\n    themeInput\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface ListProps {\n  themeInput: string;\n}\n\ninterface ListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<ListProps, ListState> {\n  constructor(props: ListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      let { license = '' } = licensePlate;\n      license = license.toString();\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    await this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  renderForm() {\n    const { query = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form className=\"mb-3\">\n        <Form.Control\n          type=\"text\"\n          placeholder=\"License\"\n          value={query}\n          className={`${themeInput}`}\n          onChange={this.filter}></Form.Control>\n      </Form>\n    );\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        {this.renderForm()}\n        <Table\n          loading={loading}\n          caption={'License Plates'}\n          rows={filterLicensePlates}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IArtistsProps {}\n\ninterface IArtistsState {\n  artists: Array<any>;\n  loading: boolean;\n}\n\nclass Artists extends Component<IArtistsProps, IArtistsState> {\n  constructor(props: IArtistsProps) {\n    super(props);\n\n    this.state = { artists: [], loading: true };\n\n    this.getArtists = this.getArtists.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getArtists();\n  }\n\n  async getArtists() {\n    this.setState({ loading: true });\n    const artists: Array<any> = await apis.getArtists();\n    this.setState({ artists, loading: false });\n  }\n\n  render() {\n    const { artists = [], loading = false } = this.state;\n\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n\n    return (\n      <div id=\"Artists\" className=\"container-fluid\">\n        <Table loading={loading} caption={'Artists'} rows={artists} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Artists);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { NavPills, Table } from '../../../components';\n\ninterface IListProps {\n  themeInput: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themePrimaryBackgroundColor: string;\n}\n\ninterface IListState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<IListProps, IListState> {\n  constructor(props: IListProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getOpenAPIs = this.getOpenAPIs.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getOpenAPIs();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getOpenAPIs() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getOpenAPIs();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  render() {\n    const { query = '', filterTechnologies = [], loading = true } = this.state;\n    const { themeInput = '' } = this.props;\n    const rowConfigs = [\n      { header: 'Name', key: 'name', type: 'link' },\n      { header: 'Type', key: 'type' },\n      { header: 'npm', key: 'npm', type: 'npm' }\n    ];\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <Form className=\"mb-3\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type\"\n            className={`${themeInput}`}\n            value={query}\n            onChange={this.filter}></Form.Control>\n        </Form>\n        <Table\n          loading={loading}\n          caption={'Open APIs'}\n          rows={filterTechnologies}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return {\n    themeInput,\n    themeBorder,\n    themeTextColor,\n    themeSpinnerVariant,\n    themePrimaryBackgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nclass Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Provinces\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table\n          loading={loading}\n          caption={'GHN Provinces'}\n          rows={provinces}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Provinces);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IDistrictsProps {}\n\ninterface IDistrictsState {\n  districts: Array<any>;\n  loading: boolean;\n}\n\nclass Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { districts: [], loading: true };\n\n    this.getGHNDistricts = this.getGHNDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNDistricts();\n  }\n\n  async getGHNDistricts() {\n    this.setState({ loading: true });\n    const districts = await apis.getGHNDistricts();\n    this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' },\n      { header: 'Type', key: 'type' },\n      { header: 'Support Type', key: 'support_type' }\n    ];\n\n    return (\n      <div id=\"Districts\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table\n          loading={loading}\n          caption={'GHN Districts'}\n          rows={districts}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Districts);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nclass Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getGHNWards = this.getGHNWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNWards();\n  }\n\n  async getGHNWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getGHNWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Wards\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table loading={loading} caption={'GHN Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Wards);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { NavPills } from '../../../components';\n\ninterface IVietceteraProps {\n  themeInput: string;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themeListItemBorderBottom: string;\n  themeSecondaryBackgroundColor: string;\n  themeMutedTextColor: string;\n}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nclass Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  renderForm() {\n    const { type } = this.state;\n    const { themeInput } = this.props;\n    const options = [\n      { value: 'latest', text: 'Latest' },\n      { value: 'popular', text: 'Popular' },\n      { value: 'editor-pick', text: 'Editor Pick' }\n    ];\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control as=\"select\" className={themeInput} value={type} onChange={this.getArticles}>\n            {options.map((option, index) => {\n              const { text, value } = option;\n              return (\n                <option key={index} value={value}>\n                  {text}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n    const {\n      themeTextColor = '',\n      themeSpinnerVariant = '',\n      themeListItemBorderBottom = '',\n      themeSecondaryBackgroundColor = '',\n      themeMutedTextColor = ''\n    } = this.props;\n    return (\n      <div id=\"Vietcetera\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <h3 className={`${themeTextColor} text-center`}>Vietcetera ({articles.length})</h3>\n        {this.renderForm()}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && articles.length !== 0 && (\n          <ListGroup>\n            {articles.map((article, index) => {\n              const { title = '', url = '', publishDate = '', description = '' } = article;\n              return (\n                <ListGroup.Item\n                  key={index}\n                  className={`${themeSecondaryBackgroundColor} ${themeListItemBorderBottom}`}>\n                  <Card.Title>\n                    <a href={url} target=\"_blank\" rel=\"noreferrer\" className={`${themeTextColor}`}>\n                      {title}\n                    </a>\n                  </Card.Title>\n                  <Card.Subtitle className={`${themeMutedTextColor} mb-1`}>\n                    <small>{publishDate}</small>\n                  </Card.Subtitle>\n                  <Card.Text className={themeTextColor}>{description}</Card.Text>\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeListItemBorderBottom: string = _.get(state, 'theme.listItemBorderBottom', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  const themeMutedTextColor: string = _.get(state, 'theme.mutedTextColor', '');\n  return {\n    themeInput,\n    themeTextColor,\n    themeSpinnerVariant,\n    themeListItemBorderBottom,\n    themeSecondaryBackgroundColor,\n    themeMutedTextColor\n  };\n};\n\nexport default connect(mapStateToProps)(Vietcetera);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass AdministrativeDivisions extends Component {\n  render() {\n    return (\n      <div id=\"AdministrativeDivisions\" className=\"container-fluid\">\n        <SmallDoc group={'administrativeDivisions'} header={'Administrative Divisions'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(AdministrativeDivisions);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container-fluid\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Banks);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container-fluid\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Calendar);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {\n  themeTextColor: string;\n}\n\ninterface IDocsState {\n  endpoints: any;\n}\n\nclass Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const { themeTextColor = '' } = this.props;\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small className={`${themeTextColor}`}>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar() {\n    const { endpoints } = this.state;\n    const { themeTextColor = '' } = this.props;\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups\n      .map((group: string) => {\n        const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n        return { group, apis };\n      })\n      .filter((item: any) => {\n        const { apis } = item;\n        return apis.length > 0;\n      });\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.camelize(helper.capitalize(group));\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className={`${themeTextColor} m-0 p-0`}\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container-fluid\">\n        <div className=\"h-100\">\n          <div className=\"row\">\n            <div className=\"col-md-3 d-none d-md-block\">\n              <div className=\"content-height overflow-auto\">{this.renderSidebar()}</div>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"content-height overflow-auto\">\n                {groups.length > 0 &&\n                  groups.map((group: string, index: number) => {\n                    return (\n                      <Doc\n                        key={index}\n                        group={group}\n                        header={helper.camelize(helper.capitalize(group))}></Doc>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeTextColor };\n};\n\nexport default connect(mapStateToProps)(Docs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container-fluid\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(EthnicMinorities);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container-fluid\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Finance);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container-fluid\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Government);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass History extends Component {\n  render() {\n    return (\n      <div id=\"History\" className=\"container-fluid\">\n        <SmallDoc group={'history'} header={'History'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(History);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container-fluid\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(LicensePlates);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Music extends Component {\n  render() {\n    return (\n      <div id=\"Music\" className=\"container-fluid\">\n        <SmallDoc group={'music'} header={'Music'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Music);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container-fluid\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(News);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass OpenAPIs extends Component {\n  render() {\n    return (\n      <div id=\"OpenAPIs\" className=\"container-fluid\">\n        <SmallDoc group={'openAPIs'} header={'OpenAPIs'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(OpenAPIs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container-fluid\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Phones);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container-fluid\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Sports);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Visas extends Component {\n  render() {\n    return (\n      <div id=\"Visas\" className=\"container-fluid\">\n        <SmallDoc group={'visas'} header={'Visas'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Visas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Weather extends Component {\n  render() {\n    return (\n      <div id=\"Weather\" className=\"container-fluid\">\n        <SmallDoc group={'weather'} header={'Weather'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Weather);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass YouTube extends Component {\n  render() {\n    return (\n      <div id=\"YouTube\" className=\"container-fluid\">\n        <SmallDoc group={'youtube'} header={'YouTube'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(YouTube);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IDistrictsProps {\n  themeInput: string;\n}\n\ninterface IDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nclass Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.getDistricts = this.getDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  async getProvinces() {\n    const provinces = await apis.getProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  renderForm() {\n    const { provinces = [], province_id = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            className={themeInput}\n            value={province_id}\n            onChange={this.updateProvince}>\n            <option value={''}>Province</option>\n            {provinces.map((province, index) => {\n              return (\n                <option key={index} value={province.province_id}>\n                  {province.name}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"Districts\" className=\"container-fluid\">\n        <NavPills group={'administrative-divisions'}></NavPills>\n        {this.renderForm()}\n        <Table\n          loading={loading}\n          caption={'Districts'}\n          rows={districts}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(Districts);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IPostalCodesProps {}\n\ninterface IPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nclass PostalCodes extends Component<IPostalCodesProps, IPostalCodesState> {\n  constructor(props: IPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"PostalCodes\" className=\"container-fluid\">\n        <NavPills group={'administrative-divisions'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Postal Codes'}\n          rows={postalCodes}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(PostalCodes);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nclass Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macro_region' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"Provinces\" className=\"container-fluid\">\n        <NavPills group={'administrative-divisions'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Provinces'}\n          rows={provinces}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Provinces);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Pagination } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n  total: number;\n  active: number;\n}\n\nclass Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true, total: 0, active: 1 };\n\n    this.getWards = this.getWards.bind(this);\n    this.getTotalWards = this.getTotalWards.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n    this.updateActive = this.updateActive.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTotalWards();\n    await this.getWards();\n  }\n\n  async getWards(page: number = 0) {\n    this.setState({ loading: true });\n    const skip: number = page * 100;\n    const wards = await apis.getWards(skip);\n    this.setState({ wards, loading: false });\n  }\n\n  async getTotalWards() {\n    const total: number = await apis.getTotalWards();\n    this.setState({ total });\n  }\n\n  async goToPage(page: number) {\n    await this.setState({ active: page });\n    await this.getWards(page - 1);\n  }\n\n  async updateActive(value: number) {\n    let { active } = this.state;\n    active += value;\n    await this.setState({ active });\n    await this.getWards(active - 1);\n  }\n\n  renderPagination() {\n    const { total, active } = this.state;\n\n    if (!total) return '';\n\n    const max: number = Math.floor(total / 100);\n\n    const final: number = active + 10 < max ? active + 10 : max;\n    const start: number = final === max ? max - 10 : active;\n    const items: Array<any> = [];\n    for (let page = start; page <= final; page++) {\n      items.push(\n        <Pagination.Item key={page} active={page === active} onClick={() => this.goToPage(page)}>\n          {page}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination size=\"sm\" className=\"justify-content-center\">\n        {active !== 1 && (\n          <Pagination.Item key={1} onClick={() => this.goToPage(1)}>\n            1\n          </Pagination.Item>\n        )}\n        {active !== 1 && <Pagination.Prev onClick={() => this.updateActive(1)} />}\n        {items}\n        {final !== max && <Pagination.Next onClick={() => this.updateActive(1)} />}\n        {final !== max && (\n          <Pagination.Item key={max} onClick={() => this.goToPage(max)}>\n            {max}\n          </Pagination.Item>\n        )}\n      </Pagination>\n    );\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    const rowConfigs: Array<any> = [\n      { header: 'Ward', key: 'ward' },\n      { header: 'District', key: 'district' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"Wards\" className=\"container-fluid\">\n        <NavPills group={'administrative-divisions'}></NavPills>\n        {this.renderPagination()}\n        <div className=\"mb-3\">\n          <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n        </div>\n        {this.renderPagination()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Wards);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IListProps {}\n\ninterface IListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<IListProps, IListState> {\n  constructor(props: IListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getBanks = this.getBanks.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanks();\n  }\n\n  async getBanks() {\n    this.setState({ loading: true });\n    const banks = await apis.getBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' },\n      { header: 'Name (Short)', key: 'name_short' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        <NavPills group={'banks'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Banks'}\n          rows={banks}\n          rowConfigs={rowConfigs}\n          rowIndexEnabled={true}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(List);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { NavPills, Table } from '../../../../components';\n\ninterface IRatesProps {\n  themeInput: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themePrimaryBackgroundColor: string;\n}\n\ninterface IRatesState {\n  rates: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nclass Rates extends Component<IRatesProps, IRatesState> {\n  constructor(props: IRatesProps) {\n    super(props);\n\n    this.state = {\n      rates: [],\n      currency: '',\n      currencies: [],\n      loading: false,\n      sortBy: '',\n      sortDir: 1\n    };\n\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.updateCurrency = this.updateCurrency.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const rates = await apis.getBanksForexRates();\n    const currencies = _.uniq(rates.map(rate => rate.code)).sort();\n    const [currency] = currencies;\n    await this.setState({ rates, currency, currencies, loading: false });\n  }\n\n  async updateCurrency(event: any) {\n    const { value: currency } = event.target;\n    await this.setState({ currency });\n  }\n\n  renderForm() {\n    const { currencies = [], currency = '' } = this.state;\n    const { themeInput } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            className={themeInput}\n            value={currency}\n            onChange={this.updateCurrency}>\n            <option value={''}>Currency</option>\n            {currencies.map((currency, index) => {\n              return (\n                <option key={index} value={currency}>\n                  {currency.toUpperCase()}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { loading = false, rates = [], currency = '' } = this.state;\n\n    const filterRates = rates.filter(rate => rate.code === currency);\n\n    const rowConfigs = [\n      { header: 'Bank', key: 'bank' },\n      { header: 'Code', key: 'code' },\n      { header: 'Buy Cash', key: 'buyCash' },\n      { header: 'Buy Transfer', key: 'buyTransfer' },\n      { header: 'Sell Cash', key: 'sellCash' },\n      { header: 'Sell Transfer', key: 'sellTransfer' },\n      { header: 'Last Updated At', key: 'time' }\n    ];\n\n    console.log(filterRates);\n\n    return (\n      <div id=\"Rates\" className=\"container-fluid\">\n        <NavPills group={'banks'}></NavPills>\n        {!loading && this.renderForm()}{' '}\n        <Table\n          rowIndexEnabled={true}\n          caption={`Forex Rates ${currency}`}\n          loading={loading}\n          rows={filterRates}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return {\n    themeInput,\n    themeBorder,\n    themeTextColor,\n    themeSpinnerVariant,\n    themePrimaryBackgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(Rates);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IHistoryProps {}\n\ninterface IHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nclass History extends Component<IHistoryProps, IHistoryState> {\n  constructor(props: IHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getForexRates = this.getForexRates.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getForexRates();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    const bank: string = banks[0] || '';\n    await this.setState({ bank, banks, loading: false });\n  }\n\n  async getForexRates() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    await this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"History\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" value={bank}>\n                    <option value={''}>Bank</option>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank}>\n                          {bank}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" value={currency}>\n                    <option value={''}>Currency</option>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(History);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { NavPills } from '../../../../components';\n\ninterface ISyncProps {\n  themeBorder: string;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themeRevertSpinnerVariant: string;\n  themePrimaryBackgroundColor: string;\n  themeButtonVariant: string;\n}\n\ninterface ISyncState {\n  banks: Array<string>;\n  loading: boolean;\n  syncing: Array<string>;\n}\n\nclass Sync extends Component<ISyncProps, ISyncState> {\n  constructor(props: ISyncProps) {\n    super(props);\n\n    this.state = { banks: [], syncing: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n    this.syncAll = this.syncAll.bind(this);\n    this.addToSyncing = this.addToSyncing.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    await this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string, index: number = 0) {\n    await this.addToSyncing(id);\n    const message: string = await apis.syncForexRates(id);\n    await this.removeFromSyncing(id);\n    console.log(index, id, message);\n  }\n\n  async addToSyncing(id: string) {\n    const { syncing = [] } = this.state;\n    const index = syncing.indexOf(id);\n    if (index !== -1) return;\n    syncing.push(id);\n    console.log('addToSyncing', syncing);\n    await this.setState({ syncing });\n  }\n\n  async removeFromSyncing(id: string) {\n    let { syncing = [] } = this.state;\n    syncing = syncing.filter(item => item !== id);\n    console.log('removeFromSyncing', syncing);\n    await this.setState({ syncing });\n  }\n\n  async syncAll() {\n    const { banks = [] } = this.state;\n    let index: number = 0;\n    for (const id of banks) {\n      index++;\n      await this.syncForexRates(id, index);\n    }\n  }\n\n  renderTable() {\n    const { banks = [], loading = false, syncing = [] } = this.state;\n    const {\n      themeBorder = '',\n      themeTextColor = '',\n      themeSpinnerVariant = '',\n      themePrimaryBackgroundColor = '',\n      themeRevertSpinnerVariant = '',\n      themeButtonVariant = ''\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${themeBorder}`}>\n            {banks.length ? (\n              <table className=\"table\">\n                <caption className={`${themePrimaryBackgroundColor} text-white text-center`}>\n                  Banks ({banks.length})\n                </caption>\n                <thead>\n                  <tr>\n                    <th className={`${themeTextColor}`}>#</th>\n                    <th className={`${themeTextColor}`}>ID</th>\n                    <th className=\"text-right\">\n                      <Button variant={themeButtonVariant} onClick={() => this.syncAll()}>\n                        SYNC ALL\n                      </Button>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {banks.map((bank, index) => {\n                    const syncingFlag: boolean = syncing.includes(bank);\n                    return (\n                      <tr key={index}>\n                        <td className={`${themeTextColor}`}>{index + 1}</td>\n                        <td className={`${themeTextColor}`}>{bank}</td>\n                        <td align=\"right\">\n                          <Button\n                            disabled={syncingFlag}\n                            variant={themeButtonVariant}\n                            onClick={() => this.syncForexRates(bank)}>\n                            {syncingFlag ? (\n                              <Spinner\n                                animation=\"border\"\n                                variant={themeRevertSpinnerVariant}></Spinner>\n                            ) : (\n                              'SYNC'\n                            )}\n                          </Button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            ) : (\n              ''\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"Sync\" className=\"container-fluid\">\n        <NavPills group={'banks'}></NavPills>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeRevertSpinnerVariant: string = _.get(state, 'theme.revertSpinnerVariant', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  const themeButtonVariant: string = _.get(state, 'theme.buttonVariant', '');\n  return {\n    themeBorder,\n    themeTextColor,\n    themeSpinnerVariant,\n    themeRevertSpinnerVariant,\n    themePrimaryBackgroundColor,\n    themeButtonVariant\n  };\n};\n\nexport default connect(mapStateToProps)(Sync);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IConverterProps {\n  themeInput: string;\n  themeTextColor: string;\n}\n\ninterface IConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nclass Converter extends Component<IConverterProps, IConverterState> {\n  private loadingText: string = 'LOADING ...';\n\n  constructor(props: IConverterProps) {\n    super(props);\n\n    this.state = {\n      solarDate: '',\n      solarString: this.loadingText,\n      lunarDate: '',\n      lunarString: this.loadingText\n    };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    await this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    const canChi: string = await apis.getCanChi(year, month, date);\n    return helper.capitalize(canChi);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString, lunarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString, solarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n    const { themeInput = '', themeTextColor = '' } = this.props;\n\n    return (\n      <div id=\"Converter\" className=\"container-fluid\">\n        <h3 className={`${themeTextColor} text-center`}>Calendar</h3>\n        <Form className=\"row\">\n          <div className=\"col-sm-6\">\n            <Form.Group controlId=\"SolarDate\">\n              <Form.Label className={themeTextColor}>Solar Date: {solarString}</Form.Label>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"Solar Date\"\n                pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                className={`${themeInput}`}\n                value={solarDate}\n                onChange={this.updateSolarDate}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"col-sm-6\">\n            <Form.Group controlId=\"LunarDate\">\n              <Form.Label className={themeTextColor}>Lunar Date: {lunarString}</Form.Label>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"Lunar Date\"\n                pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                className={`${themeInput}`}\n                value={lunarDate}\n                onChange={this.updateLunarDate}\n              />\n            </Form.Group>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeInput, themeTextColor };\n};\n\nexport default connect(mapStateToProps)(Converter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface ICompaniesProps {}\n\ninterface ICompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nclass Companies extends Component<ICompaniesProps, ICompaniesState> {\n  constructor(props: ICompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"Companies\" className=\"container-fluid\">\n        <NavPills group={'finance'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Companies'}\n          rows={companies}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Companies);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IHighlightsProps {\n  themeInput: string;\n}\n\ninterface IHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nclass Highlights extends Component<IHighlightsProps, IHighlightsState> {\n  constructor(props: IHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderForm() {\n    const { period = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            className={`${themeInput}`}\n            value={period}\n            onChange={this.updatePeriod}>\n            {periods.map((period, index) => {\n              const { label, value } = period;\n              return (\n                <option key={index} value={value}>\n                  {label}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { highlights, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Latest', key: 'latest' },\n      { header: 'Diff', key: 'diff' },\n      { header: 'Median', key: 'median' },\n      { header: 'Average', key: 'average' }\n    ];\n\n    const rows = highlights.map((highlight, index) => {\n      const {\n        symbol = '',\n        group = '',\n        startDate = '',\n        name = '',\n        industry = '',\n        subsector = '',\n        latest,\n        latestDate,\n        min,\n        minDate,\n        max,\n        maxDate,\n        diff,\n        diffToMin,\n        diffToMax,\n        median,\n        average\n      } = highlight;\n      const symbolString = `${symbol} - ${group} - ${startDate}`;\n      const nameString = `${name} - ${industry} - ${subsector}`;\n      const latestString = `${latest} (${latestDate}) - ${min} (${minDate}) - ${max} (${maxDate})`;\n      const diffString = `${diff} - ${diffToMin} - ${diffToMax}`;\n      return {\n        symbol: symbolString,\n        name: nameString,\n        latest: latestString,\n        diff: diffString,\n        median,\n        average\n      };\n    });\n    return (\n      <div id=\"Highlights\" className=\"container-fluid\">\n        {this.renderForm()}\n        <Table\n          rowIndexEnabled={true}\n          caption={`Highlights`}\n          loading={loading}\n          rows={rows}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(Highlights);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { NavPills } from '../../../components';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IHistoryProps {\n  themeInput: string;\n  themeTextColor: string;\n}\n\ninterface IHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  periods: Array<any>;\n  period: string;\n}\nclass History extends Component<IHistoryProps, IHistoryState> {\n  constructor(props: IHistoryProps) {\n    super(props);\n\n    this.state = {\n      periods: periods,\n      loading: false,\n      data: {},\n      symbols: [],\n      symbol: '',\n      from: 0,\n      to: 0,\n      period: ''\n    };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    await this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  renderForm() {\n    const { periods = [], period = '', symbols = [], symbol = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form className=\"row\">\n        <div className=\"col-sm-6\">\n          <Form.Group>\n            <Form.Control\n              as=\"select\"\n              className={themeInput}\n              value={period}\n              onChange={this.updatePeriod}>\n              {periods.map((item: any, index: number) => {\n                const { label, value } = item;\n                return (\n                  <option key={index} value={value}>\n                    {label}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </div>\n        <div className=\"col-sm-6\">\n          <Form.Group>\n            <Form.Control\n              as=\"select\"\n              className={themeInput}\n              value={symbol}\n              onChange={this.updateSymbol}>\n              {symbols.map((item, index) => {\n                return (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </div>\n      </Form>\n    );\n  }\n\n  render() {\n    const { loading = false, data = {}, symbol = '' } = this.state;\n    const { themeTextColor = '' } = this.props;\n    return (\n      <div id=\"History\" className=\"container-fluid\">\n        <NavPills group={'finance'}></NavPills>\n        <h3 className={`${themeTextColor} text-center`}>History ({symbol})</h3>\n        {this.renderForm()}\n        <Card>\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeInput, themeTextColor };\n};\n\nexport default connect(mapStateToProps)(History);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IPotentialsProps {\n  themeInput: string;\n}\n\ninterface IPotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nclass Potentials extends Component<IPotentialsProps, IPotentialsState> {\n  constructor(props: IPotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderForm() {\n    const { period = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            className={`${themeInput}`}\n            value={period}\n            onChange={this.updatePeriod}>\n            {periods.map((period, index) => {\n              const { label, value } = period;\n              return (\n                <option key={index} value={value}>\n                  {label}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n  render() {\n    const { potentials, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Latest', key: 'latest' },\n      { header: 'Diff', key: 'diff' },\n      { header: 'Median', key: 'median' },\n      { header: 'Average', key: 'average' }\n    ];\n\n    const rows = potentials.map((potential, index) => {\n      const {\n        symbol = '',\n        group = '',\n        startDate = '',\n        name = '',\n        industry = '',\n        subsector = '',\n        latest,\n        latestDate,\n        min,\n        minDate,\n        max,\n        maxDate,\n        diff,\n        diffToMin,\n        diffToMax,\n        median,\n        average\n      } = potential;\n      const symbolString = `${symbol} - ${group} - ${startDate}`;\n      const nameString = `${name} - ${industry} - ${subsector}`;\n      const latestString = `${latest} (${latestDate}) - ${min} (${minDate}) - ${max} (${maxDate})`;\n      const diffString = `${diff} - ${diffToMin} - ${diffToMax}`;\n      return {\n        symbol: symbolString,\n        name: nameString,\n        latest: latestString,\n        diff: diffString,\n        median,\n        average\n      };\n    });\n    return (\n      <div id=\"Potentials\" className=\"container-fluid\">\n        {this.renderForm()}\n        <Table\n          rowIndexEnabled={true}\n          caption={`Highlights`}\n          loading={loading}\n          rows={rows}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(Potentials);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IProfitProps {\n  themeInput: string;\n  themeTextColor: string;\n  themeButtonVariant: string;\n}\n\ninterface IProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nclass Profit extends Component<IProfitProps, IProfitState> {\n  constructor(props: IProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    const { themeButtonVariant = '', themeTextColor = '', themeInput = '' } = this.props;\n    return (\n      <div id=\"Profit\" className=\"container-fluid\">\n        <div className=\"rounded p-3 border\">\n          <Form onSubmit={this.calculateProfit} className=\"row\">\n            <div className=\"col-sm-4\">\n              <Form.Group>\n                <Form.Label className={themeTextColor}>\n                  Buy: {helper.numberFormatter(buy * volume)}\n                </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Buy\"\n                  className={`${themeInput} text-center`}\n                  value={buy}\n                  onChange={this.updateBuy}></Form.Control>\n              </Form.Group>\n            </div>\n            <div className=\"col-sm-4\">\n              <Form.Group>\n                <Form.Label className={themeTextColor}>\n                  Sell: {helper.numberFormatter(sell * volume)}\n                </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Sell\"\n                  className={`${themeInput} text-center`}\n                  value={sell}\n                  onChange={this.updateSell}></Form.Control>\n              </Form.Group>\n            </div>\n            <div className=\"col-sm-4\">\n              <Form.Group>\n                <Form.Label className={themeTextColor}>\n                  Volume - Profit: {helper.numberFormatter(profit)}\n                </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Volume\"\n                  className={`${themeInput} text-center`}\n                  value={volume}\n                  onChange={this.updateVolume}></Form.Control>\n              </Form.Group>\n            </div>\n            <div className=\"col-sm-12\">\n              <Button variant={themeButtonVariant} type=\"submit\" className=\"form-control\">\n                Calculate\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeButtonVariant: string = _.get(state, 'theme.buttonVariant', '');\n  return { themeInput, themeTextColor, themeButtonVariant };\n};\n\nexport default connect(mapStateToProps)(Profit);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface ITrendsProps {\n  themeBadge: string;\n  themeSpinnerVariant: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeSecondaryBackgroundColor: string;\n}\n\ninterface ITrendsState {\n  trends: Array<any>;\n  loading: boolean;\n}\n\nclass Trends extends Component<ITrendsProps, ITrendsState> {\n  constructor(props: ITrendsProps) {\n    super(props);\n\n    this.state = { trends: [], loading: true };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    await this.setState({ loading: true });\n    const trends = await apis.getGoogleTrends();\n    await this.setState({ trends, loading: false });\n  }\n\n  render() {\n    const { trends = [], loading = true } = this.state;\n    const {\n      themeBorder = '',\n      themeTextColor = '',\n      themeSecondaryBackgroundColor = '',\n      themeSpinnerVariant = '',\n      themeBadge = ''\n    } = this.props;\n\n    return (\n      <Card id=\"Trends\" className={`${themeSecondaryBackgroundColor} ${themeBorder}`}>\n        <Card.Body>\n          <Card.Title className={`${themeTextColor} text-center`}>\n            Trends ({trends.length})\n          </Card.Title>\n          {loading && (\n            <div className=\"text-center\">\n              <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n            </div>\n          )}\n          {trends.length !== 0 &&\n            trends.map((trend, index) => {\n              const { text, url } = trend;\n              return (\n                <Badge key={index} variant={themeBadge} className=\"mr-1\">\n                  <a key={index} href={url} target=\"_blank\" rel=\"noreferrer\" className=\"text-white\">\n                    {text}\n                  </a>\n                </Badge>\n              );\n            })}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBadge: string = _.get(state, 'theme.badge', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  return {\n    themeBadge,\n    themeSpinnerVariant,\n    themeBorder,\n    themeTextColor,\n    themeSecondaryBackgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(Trends);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\nimport Trends from './Trends';\n\ninterface IFeedProps {\n  themeInput: string;\n  themeTextColor: string;\n  themeMutedTextColor: string;\n  themeBorder: string;\n  themeSpinnerVariant: string;\n  themeListItemBorderBottom: string;\n  themePrimaryBackgroundColor: string;\n  themeSecondaryBackgroundColor: string;\n}\n\ninterface IFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nclass Feed extends Component<IFeedProps, IFeedState> {\n  constructor(props: IFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n    this.renderArticles = this.renderArticles.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n    await this.getCategories();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const { source } = this.state;\n    const categories = await apis.getCategories(source);\n    await this.setState({ categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    await this.setState({ sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    await this.setState({ source });\n    await this.getCategories();\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles(source, category);\n    this.setState({ articles, loading: false });\n  }\n\n  renderForm() {\n    const { categories = [], sources = [], source = '', category = '' } = this.state;\n    const { themeInput } = this.props;\n    return (\n      <Form>\n        <div className=\"row\">\n          {sources.length > 0 && (\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  className={themeInput}\n                  value={source}\n                  onChange={this.updateSource}>\n                  <option value={''}>Source</option>\n                  {sources.map((source, index) => {\n                    return (\n                      <option key={index} value={source}>\n                        {helper.capitalize(source)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          )}\n          {categories.length > 0 && (\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  className={themeInput}\n                  value={category}\n                  onChange={this.updateCategory}>\n                  <option value={''}>Category</option>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category}>\n                        {helper.capitalize(category)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          )}\n        </div>\n      </Form>\n    );\n  }\n\n  renderArticles() {\n    const { articles } = this.state;\n    const {\n      themePrimaryBackgroundColor = '',\n      themeTextColor = '',\n      themeSecondaryBackgroundColor = '',\n      themeListItemBorderBottom = '',\n      themeMutedTextColor = ''\n    } = this.props;\n    return (\n      <div>\n        {articles.length === 0 && (\n          <div className=\"p-3 text-center text-uppercase rounded border\">NO VIDEOS</div>\n        )}\n        {articles.length !== 0 && (\n          <ListGroup>\n            <ListGroup.Item\n              className={`${themePrimaryBackgroundColor} ${themeListItemBorderBottom} text-white text-center`}>\n              Articles ({articles.length})\n            </ListGroup.Item>\n            {articles.map((article = {}, index) => {\n              const { title = '', url = '', source = '', publishedDate = '' } = article;\n              let { description = '' } = article;\n              console.log(description);\n              description = description.toString() || '';\n              const startIndex: number = description.indexOf('<img');\n              const endIndex: number = description.indexOf('/>');\n              let short = '';\n              if (startIndex > -1 && endIndex > startIndex) {\n                short = `${description.substring(0, startIndex)}${description.substring(\n                  endIndex + 2,\n                  description.length\n                )}`;\n              }\n              return (\n                <ListGroup.Item\n                  key={index}\n                  className={`${themeSecondaryBackgroundColor} ${themeListItemBorderBottom}`}>\n                  <Card.Title>\n                    <a href={url} target=\"_blank\" rel=\"noreferrer\" className={`${themeTextColor}`}>\n                      <u>{title}</u>\n                    </a>\n                  </Card.Title>\n                  <Card.Subtitle className={`${themeMutedTextColor} mb-1`}>\n                    {source && <small>{source}</small>} -{' '}\n                    {publishedDate && <small>({publishedDate})</small>}\n                  </Card.Subtitle>\n                  <Card.Text className={`${themeTextColor}`}>\n                    <span dangerouslySetInnerHTML={{ __html: short }}></span>\n                  </Card.Text>\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = true } = this.state;\n    const { themeSpinnerVariant = '' } = this.props;\n    return (\n      <div id=\"Feed\" className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n            <div className=\"mb-3\">\n              <Trends></Trends>\n            </div>\n          </div>\n          <div className=\"col-sm-9\">\n            {this.renderForm()}\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n              </div>\n            )}\n            {!loading && this.renderArticles()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeListItemBorderBottom: string = _.get(state, 'theme.listItemBorderBottom', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  const themeMutedTextColor: string = _.get(state, 'theme.mutedTextColor', '');\n  return {\n    themeInput,\n    themeMutedTextColor,\n    themeTextColor,\n    themeBorder,\n    themeListItemBorderBottom,\n    themePrimaryBackgroundColor,\n    themeSpinnerVariant,\n    themeSecondaryBackgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(Feed);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IPrefixesProps {}\n\ninterface IPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nclass Prefixes extends Component<IPrefixesProps, IPrefixesState> {\n  constructor(props: IPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPrefixes = this.getPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrefixes();\n  }\n\n  async getPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"Prefixes\" className=\"container-fluid\">\n        <NavPills group={'phones'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Phone Prefixes'}\n          rows={prefixes}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Prefixes);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { NavPills, Table } from '../../../components';\n\ninterface IProvidersProps {\n  themeBorder: string;\n  themeTextColor: string;\n  themePrimaryBackgroundColor: string;\n}\n\ninterface IProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nclass Providers extends Component<IProvidersProps, IProvidersState> {\n  constructor(props: IProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getProviders = this.getProviders.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProviders();\n  }\n\n  async getProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n    const rowConfigs = [\n      {\n        header: 'Provider',\n        key: 'provider'\n      },\n      {\n        header: 'Prefixes',\n        key: 'prefixes',\n        type: 'list'\n      }\n    ];\n    return (\n      <div id=\"Providers\" className=\"container-fluid\">\n        <NavPills group={'phones'}></NavPills>\n        <Table\n          caption={'Providers'}\n          rows={providers}\n          loading={loading}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return { themeBorder, themeTextColor, themePrimaryBackgroundColor };\n};\n\nexport default connect(mapStateToProps)(Providers);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table, NavPills } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IClubsProps {}\n\ninterface IClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nclass Clubs extends Component<IClubsProps, IClubsState> {\n  constructor(props: IClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getClubs = this.getClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getClubs();\n  }\n\n  async getClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"Clubs\" className=\"container-fluid\">\n        <NavPills group={'sports'}></NavPills>\n        <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Clubs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table, NavPills } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IVLeagueProps {}\n\ninterface IVLeagueState {\n  matches: Array<any>;\n  leagueTable: Array<any>;\n  loading: boolean;\n}\n\nclass VLeague extends Component<IVLeagueProps, IVLeagueState> {\n  constructor(props: IVLeagueProps) {\n    super(props);\n\n    this.state = { matches: [], leagueTable: [], loading: true };\n\n    this.getVLeague = this.getVLeague.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getVLeague();\n  }\n\n  async getVLeague() {\n    this.setState({ loading: true });\n    const res = await apis.getVLeague();\n    const { matches = [], leagueTable = [] } = res;\n    this.setState({ matches, leagueTable, loading: false });\n  }\n\n  render() {\n    const { matches = [], leagueTable = [], loading = false } = this.state;\n\n    const matchesRowConfigs: Array<any> = [\n      { header: '#', key: 'round' },\n      { header: 'Date Time', key: 'dateTime' },\n      { header: 'Home', key: 'homeTeam' },\n      { header: '', key: 'homeScore' },\n      { header: '', key: 'awayScore' },\n      { header: 'Away', key: 'awayTeam' }\n    ];\n\n    const leagueTableRowConfigs: Array<any> = [\n      { header: '#', key: 'rank' },\n      { header: 'Name', key: 'name' },\n      { header: 'PTS', key: 'point' },\n      { header: 'W', key: 'win' },\n      { header: 'D', key: 'draw' },\n      { header: 'L', key: 'lost' },\n      { header: 'G', key: 'goal' },\n      { header: 'GA', key: 'goalAgainst' },\n      { header: 'GD', key: 'goalDifference' }\n    ];\n\n    return (\n      <div id=\"VLeague\" className=\"container-fluid\">\n        <NavPills group={'sports'}></NavPills>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div className=\"content-height overflow-auto\">\n              <Table\n                loading={loading}\n                caption={'Matches'}\n                rows={matches}\n                rowConfigs={matchesRowConfigs}></Table>\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <div className=\"content-height overflow-auto\">\n              <Table\n                loading={loading}\n                caption={'League Table'}\n                rows={leagueTable}\n                rowConfigs={leagueTableRowConfigs}></Table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(VLeague);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis, helper } from '../../../services';\n\ninterface ICongressProps {\n  themeInput: string;\n}\n\ninterface ICongressState {\n  chamber: string;\n  congress: Array<any>;\n  loading: boolean;\n}\n\nclass Congress extends Component<ICongressProps, ICongressState> {\n  constructor(props: ICongressProps) {\n    super(props);\n\n    this.state = { congress: [], chamber: 'house', loading: true };\n\n    this.renderForm = this.renderForm.bind(this);\n    this.getCongress = this.getCongress.bind(this);\n    this.updateChamber = this.updateChamber.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCongress();\n  }\n\n  async getCongress() {\n    this.setState({ loading: true });\n    const { chamber } = this.state;\n    const congress: Array<any> = await apis.getCongress(chamber);\n    this.setState({ congress, loading: false });\n  }\n\n  async updateChamber(event: any) {\n    const { value: chamber } = event.target;\n    await this.setState({ chamber });\n    await this.getCongress();\n  }\n\n  renderForm() {\n    const { chamber } = this.state;\n    const { themeInput } = this.props;\n\n    const options = [\n      { value: 'house', text: 'House' },\n      { value: 'senate', text: 'Senate' }\n    ];\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            className={themeInput}\n            value={chamber}\n            onChange={this.updateChamber}>\n            <option value={''}>Chamber</option>\n            {options.map((option, index) => {\n              const { text, value } = option;\n              return (\n                <option key={index} value={value}>\n                  {text}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { congress = [], chamber = '', loading = false } = this.state;\n\n    const members: Array<any> = congress\n      .filter(member => member.in_office)\n      .map(member => {\n        const { first_name, last_name, gender, party, seniority, state, title } = member;\n        const name: string = `${first_name} ${last_name}`;\n        return { name, gender, party, seniority, state, title };\n      })\n      .sort((a, b) => (a.state > b.state ? 1 : -1));\n\n    const rowConfigs = [\n      { header: 'Title', key: 'title' },\n      { header: 'Name', key: 'name' },\n      { header: 'State', key: 'state' },\n      { header: 'Party', key: 'party' },\n      { header: 'Gender', key: 'gender' },\n      { header: 'Seniority', key: 'seniority' }\n    ];\n\n    const caption = helper.capitalize(chamber);\n    return (\n      <div id=\"Congress\" className=\"container-fluid\">\n        {this.renderForm()}\n        <Table loading={loading} caption={caption} rows={members} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(Congress);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IListProps {\n  themeInput: string;\n}\n\ninterface IListState {\n  query: string;\n  visas: Array<any>;\n  filterVisas: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<IListProps, IListState> {\n  constructor(props: IListProps) {\n    super(props);\n\n    this.state = { query: '', visas: [], filterVisas: [], loading: true };\n\n    this.getVisas = this.getVisas.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getVisas();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { visas = [] } = this.state;\n    const filterVisas = visas.filter(visa => {\n      let { country = '', requirement = '' } = visa;\n      const countryFlag = query ? country.toLowerCase().includes(query.toLowerCase()) : true;\n      const requirementFlag = query\n        ? requirement.toLowerCase().includes(query.toLowerCase())\n        : true;\n      return countryFlag || requirementFlag;\n    });\n    this.setState({ filterVisas });\n  }\n\n  async getVisas() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const visas: Array<any> = await apis.getVisas();\n    const filterVisas = visas.filter(visa => {\n      let { country = '', requirement = '' } = visa;\n      const countryFlag = query ? country.toLowerCase().includes(query.toLowerCase()) : true;\n      const requirementFlag = query\n        ? requirement.toLowerCase().includes(query.toLowerCase())\n        : true;\n      return countryFlag || requirementFlag;\n    });\n    await this.setState({ filterVisas, visas, loading: false });\n  }\n\n  renderForm() {\n    const { query = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form className=\"mb-3\">\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Query\"\n          value={query}\n          className={`${themeInput}`}\n          onChange={this.filter}></Form.Control>\n      </Form>\n    );\n  }\n\n  render() {\n    const { filterVisas = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Country', key: 'country' },\n      { header: 'Requirement', key: 'requirement' }\n    ];\n\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        {this.renderForm()}\n        <Table\n          loading={loading}\n          caption={'Visas'}\n          rows={filterVisas}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(List);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { NavPills } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IAirVisualProps {\n  themeInput: string;\n  themeSpinnerVariant: string;\n}\n\ninterface IAirVisualState {\n  city: string;\n  cities: Array<any>;\n  airVisual: any;\n  loading: boolean;\n}\n\nclass AirVisual extends Component<IAirVisualProps, IAirVisualState> {\n  constructor(props: IAirVisualProps) {\n    super(props);\n\n    this.state = {\n      city: '',\n      cities: [],\n      airVisual: {},\n      loading: true\n    };\n\n    this.getAirVisual = this.getAirVisual.bind(this);\n    this.getAirVisualCities = this.getAirVisualCities.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getAirVisualCities();\n    await this.getAirVisual();\n  }\n\n  async getAirVisualCities() {\n    const cities: Array<any> = await apis.getAirVisualCities();\n\n    this.setState({ cities });\n  }\n\n  async getAirVisual(query?: string) {\n    const { city: fallbackCity = '' } = this.state;\n    const city = query || fallbackCity;\n    this.setState({ loading: true });\n    const airVisual: Array<any> = await apis.getAirVisual(city);\n    this.setState({ airVisual, loading: false });\n  }\n\n  async updateCity(event: any) {\n    const { value: city } = event.target;\n    await this.setState({ city });\n    await this.getAirVisual(city);\n  }\n\n  renderForm() {\n    const { city = '', cities = [] } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control as=\"select\" className={themeInput} value={city} onChange={this.updateCity}>\n            <option value={''}>City</option>\n            {cities.map((item: any, index) => {\n              return (\n                <option key={index} value={item.city}>\n                  {item.city || ''} - {item.state || ''}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { airVisual = {}, loading = true } = this.state;\n    const { themeSpinnerVariant = '' } = this.props;\n    const aqius: number = _.get(airVisual, 'current.pollution.aqius', 0);\n    console.log(airVisual);\n    return (\n      <div id=\"YouTubeTrending\" className=\"container-fluid\">\n        <NavPills group={'weather'}></NavPills>\n        {this.renderForm()}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <Card>\n            <Card.Body>\n              <Card.Text className=\"text-center\">{aqius}</Card.Text>\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  return { themeInput, themeSpinnerVariant };\n};\n\nexport default connect(mapStateToProps)(AirVisual);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'react-bootstrap';\n\nimport { NavPills } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ICurrentProps {}\n\ninterface ICurrentState {\n  result: any;\n  loading: boolean;\n}\n\nclass Current extends Component<ICurrentProps, ICurrentState> {\n  constructor(props: ICurrentProps) {\n    super(props);\n\n    this.state = { result: {}, loading: true };\n\n    this.getCurrent = this.getCurrent.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCurrent();\n  }\n\n  async getCurrent() {\n    this.setState({ loading: true });\n    const result: Array<any> = await apis.getCurrentWeather('hanoi');\n    this.setState({ result, loading: false });\n  }\n\n  render() {\n    const { result = {} } = this.state;\n\n    const { main = {}, weather = [] } = result;\n    const [first = {}] = weather;\n    const { description = '' } = first;\n    const { temp = 0, feels_like = 0, temp_min = 0, temp_max = 0 } = main;\n\n    return (\n      <div id=\"Current\" className=\"container-fluid\">\n        <NavPills group={'weather'}></NavPills>\n        <Card>\n          <Card.Body>\n            <div className=\"mb-3\">\n              <p className=\"m-0 text-center\">{description.toUpperCase()}</p>\n              <h1 className=\"text-center\">{temp}&deg;C</h1>\n              <p className=\"m-0 text-center\">Feels Like: {feels_like}&deg;C</p>\n              <p className=\"m-0 text-center\">\n                Min: {temp_min}&deg;C - Max: {temp_max}&deg;C\n              </p>\n            </div>\n            <div className=\"p-3 bg-dark rounded\">\n              <pre className=\"m-0 text-white\">{JSON.stringify(result, null, 2)}</pre>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Current);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Spinner, ListGroup } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IYouTubeTrendingProps {\n  themeInput: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeListItemBorderBottom: string;\n  themeSpinnerVariant: string;\n  themeSecondaryBackgroundColor: string;\n  themeMutedTextColor: string;\n}\n\ninterface IYouTubeTrendingState {\n  categoryId: string;\n  categories: Array<any>;\n  mapCategories: any;\n  trending: Array<any>;\n  loading: boolean;\n}\n\nclass YouTubeTrending extends Component<IYouTubeTrendingProps, IYouTubeTrendingState> {\n  constructor(props: IYouTubeTrendingProps) {\n    super(props);\n\n    this.state = {\n      categoryId: '',\n      categories: [],\n      mapCategories: {},\n      trending: [],\n      loading: true\n    };\n\n    this.getYouTubeTrending = this.getYouTubeTrending.bind(this);\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n    this.updateVideoCategory = this.updateVideoCategory.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderCards = this.renderCards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n    await this.getYouTubeTrending();\n  }\n\n  async getYouTubeVideoCategories() {\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    const mapCategories: any = {};\n    for (const videoCategory of categories) {\n      const { id, title } = videoCategory;\n      mapCategories[id] = title;\n    }\n    this.setState({ categories, mapCategories });\n  }\n\n  async getYouTubeTrending(categoryId: number = 0) {\n    const { mapCategories = {} } = this.state;\n    this.setState({ loading: true });\n    const videos: Array<any> = await apis.getYouTubeTrending(categoryId);\n    const trending = videos.map(video => {\n      const { categoryId } = video;\n      const category: string = mapCategories[categoryId] || '';\n      video.category = category;\n      return video;\n    });\n    this.setState({ trending, loading: false });\n  }\n\n  async updateVideoCategory(event: any) {\n    const { value: categoryId } = event.target;\n    await this.setState({ categoryId });\n    await this.getYouTubeTrending(categoryId);\n  }\n\n  renderForm() {\n    const { categories, categoryId } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            className={themeInput}\n            as=\"select\"\n            value={categoryId}\n            onChange={this.updateVideoCategory}>\n            <option value={''}>Category</option>\n            {categories.map((category, index) => {\n              return (\n                <option key={index} value={category.id}>\n                  {category.id} - {category.title}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  renderCards() {\n    const { trending = [] } = this.state;\n    const {\n      themeBorder = '',\n      themeTextColor = '',\n      themeListItemBorderBottom = '',\n      themeSecondaryBackgroundColor = '',\n      themeMutedTextColor = ''\n    } = this.props;\n\n    return (\n      <div>\n        {trending.length === 0 && (\n          <div className=\"p-3 text-center text-uppercase rounded border\">NO VIDEOS</div>\n        )}\n        {trending.length > 0 && (\n          <ListGroup className={`${themeBorder} list-group-flush rounded-lg`}>\n            {trending.map((video: any, index: number) => {\n              const { title, url, channelId, channelTitle } = video;\n              const channelUrl: string = `https://www.youtube.com/channel/${channelId}`;\n              return (\n                <ListGroup.Item\n                  key={index}\n                  className={`${themeSecondaryBackgroundColor} ${themeTextColor} ${themeListItemBorderBottom} d-flex justify-content-between align-items-center`}>\n                  <h6 className=\"m-0\">\n                    <a href={url} className={themeTextColor} target=\"_blank\" rel=\"noreferrer\">\n                      {title}\n                    </a>\n                  </h6>\n                  <small className=\"text-right\">\n                    <a\n                      href={channelUrl}\n                      className={`${themeMutedTextColor}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\">\n                      {channelTitle}\n                    </a>\n                  </small>\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false } = this.state;\n    const { themeSpinnerVariant } = this.props;\n\n    return (\n      <div id=\"YouTubeTrending\" className=\"container-fluid\">\n        {this.renderForm()}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && this.renderCards()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeListItemBorderBottom: string = _.get(state, 'theme.listItemBorderBottom', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  const themeMutedTextColor: string = _.get(state, 'theme.mutedTextColor', '');\n  return {\n    themeInput,\n    themeMutedTextColor,\n    themeBorder,\n    themeTextColor,\n    themeListItemBorderBottom,\n    themeSecondaryBackgroundColor,\n    themeSpinnerVariant\n  };\n};\n\nexport default connect(mapStateToProps)(YouTubeTrending);\n","import {\n  // Administrative Divisions\n  AdministrativeDivisions,\n  AdministrativeDivisionsPostalCodes,\n  AdministrativeDivisionsProvinces,\n  AdministrativeDivisionsDistricts,\n  AdministrativeDivisionsWards,\n  // Banks\n  Banks,\n  BanksList,\n  BanksForexRates,\n  BanksForexHistory,\n  BanksForexSync,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  // History\n  History,\n  HistoryDynasties,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Music\n  Music,\n  MusicArtists,\n  // News\n  News,\n  NewsFeed,\n  // Open APIs\n  OpenAPIs,\n  OpenAPIsList,\n  GHNProvinces,\n  GHNDistricts,\n  GHNWards,\n  Vietcetera,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  SportsVLeague,\n  // USA\n  USACongress,\n  // Visas\n  Visas,\n  VisasList,\n  // Weather\n  Weather,\n  WeatherAirVisual,\n  WeatherCurrent,\n  // YouTube\n  YouTube,\n  YouTubeTrending\n} from '../pages';\n\ninterface IRoute {\n  path: string;\n  text: string;\n  component: any;\n  navigation: boolean;\n  demo: boolean;\n  group: string;\n}\n\nconst routes: Array<IRoute> = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false,\n    demo: false,\n    group: ''\n  },\n  {\n    path: 'administrative-divisions',\n    text: 'Administrative Divisions',\n    component: AdministrativeDivisions,\n    navigation: true,\n    demo: false,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'administrative-divisions-postal-codes',\n    text: 'Postal Codes',\n    component: AdministrativeDivisionsPostalCodes,\n    navigation: false,\n    demo: true,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'administrative-divisions-provinces',\n    text: 'Provinces',\n    component: AdministrativeDivisionsProvinces,\n    navigation: false,\n    demo: true,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'administrative-divisions-districts',\n    text: 'Districts',\n    component: AdministrativeDivisionsDistricts,\n    navigation: false,\n    demo: true,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'administrative-divisions-wards',\n    text: 'Wards',\n    component: AdministrativeDivisionsWards,\n    navigation: false,\n    demo: true,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true,\n    demo: false,\n    group: 'banks'\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false,\n    demo: true,\n    group: 'banks'\n  },\n  {\n    path: 'banks-forex-rates',\n    text: 'Banks Forex',\n    component: BanksForexRates,\n    navigation: false,\n    demo: true,\n    group: 'banks'\n  },\n  {\n    path: 'banks-forex-history',\n    text: 'Forex History',\n    component: BanksForexHistory,\n    navigation: false,\n    demo: false,\n    group: 'banks'\n  },\n  {\n    path: 'banks-forex-sync',\n    text: 'Sync Forex',\n    component: BanksForexSync,\n    navigation: false,\n    demo: true,\n    group: 'banks'\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true,\n    demo: false,\n    group: 'calendar'\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Converter',\n    component: CalendarConverter,\n    navigation: false,\n    demo: true,\n    group: 'calendar'\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false,\n    demo: false,\n    group: 'docs'\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true,\n    demo: false,\n    group: 'ethnic-minorities'\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'List',\n    component: EthnicMinoritiesList,\n    navigation: false,\n    demo: true,\n    group: 'ethnic-minorities'\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true,\n    demo: false,\n    group: 'finance'\n  },\n  {\n    path: 'finance-companies',\n    text: 'Companies',\n    component: FinanceCompanies,\n    navigation: false,\n    demo: true,\n    group: 'finance'\n  },\n  {\n    path: 'finance-history',\n    text: 'History',\n    component: FinanceHistory,\n    navigation: false,\n    demo: true,\n    group: 'finance'\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Highlights',\n    component: FinanceHighlights,\n    navigation: false,\n    demo: false,\n    group: 'finance'\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Potentials',\n    component: FinancePotentials,\n    navigation: false,\n    demo: false,\n    group: 'finance'\n  },\n  {\n    path: 'finance-profit',\n    text: 'Profit',\n    component: FinanceProfit,\n    navigation: false,\n    demo: false,\n    group: 'finance'\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true,\n    demo: false,\n    group: 'government'\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-presidents',\n    text: 'Presidents',\n    component: GovernmentPresidents,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'history',\n    text: 'History',\n    component: History,\n    navigation: true,\n    demo: false,\n    group: 'history'\n  },\n  {\n    path: 'history-dynasties',\n    text: 'Dynasties',\n    component: HistoryDynasties,\n    navigation: false,\n    demo: true,\n    group: 'history'\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true,\n    demo: false,\n    group: 'license-plates'\n  },\n  {\n    path: 'license-plates-list',\n    text: 'List',\n    component: LicensePlatesList,\n    navigation: false,\n    demo: true,\n    group: 'license-plates'\n  },\n  {\n    path: 'music',\n    text: 'Music',\n    component: Music,\n    navigation: true,\n    demo: false,\n    group: 'music'\n  },\n  {\n    path: 'music-artists',\n    text: 'Artists',\n    component: MusicArtists,\n    navigation: false,\n    demo: true,\n    group: 'music'\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true,\n    demo: false,\n    group: 'news'\n  },\n  {\n    path: 'news-feed',\n    text: 'Feed',\n    component: NewsFeed,\n    navigation: false,\n    demo: true,\n    group: 'news'\n  },\n  {\n    path: 'open-apis',\n    text: 'Open APIs',\n    component: OpenAPIs,\n    navigation: true,\n    demo: false,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-list',\n    text: 'List',\n    component: OpenAPIsList,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-ghn-provinces',\n    text: 'GHN Provinces',\n    component: GHNProvinces,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-ghn-districts',\n    text: 'GHN Districts',\n    component: GHNDistricts,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-ghn-wards',\n    text: 'GHN Wards',\n    component: GHNWards,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-vietcetera',\n    text: 'Vietcetera',\n    component: Vietcetera,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true,\n    demo: false,\n    group: 'phones'\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Prefixes',\n    component: PhonesPrefixes,\n    navigation: false,\n    demo: true,\n    group: 'phones'\n  },\n  {\n    path: 'phones-providers',\n    text: 'Providers',\n    component: PhonesProviders,\n    navigation: false,\n    demo: true,\n    group: 'phones'\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true,\n    demo: false,\n    group: 'sports'\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Clubs',\n    component: SportsClubs,\n    navigation: false,\n    demo: true,\n    group: 'sports'\n  },\n  {\n    path: 'sports-vleague',\n    text: 'VLeague',\n    component: SportsVLeague,\n    navigation: false,\n    demo: true,\n    group: 'sports'\n  },\n  {\n    path: 'usa-congress',\n    text: 'Congress',\n    component: USACongress,\n    navigation: false,\n    demo: false,\n    group: 'usa'\n  },\n  {\n    path: 'visas',\n    text: 'Visas',\n    component: Visas,\n    navigation: true,\n    demo: false,\n    group: 'sports'\n  },\n  {\n    path: 'visas-list',\n    text: 'List',\n    component: VisasList,\n    navigation: false,\n    demo: true,\n    group: 'weather'\n  },\n  {\n    path: 'weather',\n    text: 'Weather',\n    component: Weather,\n    navigation: true,\n    demo: false,\n    group: 'weather'\n  },\n  {\n    path: 'weather-air-visual',\n    text: 'Air Visual',\n    component: WeatherAirVisual,\n    navigation: false,\n    demo: true,\n    group: 'weather'\n  },\n  {\n    path: 'weather-current',\n    text: 'Current',\n    component: WeatherCurrent,\n    navigation: false,\n    demo: true,\n    group: 'weather'\n  },\n  {\n    path: 'youtube',\n    text: 'YouTube',\n    component: YouTube,\n    navigation: true,\n    demo: false,\n    group: 'youtube'\n  },\n  {\n    path: 'youtube-trending',\n    text: 'Trending',\n    component: YouTubeTrending,\n    navigation: false,\n    demo: true,\n    group: 'youtube'\n  }\n];\n\nexport default routes;\n","import { storage } from '../../services';\n\nexport const updateTheme = (theme: string) => {\n  storage.set('theme', theme);\n  return { type: theme };\n};\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Navbar, Nav, Dropdown, DropdownButton, Form } from 'react-bootstrap';\n\nimport routes from '../routers';\nimport * as themeActions from '../redux/actions/theme';\n\ninterface INavigationProps {\n  theme: string;\n  themeBorderBottom: string;\n  themePrimaryBackgroundColor: string;\n  updateTheme: (theme: string) => {};\n}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nclass Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n\n    this.updateTheme = this.updateTheme.bind(this);\n  }\n\n  async updateTheme() {\n    const { theme = 'light' } = this.props;\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    this.props.updateTheme(newTheme);\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n    const { theme, themeBorderBottom, themePrimaryBackgroundColor } = this.props;\n\n    return (\n      <Navbar\n        className={`${themePrimaryBackgroundColor} ${themeBorderBottom}`}\n        expand=\"sm\"\n        variant=\"dark\">\n        <div className=\"container-fluid p-0\">\n          <Navbar.Brand href=\"#\" className=\"text-white\">\n            VIETNAM\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar-navs\"></Navbar.Toggle>\n          <Navbar.Collapse id=\"navbar-navs\">\n            <Nav className=\"mr-auto\">\n              <Nav.Item className=\"mr-3\">\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n              <Nav.Item>\n                <a\n                  href=\"https://www.npmjs.com/package/vnapis\"\n                  className=\"text-white text-uppercase\"\n                  rel=\"noreferrer\"\n                  target=\"_blank\">\n                  npm\n                </a>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Form inline>\n                <Dropdown className=\"mr-3\">\n                  <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                    {routes\n                      .filter(route => route.navigation)\n                      .map((route, index) => {\n                        const { path: pathname, text } = route;\n                        return (\n                          <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                            {text}\n                          </Dropdown.Item>\n                        );\n                      })}\n                  </DropdownButton>\n                </Dropdown>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"custom-switch\"\n                  className=\"text-white cursor-pointer\"\n                  checked={theme !== 'light'}\n                  onChange={() => this.updateTheme()}\n                  label={theme.toUpperCase()}\n                />\n              </Form>\n            </Nav>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const theme: string = _.get(state, 'theme.theme', '');\n  const themeBorderBottom: string = _.get(state, 'theme.borderBottom', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return { theme, themeBorderBottom, themePrimaryBackgroundColor };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  updateTheme: (theme: string) => dispatch(themeActions.updateTheme(theme))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Nav } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavPillsProps {\n  group: string;\n  themeLink: string;\n}\n\ninterface INavPillsState {}\n\nclass NavPills extends Component<INavPillsProps, INavPillsState> {\n  render() {\n    const { group = [], themeLink = '' } = this.props;\n    const items = routes.filter((route: any) => route.demo && route.group === group);\n    const total: number = items.length;\n    return (\n      <Nav className=\"justify-content-center\">\n        {items.map((item: any, index: number) => {\n          const { path: pathname = '', text = '' } = item;\n          const marginRight: string = index + 1 === total ? '' : 'mr-3';\n          return (\n            <Nav.Item className={`${marginRight} mb-3`} key={index}>\n              <Nav.Link className={`${themeLink} border rounded`} as={Link} to={{ pathname }}>\n                {text}\n              </Nav.Link>\n            </Nav.Item>\n          );\n        })}\n      </Nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeLink = _.get(state, 'theme.link', '');\n  return { themeLink };\n};\n\nexport default connect(mapStateToProps)(NavPills);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Doc from './Doc';\nimport { endpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n  themeTextColor: string;\n}\n\ninterface ISmallDocState {\n  endpoints: any;\n}\n\nclass SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const { themeTextColor } = this.props;\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small className={`${themeTextColor}`}>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header, themeTextColor } = this.props;\n    const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n    return (\n      <div>\n        <h6>\n          <b className={`${themeTextColor}`}>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"content-height overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"content-height overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeTextColor };\n};\n\nexport default connect(mapStateToProps)(SmallDoc);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport { Footer, Navigation } from './components';\nimport routes from './routers';\nimport { storage } from './services';\nimport * as themeActions from './redux/actions/theme';\n\ninterface IAppProps {\n  themeSecondaryBackgroundColor: string;\n  updateTheme: (theme: string) => {};\n}\n\nclass App extends Component<IAppProps> {\n  componentDidMount() {\n    const theme = storage.get('theme');\n    if (theme) {\n      this.props.updateTheme(theme);\n    }\n  }\n\n  render() {\n    const { themeSecondaryBackgroundColor } = this.props;\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <main className={`${themeSecondaryBackgroundColor} overflow-auto pt-3 pb-3`}>\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route exact key={index} path={`/${path}`} component={component}></Route>;\n            })}\n          </main>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  return { themeSecondaryBackgroundColor };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  updateTheme: (theme: string) => dispatch(themeActions.updateTheme(theme))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const LIGHT_THEME: string = 'light';\nconst DARK_THEME: string = 'dark';\n\nconst LIGHT_TEXT_COLOR: string = 'text-dark';\nconst DARK_TEXT_COLOR: string = 'text-light';\n\nconst LIGHT_MUTED_TEXT_COLOR: string = 'text-muted';\nconst DARK_MUTED_TEXT_COLOR: string = 'text-light';\n\nconst LIGHT_BORDER: string = 'border';\nconst DARK_BORDER: string = 'border border-white';\n\nconst LIGHT_BORDER_TOP: string = 'border-top border-danger';\nconst DARK_BORDER_TOP: string = 'border-top border-white';\n\nconst LIGHT_BORDER_BOTTOM: string = 'border-bottom border-danger';\nconst DARK_BORDER_BOTTOM: string = 'border-bottom border-white';\n\nconst LIGHT_SPINNER_VARIANT: string = 'danger';\nconst DARK_SPINNER_VARIANT: string = 'light';\n\nconst LIGHT_REVERT_SPINNER_VARIANT: string = 'light';\nconst DARK_REVERT_SPINNER_VARIANT: string = 'dark';\n\nconst LIGHT_BUTTON_VARIANT: string = 'danger';\nconst DARK_BUTTON_VARIANT: string = 'light';\n\nconst LIGHT_PRIMARY_BACKGROUND_COLOR: string = 'bg-danger';\nconst DARK_PRIMARY_BACKGROUND_COLOR: string = 'bg-black';\n\nconst LIGHT_SECONDARY_BACKGROUND_COLOR: string = 'bg-white';\nconst DARK_SECONDARY_BACKGROUND_COLOR: string = 'bg-black';\n\nconst LIGHT_LIST_ITEM_BORDER_BOTTOM: string = 'border-bottom';\nconst DARK_LIST_ITEM_BORDER_BOTTOM: string = 'border-bottom border-white';\n\nconst LIGHT_INPUT: string = '';\nconst DARK_INPUT: string = 'bg-black text-white';\n\nconst LIGHT_BADGE: string = 'danger';\nconst DARK_BADGE: string = 'dark';\n\nconst LIGHT_LINK: string = 'text-primary';\nconst DARK_LINK: string = 'text-white';\n\ninterface IThemeState {\n  theme: string;\n  textColor: string;\n  mutedTextColor: string;\n  spinnerVariant: string;\n  revertSpinnerVariant: string;\n  buttonVariant: string;\n  border: string;\n  borderTop: string;\n  borderBottom: string;\n  primaryBackgroundColor: string;\n  secondaryBackgroundColor: string;\n  listItemBorderBottom: string;\n  input: string;\n  badge: string;\n  link: string;\n}\n\nconst initialState: IThemeState = {\n  theme: LIGHT_THEME,\n  textColor: LIGHT_TEXT_COLOR,\n  mutedTextColor: LIGHT_MUTED_TEXT_COLOR,\n  spinnerVariant: LIGHT_SPINNER_VARIANT,\n  revertSpinnerVariant: LIGHT_REVERT_SPINNER_VARIANT,\n  buttonVariant: LIGHT_BUTTON_VARIANT,\n  border: LIGHT_BORDER,\n  borderTop: LIGHT_BORDER_TOP,\n  borderBottom: LIGHT_BORDER_BOTTOM,\n  primaryBackgroundColor: LIGHT_PRIMARY_BACKGROUND_COLOR,\n  secondaryBackgroundColor: LIGHT_SECONDARY_BACKGROUND_COLOR,\n  listItemBorderBottom: LIGHT_LIST_ITEM_BORDER_BOTTOM,\n  input: LIGHT_INPUT,\n  badge: LIGHT_BADGE,\n  link: LIGHT_LINK\n};\n\nconst themeReducer = (state: IThemeState = initialState, action: any) => {\n  switch (action.type) {\n    case LIGHT_THEME:\n      return {\n        ...state,\n        theme: LIGHT_THEME,\n        textColor: LIGHT_TEXT_COLOR,\n        mutedTextColor: LIGHT_MUTED_TEXT_COLOR,\n        spinnerVariant: LIGHT_SPINNER_VARIANT,\n        revertSpinnerVariant: LIGHT_REVERT_SPINNER_VARIANT,\n        buttonVariant: LIGHT_BUTTON_VARIANT,\n        border: LIGHT_BORDER,\n        borderTop: LIGHT_BORDER_TOP,\n        borderBottom: LIGHT_BORDER_BOTTOM,\n        primaryBackgroundColor: LIGHT_PRIMARY_BACKGROUND_COLOR,\n        secondaryBackgroundColor: LIGHT_SECONDARY_BACKGROUND_COLOR,\n        listItemBorderBottom: LIGHT_LIST_ITEM_BORDER_BOTTOM,\n        input: LIGHT_INPUT,\n        badge: LIGHT_BADGE,\n        link: LIGHT_LINK\n      };\n    case DARK_THEME:\n      return {\n        ...state,\n        theme: DARK_THEME,\n        textColor: DARK_TEXT_COLOR,\n        mutedTextColor: DARK_MUTED_TEXT_COLOR,\n        spinnerVariant: DARK_SPINNER_VARIANT,\n        revertSpinnerVariant: DARK_REVERT_SPINNER_VARIANT,\n        buttonVariant: DARK_BUTTON_VARIANT,\n        border: DARK_BORDER,\n        borderTop: DARK_BORDER_TOP,\n        borderBottom: DARK_BORDER_BOTTOM,\n        primaryBackgroundColor: DARK_PRIMARY_BACKGROUND_COLOR,\n        secondaryBackgroundColor: DARK_SECONDARY_BACKGROUND_COLOR,\n        listItemBorderBottom: DARK_LIST_ITEM_BORDER_BOTTOM,\n        input: DARK_INPUT,\n        badge: DARK_BADGE,\n        link: DARK_LINK\n      };\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n","import { combineReducers } from 'redux';\n\nimport themeReducer from './theme';\n\nconst reducers = combineReducers({ theme: themeReducer });\n\nexport default reducers;\n","import { createStore, Store } from 'redux';\n\nimport reducers from './reducers';\n\nconst store: Store = createStore(reducers);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './App';\nimport store from './redux/store';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}