{"version":3,"sources":["configs/urls.ts","configs/administrative-divisions.ts","configs/banks.ts","configs/calendar.ts","configs/ethnic-minorities.ts","configs/finance.ts","configs/government.ts","configs/history.ts","configs/license-plates.ts","configs/music.ts","configs/news.ts","configs/open-apis.ts","configs/phones.ts","configs/sports.ts","configs/weather.ts","configs/youtube.ts","configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/storage.ts","services/index.ts","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/demo/history/Dynasties.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/music/Artists.tsx","pages/demo/open-apis/List.tsx","pages/demo/open-apis/ghn/Provinces.tsx","pages/demo/open-apis/ghn/Districts.tsx","pages/demo/open-apis/ghn/Wards.tsx","pages/demo/open-apis/Vietcetera.tsx","pages/demo/weather/Current.tsx","pages/docs/AdministrativeDivisions.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/History.tsx","pages/docs/LicensePlates.tsx","pages/docs/Music.tsx","pages/docs/News.tsx","pages/docs/OpenAPIs.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Weather.tsx","pages/docs/YouTube.tsx","pages/demo/administrative-divisions/Districts.tsx","pages/demo/administrative-divisions/PostalCodes.tsx","pages/demo/administrative-divisions/Provinces.tsx","pages/demo/administrative-divisions/Wards.tsx","pages/demo/banks/List.tsx","pages/demo/banks/forex/Rates.tsx","pages/demo/banks/forex/History.tsx","pages/demo/banks/forex/Sync.tsx","pages/demo/calendar/Converter.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/news/Trends.tsx","pages/demo/news/Feed.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/sports/Clubs.tsx","pages/demo/sports/VLeague.tsx","pages/demo/youtube/Trending.tsx","routers/index.ts","redux/actions/theme.ts","components/Navigation.tsx","components/SmallDoc.tsx","App.tsx","redux/reducers/theme.ts","redux/reducers/index.ts","redux/store.ts","serviceWorkerRegistration.js","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","administrativeDivisions","getPostalCodes","id","name","public","method","path","url","demo","request","headers","key","value","query","type","required","description","body","response","200","schema","example","code","province","province_id","400","message","getProvinces","capital","level","level_en","macro_region","macro_region_en","region","region_en","getDistricts","getWards","ward","district","getTotalWards","total","banks","getBanks","name_en","name_short","type_en","getForexBanks","getForexRates","currencies","data","syncForexRates","status","calendar","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","ethnicMinorities","getEthnicMinorities","finance","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHistory","history","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","calculateProfit","profit","government","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","percentage","getMinistries","short","getMinisters","getDynasties","temple_name","birth_name","birth","death","start_year","end_year","dynasty","licensePlates","getLicensePlates","license","definition","music","getMusicArtists","news","getTrends","hour","categories","getSources","sources","getCategories","getArticles","source","sourceURL","publishedDate","openAPIs","getOpenAPIs","type_id","npm","getGHNProvinces","getGHNDistricts","district_id","support_type","getGHNWards","getVietceteraArticles","publishDate","phones","getPhonesPrefixes","prefix","provider","provider_id","getPhonesProviders","prefixes","sports","getSportsClubs","sport","sport_en","competition","city","getVLeague","matches","leagueTable","weather","getCurrentWeather","coord","base","main","visibility","wind","clouds","dt","sys","timezone","cod","youtube","getTrending","channelId","publishedAt","channelTitle","tags","categoryId","getVideoCategories","assignable","periods","label","months","endpoints","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","timeout","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","category","articles","buy","sell","volume","from","to","currency","skip","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","Storage","localStorage","setItem","getItem","apis","helper","storage","API","props","theme","textColor","api","className","onClick","copyToClipboard","Component","connect","state","CURL","bind","buildDataRaw","trim","dataRaw","header","index","lastFlag","Table","loading","caption","rows","rowConfigs","emptyRowsText","rowIndexEnabled","spinnerVariant","borderColor","bgColor","Spinner","animation","variant","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","border","getFullYear","href","target","rel","EthnicMinoritiesList","filterEthnicMinorities","event","setState","ethnicMinority","typeFlag","toLowerCase","typeEnFlag","Form","Control","placeholder","onChange","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","Group","as","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","HistoryDynasties","dynasties","getHistoryDynasties","Home","docs","sort","a","b","filterAPIs","renderTable","updateQuery","packages","_package","borderBottom","ListGroup","Item","Label","htmlFor","LicensePlatesList","filterLicensePlates","licensePlate","MusicArtists","artists","OpenAPIsList","technologies","filterTechnologies","technology","nameFlag","Provinces","provinces","Districts","districts","Wards","wards","Vietcetera","option","article","Card","Title","Subtitle","Text","WeatherCurrent","getWeatherCurrent","temp","feels_like","temp_min","temp_max","Body","Maps","Banks","Calendar","Docs","renderSidebar","scrollIntoView","element","document","getElementById","behavior","colors","get","post","color","Accordion","capitalize","Toggle","Button","Collapse","groups","EthnicMinorities","Finance","Government","History","LicensePlates","Music","News","OpenAPIs","Phones","Sports","Weather","YouTube","MapsDistricts","updateProvince","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","active","renderPagination","goToPage","updateActive","page","Math","floor","final","items","push","Pagination","size","Prev","Next","BanksList","BanksForexRates","sortBy","sortDir","getBanksForexRates","renderForm","updateCurrency","by","dir","bank","aItem","buyCash","bItem","sellCash","buyTransfer","sellTransfer","time","buyCashText","buyTransferText","sellCashText","sellTransferText","datasetsOptions","fill","lineTension","backgroundColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","processRates","find","rates","rate","labels","minute","datasets","transfer","buyData","transferData","sellData","lines","deepClone","assign","BanksForexSync","syncing","syncAll","addToSyncing","removeFromSyncing","log","indexOf","buttonVariant","syncingFlag","align","disabled","CalendarConverter","loadingText","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","split","controlId","pattern","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","processPeriod","highlight","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","timestamp","concat","array","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","NewsTrends","getGoogleTrends","trend","Badge","NewsFeed","updateCategory","updateSource","renderArticles","startIndex","endIndex","substring","dangerouslySetInnerHTML","__html","Trends","PhonesPrefixes","PhonesProviders","providers","_provider","SportsClubs","clubs","SportsVLeague","YouTubeTrending","mapCategories","trending","getYouTubeTrending","getYouTubeVideoCategories","updateVideoCategory","renderCards","videoCategory","videos","video","channelUrl","routes","component","navigation","AdministrativeDivisions","AdministrativeDivisionsPostalCodes","AdministrativeDivisionsProvinces","AdministrativeDivisionsDistricts","AdministrativeDivisionsWards","BanksForexHistory","GHNProvinces","GHNDistricts","GHNWards","updateTheme","set","Navigation","Navbar","expand","Brand","aria-controls","Nav","pathname","inline","Dropdown","DropdownButton","menuAlign","route","Link","Check","checked","dispatch","themeActions","SmallDoc","App","basename","exact","LIGHT_THEME","DARK_THEME","themeReducer","action","reducers","combineReducers","store","createStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f7e0f40d.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n","import { baseAPI } from './urls';\n\nconst administrativeDivisions = {\n  getPostalCodes: {\n    id: 'getPostalCodes',\n    name: 'Get Postal Codes',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/postal-codes',\n    url: `${baseAPI}/administrative-divisions/postal-codes`,\n    demo: 'administrative-divisions-postal-codes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'code', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'province_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            code: '<string>',\n            province: '<string>',\n            province_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getProvinces: {\n    id: 'getProvinces',\n    name: 'Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/provinces',\n    url: `${baseAPI}/administrative-divisions/provinces`,\n    demo: 'administrative-divisions-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'level_en', type: 'string', required: false, description: '' },\n        { name: 'macro_region_en', type: 'string', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'capital', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' },\n          { name: 'macro_region', type: 'string', description: '' },\n          { name: 'macro_region_en', type: 'string', description: '' },\n          { name: 'region', type: 'string', description: '' },\n          { name: 'region_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            capital: '<string>',\n            level: '<string>',\n            level_en: '<string>',\n            macro_region: '<string>',\n            macro_region_en: '<string>',\n            region: '<string>',\n            region_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getDistricts: {\n    id: 'getDistricts',\n    name: 'Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/districts',\n    url: `${baseAPI}/administrative-divisions/districts`,\n    demo: 'administrative-divisions-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'province_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            level: '<string>',\n            level_en: '<string>',\n            province: '<string>',\n            province_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getWards: {\n    id: 'getWards',\n    name: 'Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/wards',\n    url: `${baseAPI}/administrative-divisions/wards`,\n    demo: 'administrative-divisions-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'skip', type: 'number', required: false, description: '' },\n        { name: 'limit', type: 'number', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'ward', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            ward: '<string>',\n            district: '<string>',\n            province: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getTotalWards: {\n    id: 'getTotalWards',\n    name: 'Get Total Wards',\n    public: false,\n    method: 'GET',\n    path: '/administrative-divisions/wards/total',\n    url: `${baseAPI}/administrative-divisions/wards/total`,\n    demo: 'administrative-divisions-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [{ name: 'total', type: 'number', description: '' }],\n        example: { total: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default administrativeDivisions;\n","import { baseAPI } from './urls';\n\nconst banks = {\n  getBanks: {\n    id: 'getBanks',\n    name: 'Get Banks',\n    public: true,\n    path: '/banks',\n    url: `${baseAPI}/banks`,\n    demo: 'banks-list',\n    method: 'GET',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'code', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'name_en', type: 'string', description: '' },\n          { name: 'name_short', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_en', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            code: '<string>',\n            name: '<string>',\n            name_en: '<string>',\n            name_short: '<string>',\n            type: '<string>',\n            type_en: '<string>',\n            url: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getForexBanks: {\n    id: 'getForexBanks',\n    name: 'Get Forex Banks',\n    public: true,\n    path: '/banks/forex/banks',\n    url: `${baseAPI}/banks/forex/banks`,\n    demo: 'banks-forex-sync',\n    method: 'GET',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'banks', type: 'Array<string>', description: '' }\n        ],\n        example: [{ total: '<number>', banks: '<Array<string>>' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getForexRates: {\n    id: 'getForexRates',\n    name: 'Get Forex Rates',\n    public: true,\n    method: 'GET',\n    path: '/banks/forex/rates',\n    url: `${baseAPI}/banks/forex/rates`,\n    demo: 'banks-forex-rates',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'currencies', type: 'Array<string>', description: '' },\n          { name: 'data', type: 'Array<Rates>', description: '' }\n        ],\n        example: {\n          currencies: '<Array<string>>',\n          data: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  syncForexRates: {\n    id: 'syncForexRates',\n    name: 'Sync Forex Rates',\n    public: true,\n    method: 'POST',\n    path: '/banks/forex/sync',\n    url: `${baseAPI}/banks/forex/sync`,\n    demo: 'banks-forex-sync',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'id', required: true, type: 'string', description: '' }]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'status', type: 'string', description: '' }],\n        example: { status: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default banks;\n","import { baseAPI } from './urls';\n\nconst calendar = {\n  convertLunarToSolar: {\n    id: 'convertLunarToSolar',\n    name: 'Convert Lunar Date to Solar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar2solar',\n    url: `${baseAPI}/calendar/lunar2solar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  convertSolarToLunar: {\n    id: 'convertSolarToLunar',\n    name: 'Convert Solar Date to Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/solar2lunar',\n    url: `${baseAPI}/calendar/solar2lunar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCanChi: {\n    id: 'getCanChi',\n    name: 'Get Can Chi of Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar/can-chi',\n    url: `${baseAPI}/calendar/lunar/can-chi`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'canChi', type: 'string', description: '' }],\n        example: { canChi: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default calendar;\n","import { baseAPI } from './urls';\n\nconst ethnicMinorities = {\n  getEthnicMinorities: {\n    id: 'getEthnicMinorities',\n    name: 'Get Ethnic Minorities',\n    public: true,\n    method: 'GET',\n    path: '/ethnic-minorities',\n    url: `${baseAPI}/ethnic-minorities`,\n    demo: 'ethnic-minorities-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_en', type: 'string', description: '' }\n        ],\n        example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default ethnicMinorities;\n","import { baseAPI } from './urls';\n\nconst finance = {\n  getStockCompanies: {\n    id: 'getStockCompanies',\n    name: 'Get Listed Companies',\n    public: true,\n    method: 'GET',\n    path: '/finance/companies',\n    url: `${baseAPI}/finance/companies`,\n    demo: 'finance-companies',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'market', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'supersector', type: 'string', description: '' },\n          { name: 'sector', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'listingDate', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            market: '<string>',\n            group: '<string>',\n            symbol: '<string>',\n            name: '<string>',\n            industry: '<string>',\n            supersector: '<string>',\n            sector: '<string>',\n            subsector: '<string>',\n            listingDate: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHistory: {\n    id: 'getStockHistory',\n    name: 'Get Stock History',\n    public: true,\n    method: 'GET',\n    path: '/finance/history',\n    url: `${baseAPI}/finance/history`,\n    demo: 'finance-history',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'symbol', type: 'string', required: true, description: '' },\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'history', type: 'Array<Date>', description: '' }\n        ],\n        example: {\n          symbol: '<string>',\n          name: '<string>',\n          group: '<string>',\n          industry: '<string>',\n          subsector: '<string>',\n          history: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHighlights: {\n    id: 'getStockHighlights',\n    name: 'Get Stock Highlights',\n    public: false,\n    method: 'POST',\n    path: '/finance/highlights',\n    url: `${baseAPI}/finance/highlights`,\n    demo: 'finance-highlights',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockPotentials: {\n    id: 'getStockPotentials',\n    name: 'Get Stock Potentials',\n    public: false,\n    method: 'POST',\n    path: '/finance/potentials',\n    url: `${baseAPI}/finance/potentials`,\n    demo: 'finance-potentials',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  calculateProfit: {\n    id: 'calculateProfit',\n    name: 'Calculate Profit',\n    public: false,\n    method: 'POST',\n    path: '/finance/profit',\n    url: `${baseAPI}/finance/profit`,\n    demo: 'finance-profit',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'buy', type: 'number', required: true, description: '' },\n        { name: 'sell', type: 'number', required: true, description: '' },\n        { name: 'volume', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'profit', type: 'number', description: '' }],\n        example: { profit: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default finance;\n","import { baseAPI } from './urls';\n\nconst government = {\n  getGeneralSecretaries: {\n    id: 'getGeneralSecretaries',\n    name: 'Get General Secretaries',\n    public: true,\n    method: 'GET',\n    path: '/government/general-secretaries',\n    url: `${baseAPI}/government/general-secretaries`,\n    demo: 'government-general-secretaries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'string', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPresidents: {\n    id: 'getPresidents',\n    name: 'Get Presidents',\n    public: true,\n    method: 'GET',\n    path: '/government/presidents',\n    url: `${baseAPI}/government/presidents`,\n    demo: 'government-presidents',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPrimeMinisters: {\n    id: 'getPrimeMinisters',\n    name: 'Get Prime Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/prime-ministers',\n    url: `${baseAPI}/government/prime-ministers`,\n    demo: 'government-prime-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyChairs: {\n    id: 'getNationalAssemblyChairs',\n    name: 'Get National Assembly Chairs',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/chairs',\n    url: `${baseAPI}/government/national-assembly/chairs`,\n    demo: 'government-national-assembly-chairs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyMembers: {\n    id: 'getNationalAssemblyMembers',\n    name: 'Get National Assembly Members',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/members',\n    url: `${baseAPI}/government/national-assembly/members`,\n    demo: 'government-national-assembly-members',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'no', type: 'number', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'no', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'date_of_birth', type: 'string', description: '' },\n          { name: 'city_of_birth', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'degree', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'percentage', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            no: '<number>',\n            name: '<string>',\n            date_of_birth: '<string>',\n            city_of_birth: '<string>',\n            gender: '<string>',\n            degree: '<string>',\n            province: '<string>',\n            district: '<string>',\n            percentage: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinistries: {\n    id: 'getMinistries',\n    name: 'Get Ministries',\n    public: true,\n    method: 'GET',\n    path: '/government/ministries',\n    url: `${baseAPI}/government/ministries`,\n    demo: 'government-ministries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'name_en', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            short: '<string>',\n            name: '<string>',\n            name_en: '<string>',\n            level: '<string>',\n            level_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinisters: {\n    id: 'getMinisters',\n    name: 'Get Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/ministers',\n    url: `${baseAPI}/government/ministers`,\n    demo: 'government-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default government;\n","import { baseAPI } from './urls';\n\nconst history = {\n  getDynasties: {\n    id: 'getDynasties',\n    name: 'Get Dynasties',\n    public: true,\n    method: 'GET',\n    path: '/history/dynasties',\n    url: `${baseAPI}/history/dynasties`,\n    demo: 'history-dynasties',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'temple_name', type: 'string', description: '' },\n          { name: 'birth_name', type: 'string', description: '' },\n          { name: 'birth', type: 'number', description: '' },\n          { name: 'death', type: 'number', description: '' },\n          { name: 'start_year', type: 'number', description: '' },\n          { name: 'end_year', type: 'number', description: '' },\n          { name: 'dynasty', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            temple_name: '<string>',\n            birth_name: '<string>',\n            birth: '<number>',\n            death: '<number>',\n            start_year: '<number>',\n            end_year: '<number>',\n            dynasty: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default history;\n","import { baseAPI } from './urls';\n\nconst licensePlates = {\n  getLicensePlates: {\n    id: 'getLicensePlates',\n    name: 'Get License Plates',\n    public: true,\n    method: 'GET',\n    path: '/license-plates',\n    url: `${baseAPI}/license-plates`,\n    demo: 'license-plates-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'license', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'license', type: 'string', description: '' },\n          { name: 'definition', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' }\n        ],\n        example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default licensePlates;\n","import { baseAPI } from './urls';\n\nconst music = {\n  getMusicArtists: {\n    id: 'getMusicArtists',\n    name: 'Get Music Artists',\n    public: true,\n    method: 'GET',\n    path: '/music/artists',\n    url: `${baseAPI}/music/artists`,\n    demo: 'music-artists',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [{ name: 'name', type: 'string', description: '' }],\n        example: [\n          {\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default music;\n","import { baseAPI } from './urls';\n\nconst news = {\n  getTrends: {\n    id: 'getTrends',\n    name: 'Get (Google) Trends',\n    public: true,\n    method: 'GET',\n    path: '/news/trends',\n    url: `${baseAPI}/news/trends`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' },\n          { name: 'hour', type: 'number', description: '' },\n          { name: 'trends', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          year: '<number>',\n          month: '<number>',\n          date: '<number>',\n          hour: '<number>',\n          categories: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getSources: {\n    id: 'getSources',\n    name: 'Get Sources',\n    public: true,\n    method: 'GET',\n    path: '/news/sources',\n    url: `${baseAPI}/news/sources`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'sources', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          total: '<number>',\n          sources: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCategories: {\n    id: 'getCategories',\n    name: 'Get Categories',\n    public: true,\n    method: 'GET',\n    path: '/news/categories',\n    url: `${baseAPI}/news/categories`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'source', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'categories', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          total: '<number>',\n          categories: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getArticles: {\n    id: 'getArticles',\n    name: 'Get Articles',\n    public: true,\n    method: 'GET',\n    path: '/news/articles',\n    url: `${baseAPI}/news/articles`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'source', type: 'string', required: false, description: '' },\n        { name: 'category', type: 'string', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'source', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' },\n          { name: 'publishedDate', type: 'string', description: '' },\n          { name: 'sourceURL', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            source: '<string>',\n            sourceURL: '<string>',\n            description: '<string>',\n            publishedDate: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default news;\n","import { baseAPI } from './urls';\n\nconst openAPIs = {\n  getOpenAPIs: {\n    id: 'getOpenAPIs',\n    name: 'Get Open APIs',\n    public: true,\n    method: 'GET',\n    path: '/open-apis',\n    url: `${baseAPI}/open-apis`,\n    demo: 'open-apis-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_id', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'npm', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            type: '<string>',\n            type_id: '<string>',\n            url: '<string>',\n            npm: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNProvinces: {\n    id: 'getGHNProvinces',\n    name: 'GHN - Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/provinces',\n    url: `${baseAPI}/open-apis/giaohangnhanh/provinces`,\n    demo: 'open-apis-ghn-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNDistricts: {\n    id: 'getGHNDistricts',\n    name: 'GHN - Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/districts',\n    url: `${baseAPI}/open-apis/giaohangnhanh/districts`,\n    demo: 'open-apis-ghn-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' },\n          { name: 'type', type: 'number', description: '' },\n          { name: 'support_type', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>',\n            type: '<number>',\n            support_type: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNWards: {\n    id: 'getGHNWards',\n    name: 'GHN - Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/wards',\n    url: `${baseAPI}/open-apis/giaohangnhanh/wards`,\n    demo: 'open-apis-ghn-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'district_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVietceteraArticles: {\n    id: 'getVietceteraArticles',\n    name: 'Get Vietcetera Articles',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/vietcetera',\n    url: `${baseAPI}/open-apis/vietcetera`,\n    demo: 'open-apis-vietcetera',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'publishDate', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            publishDate: '<string>',\n            description: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default openAPIs;\n","import { IPhonesEndpoints } from './interfaces';\nimport { baseAPI } from './urls';\n\nconst phones: IPhonesEndpoints = {\n  getPhonesPrefixes: {\n    id: 'getPhonesPrefixes',\n    name: 'Get Phone Prefixes',\n    public: true,\n    method: 'GET',\n    path: '/phones/prefixes',\n    url: `${baseAPI}/phones/prefixes`,\n    demo: 'phones-prefixes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'prefix', type: 'string', description: '' },\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'provider_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            prefix: '<string>',\n            provider: '<string>',\n            provider_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPhonesProviders: {\n    id: 'getPhonesProviders',\n    name: 'Get Phone Providers',\n    public: true,\n    method: 'GET',\n    path: '/phones/providers',\n    url: `${baseAPI}/phones/providers`,\n    demo: 'phones-providers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'prefixes', type: 'Array<string>', description: '' }\n        ],\n        example: [\n          {\n            provider: '<string>',\n            prefixes: '<Array<string>>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default phones;\n","import { baseAPI } from './urls';\nimport { ISportsEndpoints } from './interfaces';\n\nconst sports: ISportsEndpoints = {\n  getSportsClubs: {\n    id: 'getSportsClubs',\n    name: 'Get Sports Clubs',\n    public: true,\n    method: 'GET',\n    path: '/sports/clubs',\n    url: `${baseAPI}/sports/clubs`,\n    demo: 'sports-clubs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'sport', type: 'string', description: '' },\n          { name: 'sport_en', type: 'string', description: '' },\n          { name: 'competition', type: 'string', description: '' },\n          { name: 'city', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            sport: '<string>',\n            sport_en: '<string>',\n            competition: '<string>',\n            city: '<string>',\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVLeague: {\n    id: 'getVLeague',\n    name: 'Get VLeague',\n    public: true,\n    method: 'GET',\n    path: '/sports/vleague',\n    url: `${baseAPI}/sports/vleague`,\n    demo: 'sports-vleague',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'matches', type: 'Array<any>', description: '' },\n          { name: 'leagueTable', type: 'Array<any>', description: '' }\n        ],\n        example: {\n          matches: '<Array<any>>',\n          leagueTable: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default sports;\n","import { baseAPI } from './urls';\n\nconst weather = {\n  getCurrentWeather: {\n    id: 'getCurrentWeather',\n    name: 'Get Current Weather',\n    public: true,\n    method: 'GET',\n    path: '/weather',\n    url: `${baseAPI}/weather`,\n    demo: 'weather-current',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'city', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'coord', type: 'object', description: '' },\n          { name: 'weather', type: 'Array<object>', description: '' },\n          { name: 'base', type: 'string', description: '' },\n          { name: 'main', type: 'object', description: '' },\n          { name: 'visibility', type: 'number', description: '' },\n          { name: 'wind', type: 'object', description: '' },\n          { name: 'clouds', type: 'object', description: '' },\n          { name: 'dt', type: 'number', description: '' },\n          { name: 'sys', type: 'number', description: '' },\n          { name: 'timezone', type: 'number', description: '' },\n          { name: 'id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'cod', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            coord: '<object>',\n            weather: '<Array<object>>',\n            base: '<string>',\n            main: '<object>',\n            visibility: '<number>',\n            wind: '<object>',\n            clouds: '<object>',\n            dt: '<number>',\n            sys: '<number>',\n            timezone: '<number>',\n            id: '<number>',\n            name: '<string>',\n            cod: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default weather;\n","import { baseAPI } from './urls';\nimport { IYouTubeEndpoints } from './interfaces';\n\nconst youtube: IYouTubeEndpoints = {\n  getTrending: {\n    id: 'getTrending',\n    name: 'Get Trending',\n    public: true,\n    method: 'GET',\n    path: '/youtube/trending',\n    url: `${baseAPI}/youtube/trending`,\n    demo: 'youtube-trending',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'categoryId', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'channelId', type: 'string', description: '' },\n          { name: 'title', type: 'string', description: '' },\n          { name: 'publishedAt', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' },\n          { name: 'channelTitle', type: 'string', description: '' },\n          { name: 'tags', type: 'Array<string>', description: '' },\n          { name: 'categoryId', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            channelId: '<string>',\n            title: '<string>',\n            publishedAt: '<string>',\n            description: '<string>',\n            channelTitle: '<string>',\n            tags: '<Array<string>>',\n            categoryId: '<string>',\n            url: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVideoCategories: {\n    id: 'getVideoCategories',\n    name: 'Get Video Categories',\n    public: true,\n    method: 'GET',\n    path: '/youtube/video-categories',\n    url: `${baseAPI}/youtube/video-categories`,\n    demo: 'youtube-trending',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'title', type: 'string', description: '' },\n          { name: 'assignable', type: 'boolean', description: '' },\n          { name: 'channelId', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            title: '<string>',\n            assignable: '<string>',\n            channelId: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default youtube;\n","import { baseAPI, baseGraphQL } from './urls';\nimport { IPeriod, IMonth, IEndpoints } from './interfaces';\n\nimport administrativeDivisions from './administrative-divisions';\nimport banks from './banks';\nimport calendar from './calendar';\nimport ethnicMinorities from './ethnic-minorities';\nimport finance from './finance';\nimport government from './government';\nimport history from './history';\nimport licensePlates from './license-plates';\nimport music from './music';\nimport news from './news';\nimport openAPIs from './open-apis';\nimport phones from './phones';\nimport sports from './sports';\nimport weather from './weather';\nimport youtube from './youtube';\n\nexport { baseAPI, baseGraphQL };\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'administrativeDivisions'\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'music'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport const endpoints: IEndpoints = {\n  administrativeDivisions,\n  banks,\n  calendar,\n  ethnicMinorities,\n  finance,\n  government,\n  history,\n  licensePlates,\n  music,\n  news,\n  openAPIs,\n  phones,\n  sports,\n  weather,\n  youtube\n};\n","import { endpoints } from '../configs';\nimport { IEndpoint } from '../configs/interfaces';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}): string {\n    const keys: Array<string> = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map((key: string) => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString: string = this.buildQueryString(query);\n    const input: string = queryString ? `${url}?${queryString}` : url;\n    const timeout: number = 1000 * 60 * 6;\n    const headers = { 'Content-Type': 'application/json' };\n    const options =\n      method === 'GET'\n        ? { method, timeout, headers }\n        : { method, timeout, headers, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res: any = {}) => {\n          resolve(res);\n        })\n        .catch((error: Error) => {\n          console.error('fetch', error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    const { sources = [] } = await this.fetch(endpoint);\n    return sources;\n  }\n\n  public async getCategories(source: string): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint, { query: { source }, body: {} });\n    return categories;\n  }\n\n  public async getArticles(source: string, category: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number): Promise<number> {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: {}, query: { symbol, from, to } });\n  }\n\n  public async getBanks(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.banks.getBanks;\n    return await this.fetch(endpoint);\n  }\n\n  public async getBanksForexRates(): Promise<any> {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks(): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const { banks = [] } = (await this.fetch(endpoint)) || {};\n    return banks;\n  }\n\n  public async syncForexRates(id: string): Promise<string> {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = 'ERROR' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getPostalCodes(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProvinces(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDistricts(province_id: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getWards(skip: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getWards;\n    return await this.fetch(endpoint, { query: { skip }, body: {} });\n  }\n\n  public async getTotalWards(): Promise<number> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getTotalWards;\n    const { total = 0 } = await this.fetch(endpoint);\n    return total;\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getVLeague(): Promise<any> {\n    const endpoint: IEndpoint = endpoints.sports.getVLeague;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getOpenAPIs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getOpenAPIs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesProviders(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesPrefixes(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number): Promise<any> {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number): Promise<any> {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number): Promise<string> {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n\n  public async getGHNProvinces(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNDistricts(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNWards(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMusicArtists(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.music.getMusicArtists;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDynasties(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.history.getDynasties;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCurrentWeather(city: string): Promise<any> {\n    const endpoint: IEndpoint = endpoints.weather.getCurrentWeather;\n    return await this.fetch(endpoint, { query: { city }, body: {} });\n  }\n\n  public async getYouTubeTrending(categoryId: number = 0): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.youtube.getTrending;\n    return await this.fetch(endpoint, { query: { categoryId }, body: {} });\n  }\n\n  public async getYouTubeVideoCategories(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.youtube.getVideoCategories;\n    return await this.fetch(endpoint);\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n}\n","export default class Storage {\n  public set(key: string, value: any): void {\n    if (typeof value === 'string') {\n      localStorage.setItem(key, value);\n    } else {\n      localStorage.setItem(key, value.toString());\n    }\n  }\n\n  public get(key: string): any {\n    return localStorage.getItem(key) || '';\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\nimport Storage from './storage';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\nconst storage: Storage = new Storage();\n\nexport { apis, graphql, helper, storage };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n  theme: string;\n}\n\nclass API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '', theme = 'light' } = this.props;\n    const textColor: string = theme === 'light' ? 'text-secondary' : 'text-white';\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className={`${textColor} d-inline m-0 cursor-pointer`}>\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(API);\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n  rowIndexEnabled?: boolean;\n  theme: string;\n}\n\nclass Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data',\n      rowIndexEnabled = false,\n      theme\n    } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const spinnerVariant: string = theme === 'light' ? 'danger' : 'light';\n    const borderColor: string = theme === 'light' ? '' : 'border-white';\n    const bgColor: string = theme === 'light' ? 'bg-danger' : 'bg-black';\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5 className={`${textColor}`}>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={spinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className={`table-responsive table-container rounded-lg border ${borderColor}`}>\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className={`${bgColor} text-center text-white`}>\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowIndexEnabled && <th className={`${textColor}`}>#</th>}\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return (\n                        <th key={headerIndex} className={`${textColor}`}>\n                          {header}\n                        </th>\n                      );\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowIndexEnabled && <td className={`${textColor}`}>{rowIndex + 1}</td>}\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          let cell = '';\n                          if (typeof row[key] === 'boolean') {\n                            cell = row[key].toString();\n                          } else if (typeof row[key] === 'string') {\n                            cell = (row[key] || '').toString();\n                          } else {\n                            cell = row[key];\n                          }\n                          return (\n                            <td key={cellIndex} className={`${className} ${textColor}`}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(Table);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n  theme: string;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\nclass Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { theme = 'light' } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p className={`${textColor}`}>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const { theme = 'light' } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5 className={`${textColor}`}>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p className={`${textColor}`}>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    const { theme = 'light' } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className={`${textColor} mb-3`}>{name}</h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group, theme } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className={`${textColor} mb-3`}>{header}</h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(Doc);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\ninterface IFooterProps {\n  theme: string;\n}\n\nclass Footer extends Component<IFooterProps> {\n  render() {\n    const { theme } = this.props;\n    const bgColor: string = theme === 'light' ? 'bg-danger' : 'bg-black';\n    const border: string =\n      theme === 'light' ? 'border-top border-danger' : 'border-top border-white';\n\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <footer id=\"Footer\" className={`${bgColor} ${border} pt-3 pb-3 text-white text-center`}>\n        &copy;{' '}\n        <a\n          href=\"https://www.linkedin.com/in/hieudoanm/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"text-white\">\n          HIEU DOAN\n        </a>{' '}\n        {year}\n      </footer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(Footer);\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container-fluid\">\n        <Form className=\"mb-3 w-100\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Query\"\n            value={this.state.query}\n            onChange={this.filter}></Form.Control>\n        </Form>\n        <Table\n          loading={loading}\n          caption={'Ethnic Minorities'}\n          rows={filterEthnicMinorities}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'General Secretaries'}\n          rows={generalSecretaries}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container-fluid\">\n        <Form className=\"mt-3 w-100\">\n          <Form.Group>\n            <Form.Control as=\"select\" value={this.state.ministry} onChange={this.updateMinistry}>\n              {ministries.map((ministry, index) => {\n                const { short, name } = ministry;\n                return (\n                  <option key={index} value={short}>\n                    {name}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </Form>\n        <Table\n          loading={loading}\n          caption={'Ministers'}\n          rows={ministers}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Ministries'}\n          rows={ministries}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'National Assembly Chairs'}\n          rows={chairs}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container-fluid\">\n        <Table loading={loading} caption={'Members'} rows={members} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Presidents'}\n          rows={presidents}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Prime Ministers'}\n          rows={primeMinisters}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IHistoryDynastiesProps {}\n\ninterface IHistoryDynastiesState {\n  dynasties: Array<any>;\n  loading: boolean;\n}\n\nexport default class HistoryDynasties extends Component<\n  IHistoryDynastiesProps,\n  IHistoryDynastiesState\n> {\n  constructor(props: IHistoryDynastiesProps) {\n    super(props);\n\n    this.state = { dynasties: [], loading: true };\n\n    this.getHistoryDynasties = this.getHistoryDynasties.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getHistoryDynasties();\n  }\n\n  async getHistoryDynasties() {\n    this.setState({ loading: true });\n    const dynasties: Array<any> = await apis.getDynasties();\n    this.setState({ dynasties, loading: false });\n  }\n\n  render() {\n    const { dynasties = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Temple Name', key: 'temple_name' },\n      { header: 'Birth Name', key: 'birth_name' },\n      { header: 'Start', key: 'start_year' },\n      { header: 'End', key: 'end_year' },\n      { header: 'Dynasty', key: 'dynasty' }\n    ];\n\n    return (\n      <div id=\"HistoryDynasties\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Dynasties'}\n          rows={dynasties}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, ListGroup } from 'react-bootstrap';\n\ninterface IHomeProps {\n  theme: string;\n}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n}\n\ninterface IAPI {\n  name: string;\n  docs: string;\n}\n\nclass Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis: Array<IAPI> = [\n      {\n        name: 'administrative-divisions',\n        docs: '/administrative-divisions'\n      },\n      {\n        name: 'banks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'music',\n        docs: '/music'\n      },\n      {\n        name: 'news',\n        docs: '/news'\n      },\n      {\n        name: 'open-apis',\n        docs: '/open-apis'\n      },\n      {\n        name: 'phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        docs: '/sports'\n      },\n      { name: 'vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis\n    };\n\n    this.filter = this.filter.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [] } = this.state;\n    const filterAPIs = this.filter(apis, query);\n\n    await this.setState({ filterAPIs });\n  }\n\n  filter(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable() {\n    const { filterAPIs = [] } = this.state;\n    const { theme = 'light' } = this.props;\n    const border: string = theme === 'light' ? 'border' : 'border border-white';\n    const borderBottom: string = theme === 'light' ? '' : 'border-white';\n    const bgColor: string = theme === 'light' ? 'bg-white' : 'bg-black';\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    return (\n      <ListGroup className={`${border} list-group-flush h-65vh overflow-auto rounded-lg`}>\n        {filterAPIs.length !== 0 &&\n          filterAPIs.map((_package, index) => {\n            const { name = '', docs = '' } = _package;\n            return (\n              <ListGroup.Item\n                key={index}\n                className={`${bgColor} ${textColor} ${borderBottom} d-flex justify-content-between align-items-center`}>\n                {name}\n                <span>\n                  {docs && (\n                    <Link className={`${textColor} ml-1`} to={docs}>\n                      <u>Docs</u>\n                    </Link>\n                  )}\n                </span>\n              </ListGroup.Item>\n            );\n          })}\n      </ListGroup>\n    );\n  }\n\n  render() {\n    const { theme } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    return (\n      <div id=\"Home\" className=\"container-fluid\">\n        <Form className=\"mb-3\">\n          <Form.Label className={`${textColor}`} htmlFor=\"query\">\n            Query\n          </Form.Label>\n          <Form.Control\n            id=\"query\"\n            type=\"text\"\n            placeholder=\"Query\"\n            value={this.state.query}\n            onChange={this.updateQuery}></Form.Control>\n        </Form>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container-fluid\">\n        <Form className=\"mb-3 w-100\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"License\"\n            value={this.state.query}\n            onChange={this.filter}></Form.Control>\n        </Form>\n        <Table\n          loading={loading}\n          caption={'License Plates'}\n          rows={filterLicensePlates}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IMusicArtistsProps {}\n\ninterface IMusicArtistsState {\n  artists: Array<any>;\n  loading: boolean;\n}\n\nexport default class MusicArtists extends Component<IMusicArtistsProps, IMusicArtistsState> {\n  constructor(props: IMusicArtistsProps) {\n    super(props);\n\n    this.state = { artists: [], loading: true };\n\n    this.getMusicArtists = this.getMusicArtists.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMusicArtists();\n  }\n\n  async getMusicArtists() {\n    this.setState({ loading: true });\n    const artists: Array<any> = await apis.getMusicArtists();\n    this.setState({ artists, loading: false });\n  }\n\n  render() {\n    const { artists = [], loading = false } = this.state;\n\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n\n    return (\n      <div id=\"MusicArtists\" className=\"container-fluid\">\n        <Table loading={loading} caption={'Artists'} rows={artists} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IOpenAPIsListProps {\n  theme: string;\n}\n\ninterface IOpenAPIsListState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nclass OpenAPIsList extends Component<IOpenAPIsListProps, IOpenAPIsListState> {\n  constructor(props: IOpenAPIsListProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getOpenAPIs = this.getOpenAPIs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getOpenAPIs();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getOpenAPIs() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getOpenAPIs();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable() {\n    const { filterTechnologies = [], loading = true } = this.state;\n    const { theme } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const spinnerVariant: string = theme === 'light' ? 'danger' : 'light';\n    const borderColor: string = theme === 'light' ? '' : 'border-white';\n    const bgColor: string = theme === 'light' ? 'bg-danger' : 'bg-black';\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={spinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${borderColor}`}>\n            <table className=\"table\">\n              <caption className={`${bgColor} text-center text-white`}>\n                Open APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th className={`${textColor}`}>Name</th>\n                  <th className={`${textColor}`}>Type</th>\n                  <th className={`${textColor}`}>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td className={`${textColor}`}>\n                            <a\n                              href={url}\n                              rel=\"noreferrer\"\n                              target=\"_blank\"\n                              className={`${textColor}`}>\n                              <b>\n                                <u>{name}</u>\n                              </b>\n                            </a>\n                          </td>\n                          <td className={`${textColor}`}>{type}</td>\n                          <td className={`${textColor}`}>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\"\n                                className={`${textColor}`}>\n                                <b>\n                                  <u>npm</u>\n                                </b>\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"OpenAPIsList\" className=\"container-fluid\">\n        <Form className=\"mt-3 mb-3 w-100\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type\"\n            value={this.state.query}\n            onChange={this.filter}></Form.Control>\n        </Form>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(OpenAPIsList);\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Provinces\" className=\"container-fluid\">\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table\n          loading={loading}\n          caption={'GHN Provinces'}\n          rows={provinces}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IDistrictsProps {}\n\ninterface IDistrictsState {\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { districts: [], loading: true };\n\n    this.getGHNDistricts = this.getGHNDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNDistricts();\n  }\n\n  async getGHNDistricts() {\n    this.setState({ loading: true });\n    const districts = await apis.getGHNDistricts();\n    this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' },\n      { header: 'Type', key: 'type' },\n      { header: 'Support Type', key: 'support_type' }\n    ];\n\n    return (\n      <div id=\"Districts\" className=\"container-fluid\">\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table\n          loading={loading}\n          caption={'GHN Districts'}\n          rows={districts}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getGHNWards = this.getGHNWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNWards();\n  }\n\n  async getGHNWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getGHNWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Wards\" className=\"container-fluid\">\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table loading={loading} caption={'GHN Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {\n  theme: string;\n}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nclass Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n    const { theme = 'light' } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const spinnerVariant: string = theme === 'light' ? 'danger' : 'light';\n    const options = [\n      { value: 'latest', text: 'Latest' },\n      { value: 'popular', text: 'Popular' },\n      { value: 'editor-pick', text: 'Editor Pick' }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container-fluid\">\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <h3 className={`${textColor} text-center`}>Vietcetera ({articles.length})</h3>\n        <Form className=\"mt-3 w-100\">\n          <Form.Group>\n            <Form.Control as=\"select\" value={this.state.type} onChange={this.getArticles}>\n              {options.map((option, index) => {\n                const { text, value } = option;\n                return (\n                  <option key={index} value={value}>\n                    {text}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </Form>\n        <ListGroup className=\"mb-3\">\n          {loading && (\n            <div className=\"text-center\">\n              <Spinner animation=\"border\" variant={spinnerVariant}></Spinner>\n            </div>\n          )}\n          {!loading &&\n            articles.length !== 0 &&\n            articles.map((article, index) => {\n              const { title = '', url = '', publishDate = '', description = '' } = article;\n              return (\n                <ListGroup.Item key={index}>\n                  <Card.Title>\n                    <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                      {title}\n                    </a>\n                  </Card.Title>\n                  <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                  <Card.Text>{description}</Card.Text>\n                </ListGroup.Item>\n              );\n            })}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(Vietcetera);\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IWeatherCurrentProps {}\n\ninterface IWeatherCurrentState {\n  result: any;\n  loading: boolean;\n}\n\nexport default class WeatherCurrent extends Component<IWeatherCurrentProps, IWeatherCurrentState> {\n  constructor(props: IWeatherCurrentProps) {\n    super(props);\n\n    this.state = { result: {}, loading: true };\n\n    this.getWeatherCurrent = this.getWeatherCurrent.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWeatherCurrent();\n  }\n\n  async getWeatherCurrent() {\n    this.setState({ loading: true });\n    const result: Array<any> = await apis.getCurrentWeather('hanoi');\n    this.setState({ result, loading: false });\n  }\n\n  render() {\n    const { result = {} } = this.state;\n\n    const { main = {}, weather = [] } = result;\n    const [first = {}] = weather;\n    const { description = '' } = first;\n    const { temp = 0, feels_like = 0, temp_min = 0, temp_max = 0 } = main;\n\n    return (\n      <div id=\"WeatherCurrent\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <div className=\"mb-3\">\n              <p className=\"m-0 text-center\">{description.toUpperCase()}</p>\n              <h1 className=\"text-center\">{temp}&deg;C</h1>\n              <p className=\"m-0 text-center\">Feels Like: {feels_like}&deg;C</p>\n              <p className=\"m-0 text-center\">\n                Min: {temp_min}&deg;C - Max: {temp_max}&deg;C\n              </p>\n            </div>\n            <div className=\"p-3 bg-dark rounded\">\n              <pre className=\"m-0 text-white\">{JSON.stringify(result, null, 2)}</pre>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"AdministrativeDivisions\" className=\"container-fluid\">\n        <SmallDoc group={'administrativeDivisions'} header={'Administrative Divisions'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container-fluid\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container-fluid\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {\n  theme: string;\n}\n\ninterface IDocsState {\n  endpoints: any;\n}\n\nclass Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const { theme = 'light' } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small className={`${textColor}`}>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar() {\n    const { endpoints } = this.state;\n    const { theme = 'light' } = this.props;\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n      return { group, apis };\n    });\n\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.capitalize(group);\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className={`${textColor} m-0 p-0`}\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container-fluid\">\n        <div className=\"h-100\">\n          <div className=\"row\">\n            <div className=\"col-md-3 d-none d-md-block\">\n              <div className=\"content-height overflow-auto\">{this.renderSidebar()}</div>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"content-height overflow-auto\">\n                {groups.length > 0 &&\n                  groups.map((group: string, index: number) => {\n                    return <Doc key={index} group={group} header={helper.capitalize(group)}></Doc>;\n                  })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(Docs);\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container-fluid\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container-fluid\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container-fluid\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class History extends Component {\n  render() {\n    return (\n      <div id=\"History\" className=\"container-fluid\">\n        <SmallDoc group={'history'} header={'History'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container-fluid\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Music extends Component {\n  render() {\n    return (\n      <div id=\"Music\" className=\"container-fluid\">\n        <SmallDoc group={'music'} header={'Music'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container-fluid\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class OpenAPIs extends Component {\n  render() {\n    return (\n      <div id=\"OpenAPIs\" className=\"container-fluid\">\n        <SmallDoc group={'openAPIs'} header={'OpenAPIs'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container-fluid\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container-fluid\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Weather extends Component {\n  render() {\n    return (\n      <div id=\"Weather\" className=\"container-fluid\">\n        <SmallDoc group={'weather'} header={'Weather'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class YouTube extends Component {\n  render() {\n    return (\n      <div id=\"YouTube\" className=\"container-fluid\">\n        <SmallDoc group={'youtube'} header={'YouTube'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.getDistricts = this.getDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  async getProvinces() {\n    const provinces = await apis.getProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container-fluid\">\n        <Form>\n          <Form.Group>\n            <Form.Control as=\"select\" value={this.state.province_id} onChange={this.updateProvince}>\n              <option value={''}>Province</option>\n              {provinces.map((province, index) => {\n                return (\n                  <option key={index} value={province.province_id}>\n                    {province.name}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </Form>\n        <Table\n          loading={loading}\n          caption={'Districts'}\n          rows={districts}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Postal Codes'}\n          rows={postalCodes}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Provinces'}\n          rows={provinces}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Pagination } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n  total: number;\n  active: number;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true, total: 0, active: 1 };\n\n    this.getWards = this.getWards.bind(this);\n    this.getTotalWards = this.getTotalWards.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n    this.updateActive = this.updateActive.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTotalWards();\n    await this.getWards();\n  }\n\n  async getWards(page: number = 0) {\n    this.setState({ loading: true });\n    const skip: number = page * 100;\n    const wards = await apis.getWards(skip);\n    this.setState({ wards, loading: false });\n  }\n\n  async getTotalWards() {\n    const total: number = await apis.getTotalWards();\n    this.setState({ total });\n  }\n\n  async goToPage(page: number) {\n    await this.setState({ active: page });\n    await this.getWards(page - 1);\n  }\n\n  async updateActive(value: number) {\n    let { active } = this.state;\n    active += value;\n    await this.setState({ active });\n    await this.getWards(active - 1);\n  }\n\n  renderPagination() {\n    const { total, active } = this.state;\n\n    if (!total) return '';\n\n    const max: number = Math.floor(total / 100);\n\n    const final: number = active + 10 < max ? active + 10 : max;\n    const start: number = final === max ? max - 10 : active;\n    const items: Array<any> = [];\n    for (let page = start; page <= final; page++) {\n      items.push(\n        <Pagination.Item key={page} active={page === active} onClick={() => this.goToPage(page)}>\n          {page}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination size=\"sm\" className=\"justify-content-center\">\n        {active !== 1 && (\n          <Pagination.Item key={1} onClick={() => this.goToPage(1)}>\n            1\n          </Pagination.Item>\n        )}\n        {active !== 1 && <Pagination.Prev onClick={() => this.updateActive(1)} />}\n        {items}\n        {final !== max && <Pagination.Next onClick={() => this.updateActive(1)} />}\n        {final !== max && (\n          <Pagination.Item key={max} onClick={() => this.goToPage(max)}>\n            {max}\n          </Pagination.Item>\n        )}\n      </Pagination>\n    );\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    const rowConfigs: Array<any> = [\n      { header: 'Ward', key: 'ward' },\n      { header: 'District', key: 'district' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsWards\" className=\"container-fluid\">\n        {this.renderPagination()}\n        <div className=\"mb-3\">\n          <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n        </div>\n        {this.renderPagination()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getBanks = this.getBanks.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanks();\n  }\n\n  async getBanks() {\n    this.setState({ loading: true });\n    const banks = await apis.getBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' },\n      { header: 'Name (Short)', key: 'name_short' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n    return (\n      <div id=\"BanksList\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Banks'}\n          rows={banks}\n          rowConfigs={rowConfigs}\n          rowIndexEnabled={true}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\n\ninterface IBanksForexRatesProps {\n  theme: string;\n}\n\ninterface IBanksForexRatesState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nclass BanksForexRates extends Component<IBanksForexRatesProps, IBanksForexRatesState> {\n  constructor(props: IBanksForexRatesProps) {\n    super(props);\n\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateCurrency = this.updateCurrency.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buyCash') {\n      data.sort((a, b) => {\n        const aItem = a.buyCash[currency] || 0;\n        const bItem = b.buyCash[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'sellCash') {\n      data.sort((a, b) => {\n        const aItem = a.sellCash[currency] || 0;\n        const bItem = b.sellCash[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'buyTransfer') {\n      data.sort((a, b) => {\n        const aItem = a.buyTransfer[currency] || 0;\n        const bItem = b.buyTransfer[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'sellTransfer') {\n      data.sort((a, b) => {\n        const aItem = a.sellTransfer[currency] || 0;\n        const bItem = b.sellTransfer[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    }\n\n    await this.setState({ data });\n  }\n\n  async updateCurrency(event: any) {\n    const { value: currency } = event.target;\n    await this.setState({ currency });\n  }\n\n  renderForm(currencies: Array<any>) {\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control as=\"select\" value={this.state.currency} onChange={this.updateCurrency}>\n            <option value={''}>Currency</option>\n            {currencies.map((currency, index) => {\n              return (\n                <option key={index} value={currency}>\n                  {currency.toUpperCase()}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  renderTable() {\n    const { data = [], currency = '', loading } = this.state;\n    const { theme } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const bgColor: string = theme === 'light' ? 'bg-danger' : 'bg-black';\n    const spinnerVariant: string = theme === 'light' ? 'danger' : 'light';\n    const borderColor: string = theme === 'light' ? '' : 'border-white';\n    return (\n      <div>\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={spinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${borderColor}`}>\n            {data.length > 0 && (\n              <table className=\"table\">\n                <caption className={`${bgColor} text-white text-center`}>\n                  Forex Rates {currency && <span>({currency.toUpperCase()})</span>}\n                </caption>\n                <thead>\n                  <tr>\n                    <th className={textColor}>#</th>\n                    <th className={textColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                        Bank\n                      </span>\n                    </th>\n                    <th className={textColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('buyCash')}>\n                        Buy (Cash)\n                      </span>\n                    </th>\n                    <th className={textColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('buyTransfer')}>\n                        Buy (Transfer)\n                      </span>\n                    </th>\n                    <th className={textColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('sellCash')}>\n                        Sell (Cash)\n                      </span>\n                    </th>\n                    <th className={textColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('sellTransfer')}>\n                        Sell (Transfer)\n                      </span>\n                    </th>\n                    <th className={textColor}>Last Updated At</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map((item, index) => {\n                    const {\n                      bank = '',\n                      time = '',\n                      buyCash = {},\n                      buyTransfer = {},\n                      sellCash = {},\n                      sellTransfer = {}\n                    } = item;\n                    const buyCashText: string = buyCash[currency] || '';\n                    const buyTransferText: string = buyTransfer[currency] || '';\n                    const sellCashText: string = sellCash[currency] || '';\n                    const sellTransferText: string = sellTransfer[currency] || '';\n\n                    return (\n                      <tr key={index}>\n                        <td className={textColor}>{index + 1}</td>\n                        <td className={textColor}>{bank}</td>\n                        <td className={textColor}>{buyCashText}</td>\n                        <td className={textColor}>{buyTransferText}</td>\n                        <td className={textColor}>{sellCashText}</td>\n                        <td className={textColor}>{sellTransferText}</td>\n                        <td className={textColor}>{time}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { currencies = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForexRates\" className=\"container-fluid\">\n        {!loading && this.renderForm(currencies)}\n        <div className=\"h-70vh overflow-auto\">{this.renderTable()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme = '' } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(BanksForexRates);\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getForexRates = this.getForexRates.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getForexRates();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    const bank: string = banks[0] || '';\n    await this.setState({ bank, banks, loading: false });\n  }\n\n  async getForexRates() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    await this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" value={bank}>\n                    <option value={''}>Bank</option>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank}>\n                          {bank}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" value={currency}>\n                    <option value={''}>Currency</option>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\n\ninterface IBanksForexSyncProps {\n  theme: string;\n}\n\ninterface IBanksForexSyncState {\n  banks: Array<string>;\n  loading: boolean;\n  syncing: Array<string>;\n}\n\nclass BanksForexSync extends Component<IBanksForexSyncProps, IBanksForexSyncState> {\n  constructor(props: IBanksForexSyncProps) {\n    super(props);\n\n    this.state = { banks: [], syncing: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n    this.syncAll = this.syncAll.bind(this);\n    this.addToSyncing = this.addToSyncing.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    await this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string, index: number = 0) {\n    await this.addToSyncing(id);\n    const message: string = await apis.syncForexRates(id);\n    await this.removeFromSyncing(id);\n    console.log(index, id, message);\n  }\n\n  async addToSyncing(id: string) {\n    const { syncing = [] } = this.state;\n    const index = syncing.indexOf(id);\n    if (index !== -1) return;\n    syncing.push(id);\n    console.log('addToSyncing', syncing);\n    await this.setState({ syncing });\n  }\n\n  async removeFromSyncing(id: string) {\n    let { syncing = [] } = this.state;\n    syncing = syncing.filter(item => item !== id);\n    console.log('removeFromSyncing', syncing);\n    await this.setState({ syncing });\n  }\n\n  async syncAll() {\n    const { banks = [] } = this.state;\n    let index: number = 0;\n    for (const id of banks) {\n      index++;\n      await this.syncForexRates(id, index);\n    }\n  }\n\n  renderTable() {\n    const { banks = [], loading = false, syncing = [] } = this.state;\n    const { theme } = this.props;\n\n    const spinnerVariant: string = theme === 'light' ? 'danger' : 'light';\n    const bgColor: string = theme === 'light' ? 'bg-danger' : 'bg-black';\n    const borderColor: string = theme === 'light' ? '' : 'border-white';\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const buttonVariant: string = theme === 'light' ? 'danger' : 'light';\n\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={spinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${borderColor}`}>\n            {banks.length ? (\n              <table className=\"table\">\n                <caption className={`${bgColor} text-white text-center`}>\n                  Banks ({banks.length})\n                </caption>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th className={`${textColor}`}>ID</th>\n                    <th className=\"text-right\">\n                      <Button variant={buttonVariant} onClick={() => this.syncAll()}>\n                        SYNC ALL\n                      </Button>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {banks.map((bank, index) => {\n                    const syncingFlag: boolean = syncing.includes(bank);\n                    return (\n                      <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td className={`${textColor}`}>{bank}</td>\n                        <td align=\"right\">\n                          <Button\n                            disabled={syncingFlag}\n                            variant={buttonVariant}\n                            onClick={() => this.syncForexRates(bank)}>\n                            {syncingFlag ? (\n                              <Spinner animation=\"border\" variant=\"light\"></Spinner>\n                            ) : (\n                              'SYNC'\n                            )}\n                          </Button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            ) : (\n              ''\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"BanksForexSync\" className=\"container-fluid\">\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme = '' } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(BanksForexSync);\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  private loadingText: string = 'LOADING ...';\n\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = {\n      solarDate: '',\n      solarString: this.loadingText,\n      lunarDate: '',\n      lunarString: this.loadingText\n    };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    await this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    const canChi: string = await apis.getCanChi(year, month, date);\n    return helper.capitalize(canChi);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString, lunarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString, solarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Companies'}\n          rows={companies}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control as=\"select\" value={this.state.period} onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    await this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div id=\"FinanceHistory\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" value={this.state.period} onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" value={this.state.symbol} onChange={this.updateSymbol}>\n                    {symbols.map((symbol, index) => {\n                      return (\n                        <option key={index} value={symbol}>\n                          {symbol}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control as=\"select\" value={this.state.period} onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {helper.numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {helper.numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {helper.numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {\n  theme: string;\n}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n  loading: boolean;\n}\n\nclass NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [], loading: true };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    await this.setState({ loading: true });\n    const trends = await apis.getGoogleTrends();\n    await this.setState({ trends, loading: false });\n  }\n\n  render() {\n    const { trends = [], loading = true } = this.state;\n    const { theme } = this.props;\n    const borderColor: string = theme === 'light' ? '' : 'border-white';\n    const bgColor: string = theme === 'light' ? 'bg-white' : 'bg-black';\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n\n    return (\n      <Card id=\"NewsTrends\" className={`${bgColor} ${borderColor}`}>\n        <Card.Body>\n          <Card.Title className={`${textColor} text-center`}>Trends ({trends.length})</Card.Title>\n          {loading && (\n            <div className=\"text-center\">\n              <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n            </div>\n          )}\n          {trends.length !== 0 &&\n            trends.map((trend, index) => {\n              const { text, url } = trend;\n              return (\n                <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                  <a key={index} href={url} target=\"_blank\" rel=\"noreferrer\" className=\"text-white\">\n                    {text}\n                  </a>\n                </Badge>\n              );\n            })}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme = '' } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(NewsTrends);\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\nimport Trends from './Trends';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n    this.renderArticles = this.renderArticles.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n    await this.getCategories();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const { source } = this.state;\n    const categories = await apis.getCategories(source);\n    await this.setState({ categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    await this.setState({ sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    await this.setState({ source });\n    await this.getCategories();\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles(source, category);\n    this.setState({ articles, loading: false });\n  }\n\n  renderForm() {\n    const { categories = [], sources = [] } = this.state;\n    return (\n      <Form className=\"w-100\">\n        <div className=\"row\">\n          {sources.length > 0 && (\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control as=\"select\" value={this.state.source} onChange={this.updateSource}>\n                  <option value={''}>Source</option>\n                  {sources.map((source, index) => {\n                    return (\n                      <option key={index} value={source}>\n                        {helper.capitalize(source)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          )}\n          {categories.length > 0 && (\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.category}\n                  onChange={this.updateCategory}>\n                  <option value={''}>Category</option>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category}>\n                        {helper.capitalize(category)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          )}\n        </div>\n      </Form>\n    );\n  }\n\n  renderArticles() {\n    const { articles } = this.state;\n    return (\n      <div>\n        {articles.length === 0 && (\n          <div className=\"p-3 text-center text-uppercase rounded border\">NO VIDEOS</div>\n        )}\n        {articles.length !== 0 && (\n          <Card className=\"h-70vh overflow-auto\">\n            <ListGroup className=\"list-group-flush\">\n              <ListGroup.Item className=\"text-center text-white bg-danger\">\n                Articles ({articles.length})\n              </ListGroup.Item>\n              {articles.map((article = {}, index) => {\n                const { title = '', url = '', source = '', publishedDate = '' } = article;\n                let { description = '' } = article;\n                console.log(description);\n                description = description.toString() || '';\n                const startIndex: number = description.indexOf('<img');\n                const endIndex: number = description.indexOf('/>');\n                let short = '';\n                if (startIndex > -1 && endIndex > startIndex) {\n                  short = `${description.substring(0, startIndex)}${description.substring(\n                    endIndex + 2,\n                    description.length\n                  )}`;\n                }\n                return (\n                  <ListGroup.Item key={index}>\n                    <Card.Title>\n                      <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                        {title}\n                      </a>\n                    </Card.Title>\n                    <Card.Subtitle className=\"d-block text-muted mb-1\">\n                      {source && <small>{source}</small>} -{' '}\n                      {publishedDate && <small>({publishedDate})</small>}\n                    </Card.Subtitle>\n                    <Card.Text>\n                      <span dangerouslySetInnerHTML={{ __html: short }}></span>\n                    </Card.Text>\n                  </ListGroup.Item>\n                );\n              })}\n            </ListGroup>\n          </Card>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = true } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n            <div className=\"mb-3\">\n              <Trends></Trends>\n            </div>\n          </div>\n          <div className=\"col-sm-9\">\n            {this.renderForm()}\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading && this.renderArticles()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Phone Prefixes'}\n          rows={prefixes}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {\n  theme: string;\n}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nclass PhonesProviders extends Component<IPhonesProvidersProps, IPhonesProvidersState> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable() {\n    const { providers = [], loading = true } = this.state;\n    const { theme } = this.props;\n    const bgColor: string = theme === 'light' ? 'bg-danger' : 'bg-black';\n    const borderColor: string = theme === 'light' ? '' : 'border-white';\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${borderColor}`}>\n            <table className=\"table\">\n              <caption className={`${bgColor} text-center text-white`}>\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th className={`${textColor}`}>Name</th>\n                  <th className={`${textColor}`}>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td className={`${textColor}`}>{_provider}</td>\n                          <td className={`${textColor}`}>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"PhonesProviders\" className=\"container-fluid\">\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(PhonesProviders);\n","import React, { Component } from 'react';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container-fluid\">\n        <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsVLeagueProps {}\n\ninterface ISportsVLeagueState {\n  matches: Array<any>;\n  leagueTable: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsVLeague extends Component<ISportsVLeagueProps, ISportsVLeagueState> {\n  constructor(props: ISportsVLeagueProps) {\n    super(props);\n\n    this.state = { matches: [], leagueTable: [], loading: true };\n\n    this.getVLeague = this.getVLeague.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getVLeague();\n  }\n\n  async getVLeague() {\n    this.setState({ loading: true });\n    const res = await apis.getVLeague();\n    const { matches = [], leagueTable = [] } = res;\n    this.setState({ matches, leagueTable, loading: false });\n  }\n\n  render() {\n    const { matches = [], leagueTable = [], loading = false } = this.state;\n\n    const matchesRowConfigs: Array<any> = [\n      { header: '#', key: 'round' },\n      { header: 'Date Time', key: 'dateTime' },\n      { header: 'Home', key: 'homeTeam' },\n      { header: '', key: 'homeScore' },\n      { header: '', key: 'awayScore' },\n      { header: 'Away', key: 'awayTeam' }\n    ];\n\n    const leagueTableRowConfigs: Array<any> = [\n      { header: '#', key: 'rank' },\n      { header: 'Name', key: 'name' },\n      { header: 'PTS', key: 'point' },\n      { header: 'W', key: 'win' },\n      { header: 'D', key: 'draw' },\n      { header: 'L', key: 'lost' },\n      { header: 'G', key: 'goal' },\n      { header: 'GA', key: 'goalAgainst' },\n      { header: 'GD', key: 'goalDifference' }\n    ];\n\n    return (\n      <div id=\"SportsVLeague\" className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div className=\"content-height overflow-auto\">\n              <Table\n                loading={loading}\n                caption={'Matches'}\n                rows={matches}\n                rowConfigs={matchesRowConfigs}></Table>\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <div className=\"content-height overflow-auto\">\n              <Table\n                loading={loading}\n                caption={'League Table'}\n                rows={leagueTable}\n                rowConfigs={leagueTableRowConfigs}></Table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Spinner, ListGroup } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IYouTubeTrendingProps {\n  theme: string;\n}\n\ninterface IYouTubeTrendingState {\n  categoryId: string;\n  categories: Array<any>;\n  mapCategories: any;\n  trending: Array<any>;\n  loading: boolean;\n}\n\nclass YouTubeTrending extends Component<IYouTubeTrendingProps, IYouTubeTrendingState> {\n  constructor(props: IYouTubeTrendingProps) {\n    super(props);\n\n    this.state = {\n      categoryId: '',\n      categories: [],\n      mapCategories: {},\n      trending: [],\n      loading: true\n    };\n\n    this.getYouTubeTrending = this.getYouTubeTrending.bind(this);\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n    this.updateVideoCategory = this.updateVideoCategory.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderCards = this.renderCards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n    await this.getYouTubeTrending();\n  }\n\n  async getYouTubeVideoCategories() {\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    const mapCategories: any = {};\n    for (const videoCategory of categories) {\n      const { id, title } = videoCategory;\n      mapCategories[id] = title;\n    }\n    this.setState({ categories, mapCategories });\n  }\n\n  async getYouTubeTrending(categoryId: number = 0) {\n    const { mapCategories = {} } = this.state;\n    this.setState({ loading: true });\n    const videos: Array<any> = await apis.getYouTubeTrending(categoryId);\n    const trending = videos.map(video => {\n      const { categoryId } = video;\n      const category: string = mapCategories[categoryId] || '';\n      video.category = category;\n      return video;\n    });\n    this.setState({ trending, loading: false });\n  }\n\n  async updateVideoCategory(event: any) {\n    const { value: categoryId } = event.target;\n    await this.setState({ categoryId });\n    await this.getYouTubeTrending(categoryId);\n  }\n\n  renderForm() {\n    const { categories, categoryId } = this.state;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control as=\"select\" value={categoryId} onChange={this.updateVideoCategory}>\n            <option value={''}>Category</option>\n            {categories.map((category, index) => {\n              return (\n                <option key={index} value={category.id}>\n                  {category.id} - {category.title}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  renderCards() {\n    const { trending = [] } = this.state;\n    const { theme = 'light' } = this.props;\n    const border: string = theme === 'light' ? 'border' : 'border border-white';\n    const borderBottom: string = theme === 'light' ? '' : 'border-white';\n    const bgColor: string = theme === 'light' ? 'bg-white' : 'bg-black';\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    return (\n      <div>\n        {trending.length === 0 && (\n          <div className=\"p-3 text-center text-uppercase rounded border\">NO VIDEOS</div>\n        )}\n        {trending.length > 0 && (\n          <ListGroup className={`${border} list-group-flush h-70vh overflow-auto rounded-lg`}>\n            {trending.map((video: any, index: number) => {\n              const { title, url, channelId, channelTitle } = video;\n              const channelUrl: string = `https://www.youtube.com/channel/${channelId}`;\n              return (\n                <ListGroup.Item\n                  key={index}\n                  className={`${bgColor} ${textColor} ${borderBottom} d-flex justify-content-between align-items-center`}>\n                  <h6 className=\"m-0\">\n                    <a href={url} className={textColor} target=\"_blank\" rel=\"noreferrer\">\n                      {title}\n                    </a>\n                  </h6>\n                  <small>\n                    <a href={channelUrl} className=\"text-muted\" target=\"_blank\" rel=\"noreferrer\">\n                      {channelTitle}\n                    </a>\n                  </small>\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false } = this.state;\n\n    return (\n      <div id=\"YouTubeTrending\" className=\"container-fluid\">\n        {this.renderForm()}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && this.renderCards()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(YouTubeTrending);\n","import {\n  // Administrative Divisions\n  AdministrativeDivisions,\n  AdministrativeDivisionsPostalCodes,\n  AdministrativeDivisionsProvinces,\n  AdministrativeDivisionsDistricts,\n  AdministrativeDivisionsWards,\n  // Banks\n  Banks,\n  BanksList,\n  BanksForexRates,\n  BanksForexHistory,\n  BanksForexSync,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  // History\n  History,\n  HistoryDynasties,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Music\n  Music,\n  MusicArtists,\n  // News\n  News,\n  NewsFeed,\n  // Open APIs\n  OpenAPIs,\n  OpenAPIsList,\n  GHNProvinces,\n  GHNDistricts,\n  GHNWards,\n  Vietcetera,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  SportsVLeague,\n  // Weather\n  Weather,\n  WeatherCurrent,\n  YouTube,\n  YouTubeTrending\n} from '../pages';\n\ninterface IRoute {\n  path: string;\n  text: string;\n  component: any;\n  navigation: boolean;\n}\n\nconst routes: Array<IRoute> = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions',\n    text: 'Administrative Divisions',\n    component: AdministrativeDivisions,\n    navigation: true\n  },\n  {\n    path: 'administrative-divisions-postal-codes',\n    text: 'Administrative Divisions Postal Codes',\n    component: AdministrativeDivisionsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-provinces',\n    text: 'Administrative Divisions Provinces',\n    component: AdministrativeDivisionsProvinces,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-districts',\n    text: 'Administrative Divisions Districts',\n    component: AdministrativeDivisionsDistricts,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-wards',\n    text: 'Administrative Divisions Wards',\n    component: AdministrativeDivisionsWards,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'banks-forex-rates',\n    text: 'Banks Forex Rates',\n    component: BanksForexRates,\n    navigation: false\n  },\n  {\n    path: 'banks-forex-history',\n    text: 'Banks Forex History',\n    component: BanksForexHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-forex-sync',\n    text: 'Banks Forex Sync',\n    component: BanksForexSync,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'history',\n    text: 'History',\n    component: History,\n    navigation: true\n  },\n  {\n    path: 'history-dynasties',\n    text: 'History-dynasties',\n    component: HistoryDynasties,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'music',\n    text: 'Music',\n    component: Music,\n    navigation: true\n  },\n  {\n    path: 'music-artists',\n    text: 'Music Artists',\n    component: MusicArtists,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'open-apis',\n    text: 'Open APIs',\n    component: OpenAPIs,\n    navigation: true\n  },\n  {\n    path: 'open-apis-list',\n    text: 'Open APIs List',\n    component: OpenAPIsList,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-provinces',\n    text: 'Open APIs GHN Provinces',\n    component: GHNProvinces,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-districts',\n    text: 'Open APIs GHN Districts',\n    component: GHNDistricts,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-wards',\n    text: 'Open APIs GHN Wards',\n    component: GHNWards,\n    navigation: false\n  },\n  {\n    path: 'open-apis-vietcetera',\n    text: 'Open APIs Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'sports-vleague',\n    text: 'Sports VLeague',\n    component: SportsVLeague,\n    navigation: false\n  },\n  {\n    path: 'weather',\n    text: 'Weather',\n    component: Weather,\n    navigation: true\n  },\n  {\n    path: 'weather-current',\n    text: 'Weather Current',\n    component: WeatherCurrent,\n    navigation: false\n  },\n  {\n    path: 'youtube',\n    text: 'YouTube',\n    component: YouTube,\n    navigation: true\n  },\n  {\n    path: 'youtube-trending',\n    text: 'YouTube Trending',\n    component: YouTubeTrending,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import { storage } from '../../services';\n\nexport const updateTheme = (theme: string) => {\n  storage.set('theme', theme);\n  return { type: theme };\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Navbar, Nav, Dropdown, DropdownButton, Form } from 'react-bootstrap';\n\nimport routes from '../routers';\nimport * as themeActions from '../redux/actions/theme';\n\ninterface INavigationProps {\n  theme: string;\n  updateTheme: (theme: string) => {};\n}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nclass Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n\n    this.updateTheme = this.updateTheme.bind(this);\n  }\n\n  async updateTheme() {\n    let { theme = 'light' } = this.props;\n    theme = theme === 'light' ? 'dark' : 'light';\n    this.props.updateTheme(theme);\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n    const { theme = '' } = this.props;\n\n    const bgColor: string = theme === 'light' ? 'bg-danger' : 'bg-black';\n    const border: string =\n      theme === 'light' ? 'border-bottom border-danger' : 'border-bottom border-white';\n\n    return (\n      <Navbar className={`${bgColor} ${border}`} expand=\"sm\" variant=\"dark\">\n        <div className=\"container-fluid p-0\">\n          <Navbar.Brand href=\"#\" className=\"text-white\">\n            VIETNAM\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar-navs\"></Navbar.Toggle>\n          <Navbar.Collapse id=\"navbar-navs\">\n            <Nav className=\"mr-auto\">\n              <Nav.Item className=\"mr-3\">\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n              <Nav.Item>\n                <a\n                  href=\"https://www.npmjs.com/package/vnapis\"\n                  className=\"text-white text-uppercase\"\n                  rel=\"noreferrer\"\n                  target=\"_blank\">\n                  npm\n                </a>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Form inline>\n                <Dropdown className=\"mr-3\">\n                  <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                    {routes\n                      .filter(route => route.navigation)\n                      .map((route, index) => {\n                        const { path: pathname, text } = route;\n                        return (\n                          <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                            {text}\n                          </Dropdown.Item>\n                        );\n                      })}\n                  </DropdownButton>\n                </Dropdown>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"custom-switch\"\n                  className=\"text-white cursor-pointer\"\n                  checked={theme !== 'light'}\n                  onChange={() => this.updateTheme()}\n                  label={theme.toUpperCase()}\n                />\n              </Form>\n            </Nav>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme = '' } = state;\n  return { theme };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  updateTheme: (theme: string) => dispatch(themeActions.updateTheme(theme))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Doc from './Doc';\nimport { endpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n  theme: string;\n}\n\ninterface ISmallDocState {\n  endpoints: any;\n}\n\nclass SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const { theme } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small className={`${textColor}`}>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header, theme } = this.props;\n    const textColor: string = theme === 'light' ? 'text-dark' : 'text-white';\n    const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n    return (\n      <div>\n        <h6>\n          <b className={`${textColor}`}>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"content-height overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"content-height overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nexport default connect(mapStateToProps)(SmallDoc);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport { Footer, Navigation } from './components';\nimport routes from './routers';\nimport { storage } from './services';\nimport * as themeActions from './redux/actions/theme';\n\ninterface IAppProps {\n  theme: string;\n  updateTheme: (theme: string) => {};\n}\n\nclass App extends Component<IAppProps> {\n  componentDidMount() {\n    const theme = storage.get('theme') || 'light';\n    this.props.updateTheme(theme);\n  }\n\n  render() {\n    const { theme } = this.props;\n    const bgColor: string = theme === 'light' ? 'text-dark' : 'bg-black';\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <main className={`${bgColor} overflow-auto pt-3 pb-3`}>\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route exact key={index} path={`/${path}`} component={component}></Route>;\n            })}\n          </main>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const { theme } = state;\n  return { theme };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  updateTheme: (theme: string) => dispatch(themeActions.updateTheme(theme))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const LIGHT_THEME: string = 'light';\nconst DARK_THEME: string = 'dark';\n\nconst themeReducer = (state: string = LIGHT_THEME, action: any) => {\n  switch (action.type) {\n    case LIGHT_THEME:\n      state = LIGHT_THEME;\n      return state;\n    case DARK_THEME:\n      state = DARK_THEME;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n","import { combineReducers } from 'redux';\n\nimport themeReducer from './theme';\n\nconst reducers = combineReducers({ theme: themeReducer });\n\nexport default reducers;\n","import { createStore, Store } from 'redux';\n\nimport reducers from './reducers';\n\nconst store: Store = createStore(reducers);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './App';\nimport store from './redux/store';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}