{"version":3,"sources":["configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/index.ts","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","components/Navigation.tsx","components/SmallDoc.tsx","pages/demo/administrative-divisions/Districts.tsx","pages/demo/administrative-divisions/PostalCodes.tsx","pages/demo/administrative-divisions/Provinces.tsx","pages/demo/administrative-divisions/Wards.tsx","pages/demo/banks/Forex.tsx","pages/demo/banks/History.tsx","pages/demo/banks/List.tsx","pages/demo/calendar/Converter.tsx","pages/docs/AdministrativeDivisions.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/LicensePlates.tsx","pages/docs/Music.tsx","pages/docs/News.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Technologies.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/music/Artists.tsx","pages/demo/news/Feed.tsx","routers/index.ts","pages/demo/news/Sources.tsx","pages/demo/news/Trends.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/sports/Clubs.tsx","pages/demo/technologies/APIs.tsx","pages/demo/technologies/ghn/Provinces.tsx","pages/demo/technologies/ghn/Districts.tsx","pages/demo/technologies/ghn/Wards.tsx","pages/demo/technologies/Vietcetera.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","periods","label","value","months","name","short","endpoints","administrativeDivisions","getPostalCodes","id","public","method","path","url","demo","request","headers","key","query","type","required","description","body","response","200","schema","example","code","province","province_id","400","message","getProvinces","capital","level","level_en","macro_region","macro_region_en","region","region_en","getDistricts","getWards","ward","district","getTotalWards","total","banks","getForexBanks","getForexRates","currencies","data","syncForexRates","status","calendar","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","ethnicMinorities","getEthnicMinorities","type_en","finance","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHistory","history","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","calculateProfit","profit","government","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","percentage","getMinistries","name_en","getMinisters","licensePlates","getLicensePlates","license","definition","music","getMusicArtists","news","getArticles","source","pubDate","day","hours","minutes","seconds","timestamp","dateTimeString","getTrends","hour","categories","getSources","category","getCategories","phones","getPhonesPrefixes","prefix","provider","provider_id","getPhonesProviders","prefixes","sports","getSportsClubs","sport","sport_en","competition","city","technologies","getTechnologies","type_id","npm","getGHNProvinces","getGHNDistricts","district_id","support_type","getGHNWards","getVietceteraArticles","publishDate","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","articles","buy","sell","volume","from","to","currency","bank","skip","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","apis","helper","API","props","api","className","onClick","copyToClipboard","Component","CURL","bind","buildDataRaw","trim","dataRaw","header","index","lastFlag","Table","loading","caption","rows","rowConfigs","emptyRowsText","Spinner","animation","variant","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","state","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","getFullYear","href","target","rel","Navigation","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","route","navigation","as","Link","SmallDoc","renderSidebar","renderTable","scrollIntoView","element","document","getElementById","behavior","colors","get","post","color","toLowerCase","MapsDistricts","provinces","districts","updateProvince","setState","event","Card","Body","Form","Group","Control","defaultValue","onChange","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","wards","active","renderPagination","goToPage","updateActive","page","Math","floor","final","items","push","Pagination","size","Prev","Next","BanksForex","sortBy","sortDir","getBanksForexRates","sort","renderForm","updateCurrency","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","time","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","find","rates","rate","labels","minute","datasets","buyData","transferData","sellData","lines","deepClone","assign","Title","BanksList","Button","CalendarConverter","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","capitalize","split","controlId","Label","placeholder","pattern","Maps","Banks","Calendar","Docs","Accordion","Toggle","Collapse","groups","EthnicMinorities","Finance","Government","LicensePlates","Music","News","Phones","Sports","Technologies","EthnicMinoritiesList","filterEthnicMinorities","ethnicMinority","typeFlag","typeEnFlag","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","processPeriod","highlight","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","concat","array","indexOf","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","Home","docs","filterAPIs","externalPackages","filterExternalPackages","filterPackages","updateQuery","packages","_package","LicensePlatesList","filterLicensePlates","licensePlate","MusicArtists","artists","NewsFeed","sources","updateCategory","updateSource","ListGroup","article","Subtitle","Text","component","AdministrativeDivisions","AdministrativeDivisionsPostalCodes","AdministrativeDivisionsProvinces","AdministrativeDivisionsDistricts","AdministrativeDivisionsWards","Badge","getGoogleTrends","trend","providers","_provider","clubs","filterTechnologies","technology","nameFlag","option","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d5f0aa75.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\ninterface IPeriod {\n  label: string;\n  value: string;\n}\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\ninterface IMonth {\n  name: string;\n  short: string;\n}\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'administrativeDivisions'\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'music'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport interface IEndpoints {\n  administrativeDivisions: IAdministrativeDivisionsEndpoints;\n  banks: IBanksEndpoints;\n  calendar: ICalendarEndpoints;\n  ethnicMinorities: IEthnicMinoritiesEndpoints;\n  finance: IFinanceEndpoints;\n  government: IGovernmentEndpoints;\n  licensePlates: ILicensePlatesEndpoints;\n  music: IMusicEndpoints;\n  news: INewsEndpoints;\n  phones: IPhonesEndpoints;\n  sports: ISportsEndpoints;\n  technologies: ITechnologiesEndpoints;\n}\n\ninterface IAdministrativeDivisionsEndpoints {\n  getPostalCodes: IEndpoint;\n  getProvinces: IEndpoint;\n  getDistricts: IEndpoint;\n  getWards: IEndpoint;\n  getTotalWards: IEndpoint;\n}\n\ninterface IBanksEndpoints {\n  getForexBanks: IEndpoint;\n  getForexRates: IEndpoint;\n  syncForexRates: IEndpoint;\n}\ninterface ICalendarEndpoints {\n  convertLunarToSolar: IEndpoint;\n  convertSolarToLunar: IEndpoint;\n  getCanChi: IEndpoint;\n}\ninterface IEthnicMinoritiesEndpoints {\n  getEthnicMinorities: IEndpoint;\n}\ninterface IFinanceEndpoints {\n  getStockCompanies: IEndpoint;\n  getStockHistory: IEndpoint;\n  getStockHighlights: IEndpoint;\n  getStockPotentials: IEndpoint;\n  calculateProfit: IEndpoint;\n}\ninterface IGovernmentEndpoints {\n  getGeneralSecretaries: IEndpoint;\n  getPresidents: IEndpoint;\n  getPrimeMinisters: IEndpoint;\n  getNationalAssemblyChairs: IEndpoint;\n  getNationalAssemblyMembers: IEndpoint;\n  getMinistries: IEndpoint;\n  getMinisters: IEndpoint;\n}\ninterface ILicensePlatesEndpoints {\n  getLicensePlates: IEndpoint;\n}\n\ninterface IMusicEndpoints {\n  getMusicArtists: IEndpoint;\n}\n\ninterface INewsEndpoints {\n  getArticles: IEndpoint;\n  getTrends: IEndpoint;\n  getSources: IEndpoint;\n  getCategories: IEndpoint;\n}\ninterface IPhonesEndpoints {\n  getPhonesPrefixes: IEndpoint;\n  getPhonesProviders: IEndpoint;\n}\ninterface ISportsEndpoints {\n  getSportsClubs: IEndpoint;\n}\ninterface ITechnologiesEndpoints {\n  getTechnologies: IEndpoint;\n  getGHNProvinces: IEndpoint;\n  getGHNDistricts: IEndpoint;\n  getGHNWards: IEndpoint;\n  getVietceteraArticles: IEndpoint;\n}\n\nexport interface IEndpoint {\n  id: string;\n  public: boolean;\n  name: string;\n  path: string;\n  url: string;\n  demo: string;\n  method: string;\n  request: IEndpointRequest;\n  response: IEndpointResponse;\n}\n\nexport interface IEndpointRequest {\n  headers?: Array<IEndpointRequestHeader>;\n  query: Array<IEndpointRequestQuery>;\n  body: Array<IEndpointRequestBody>;\n}\n\ninterface IEndpointRequestHeader {\n  key: string;\n  value: string;\n}\n\ninterface IEndpointRequestQuery {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointRequestBody {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointResponse {\n  200: IEndpointResponseDetails;\n  400: IEndpointResponseDetails;\n}\n\ninterface IEndpointResponseDetails {\n  schema: Array<IEndpointResponseSchema>;\n  example: any;\n}\n\ninterface IEndpointResponseSchema {\n  name: string;\n  type: string;\n  description: string;\n}\n\nexport const endpoints: IEndpoints = {\n  administrativeDivisions: {\n    getPostalCodes: {\n      id: 'getPostalCodes',\n      name: 'Get Postal Codes',\n      public: true,\n      method: 'GET',\n      path: '/administrative-divisions/postal-codes',\n      url: `${baseAPI}/administrative-divisions/postal-codes`,\n      demo: 'administrative-divisions-postal-codes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'code', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              code: '<string>',\n              province: '<string>',\n              province_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getProvinces: {\n      id: 'getProvinces',\n      name: 'Get Provinces',\n      public: true,\n      method: 'GET',\n      path: '/administrative-divisions/provinces',\n      url: `${baseAPI}/administrative-divisions/provinces`,\n      demo: 'administrative-divisions-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'level_en', type: 'string', required: false, description: '' },\n          { name: 'macro_region_en', type: 'string', required: false, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'capital', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'macro_region', type: 'string', description: '' },\n            { name: 'macro_region_en', type: 'string', description: '' },\n            { name: 'region', type: 'string', description: '' },\n            { name: 'region_en', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              province_id: '<string>',\n              name: '<string>',\n              capital: '<string>',\n              level: '<string>',\n              level_en: '<string>',\n              macro_region: '<string>',\n              macro_region_en: '<string>',\n              region: '<string>',\n              region_en: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getDistricts: {\n      id: 'getDistricts',\n      name: 'Get Districts',\n      public: true,\n      method: 'GET',\n      path: '/administrative-divisions/districts',\n      url: `${baseAPI}/administrative-divisions/districts`,\n      demo: 'administrative-divisions-districts',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              name: '<string>',\n              level: '<string>',\n              level_en: '<string>',\n              province: '<string>',\n              province_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getWards: {\n      id: 'getWards',\n      name: 'Get Wards',\n      public: true,\n      method: 'GET',\n      path: '/administrative-divisions/wards',\n      url: `${baseAPI}/administrative-divisions/wards`,\n      demo: 'administrative-divisions-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'skip', type: 'number', required: false, description: '' },\n          { name: 'limit', type: 'number', required: false, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'ward', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              ward: '<string>',\n              district: '<string>',\n              province: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getTotalWards: {\n      id: 'getTotalWards',\n      name: 'Get Total Wards',\n      public: false,\n      method: 'GET',\n      path: '/administrative-divisions/wards/total',\n      url: `${baseAPI}/administrative-divisions/wards/total`,\n      demo: 'administrative-divisions-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [{ name: 'total', type: 'number', description: '' }],\n          example: [{ total: '<number>' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  banks: {\n    getForexBanks: {\n      id: 'getForexBanks',\n      name: 'Get Forex Banks',\n      public: true,\n      path: '/banks/forex/banks',\n      url: `${baseAPI}/banks/forex/banks`,\n      demo: 'banks-list',\n      method: 'GET',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' }\n          ],\n          example: [{ id: '<string>', name: '<string>', url: '<string>' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getForexRates: {\n      id: 'getForexRates',\n      name: 'Get Forex Rates',\n      public: true,\n      method: 'GET',\n      path: '/banks/forex/rates',\n      url: `${baseAPI}/banks/forex/rates`,\n      demo: 'banks-forex',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'currencies', type: 'Array<string>', description: '' },\n            { name: 'data', type: 'Array<Rates>', description: '' }\n          ],\n          example: {\n            currencies: '<Array<string>>',\n            data: '<Array<any>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    syncForexRates: {\n      id: 'syncForexRates',\n      name: 'Sync Forex Rates',\n      public: false,\n      method: 'POST',\n      path: '/banks/forex/sync',\n      url: `${baseAPI}/banks/forex/sync`,\n      demo: 'banks-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'id', required: true, type: 'string', description: '' }]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'status', type: 'string', description: '' }],\n          example: { status: '<string>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  calendar: {\n    convertLunarToSolar: {\n      id: 'convertLunarToSolar',\n      name: 'Convert Lunar Date to Solar Date',\n      public: true,\n      method: 'POST',\n      path: '/calendar/lunar2solar',\n      url: `${baseAPI}/calendar/lunar2solar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: { year: '<number>', month: '<number>', date: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    convertSolarToLunar: {\n      id: 'convertSolarToLunar',\n      name: 'Convert Solar Date to Lunar Date',\n      public: true,\n      method: 'POST',\n      path: '/calendar/solar2lunar',\n      url: `${baseAPI}/calendar/solar2lunar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: { year: '<number>', month: '<number>', date: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getCanChi: {\n      id: 'getCanChi',\n      name: 'Get Can Chi of Lunar Date',\n      public: true,\n      method: 'POST',\n      path: '/calendar/lunar/can-chi',\n      url: `${baseAPI}/calendar/lunar/can-chi`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'canChi', type: 'string', description: '' }],\n          example: { canChi: '<string>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  ethnicMinorities: {\n    getEthnicMinorities: {\n      id: 'getEthnicMinorities',\n      name: 'Get Ethnic Minorities',\n      public: true,\n      method: 'GET',\n      path: '/ethnic-minorities',\n      url: `${baseAPI}/ethnic-minorities`,\n      demo: 'ethnic-minorities-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_en', type: 'string', description: '' }\n          ],\n          example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  finance: {\n    getStockCompanies: {\n      id: 'getStockCompanies',\n      name: 'Get Listed Companies',\n      public: true,\n      method: 'GET',\n      path: '/finance/companies',\n      url: `${baseAPI}/finance/companies`,\n      demo: 'finance-companies',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'market', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'supersector', type: 'string', description: '' },\n            { name: 'sector', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'listingDate', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              market: '<string>',\n              group: '<string>',\n              symbol: '<string>',\n              name: '<string>',\n              industry: '<string>',\n              supersector: '<string>',\n              sector: '<string>',\n              subsector: '<string>',\n              listingDate: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockHistory: {\n      id: 'getStockHistory',\n      name: 'Get Stock History',\n      public: true,\n      method: 'GET',\n      path: '/finance/history',\n      url: `${baseAPI}/finance/history`,\n      demo: 'finance-history',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'symbol', type: 'string', required: true, description: '' },\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'history', type: 'Array<Date>', description: '' }\n          ],\n          example: {\n            symbol: '<string>',\n            name: '<string>',\n            group: '<string>',\n            industry: '<string>',\n            subsector: '<string>',\n            history: '<Array<any>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockHighlights: {\n      id: 'getStockHighlights',\n      name: 'Get Stock Highlights',\n      public: false,\n      method: 'POST',\n      path: '/finance/highlights',\n      url: `${baseAPI}/finance/highlights`,\n      demo: 'finance-highlights',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'average', type: 'number', description: '' },\n            { name: 'diff', type: 'number', description: '' },\n            { name: 'diffToMax', type: 'number', description: '' },\n            { name: 'diffToMin', type: 'number', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'latest', type: 'number', description: '' },\n            { name: 'latestDate', type: 'string', description: '' },\n            { name: 'low', type: 'boolean', description: '' },\n            { name: 'max', type: 'number', description: '' },\n            { name: 'maxDate', type: 'string', description: '' },\n            { name: 'median', type: 'number', description: '' },\n            { name: 'min', type: 'number', description: '' },\n            { name: 'minDate', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'numberOfDates', type: 'number', description: '' },\n            { name: 'start', type: 'number', description: '' },\n            { name: 'startDate', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              average: '<number>',\n              diff: '<number>',\n              diffToMax: '<number>',\n              diffToMin: '<number>',\n              group: '<string>',\n              industry: '<string>',\n              latest: '<number>',\n              latestDate: '<string>',\n              low: '<boolean>',\n              max: '<number>',\n              maxDate: '<string>',\n              median: '<number>',\n              min: '<number>',\n              minDate: '<string>',\n              name: '<string>',\n              numberOfDates: '<number>',\n              start: '<number>',\n              startDate: '<string>',\n              subsector: '<string>',\n              symbol: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockPotentials: {\n      id: 'getStockPotentials',\n      name: 'Get Stock Potentials',\n      public: false,\n      method: 'POST',\n      path: '/finance/potentials',\n      url: `${baseAPI}/finance/potentials`,\n      demo: 'finance-potentials',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'average', type: 'number', description: '' },\n            { name: 'diff', type: 'number', description: '' },\n            { name: 'diffToMax', type: 'number', description: '' },\n            { name: 'diffToMin', type: 'number', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'latest', type: 'number', description: '' },\n            { name: 'latestDate', type: 'string', description: '' },\n            { name: 'low', type: 'boolean', description: '' },\n            { name: 'max', type: 'number', description: '' },\n            { name: 'maxDate', type: 'string', description: '' },\n            { name: 'median', type: 'number', description: '' },\n            { name: 'min', type: 'number', description: '' },\n            { name: 'minDate', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'numberOfDates', type: 'number', description: '' },\n            { name: 'start', type: 'number', description: '' },\n            { name: 'startDate', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              average: '<number>',\n              diff: '<number>',\n              diffToMax: '<number>',\n              diffToMin: '<number>',\n              group: '<string>',\n              industry: '<string>',\n              latest: '<number>',\n              latestDate: '<string>',\n              low: '<boolean>',\n              max: '<number>',\n              maxDate: '<string>',\n              median: '<number>',\n              min: '<number>',\n              minDate: '<string>',\n              name: '<string>',\n              numberOfDates: '<number>',\n              start: '<number>',\n              startDate: '<string>',\n              subsector: '<string>',\n              symbol: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    calculateProfit: {\n      id: 'calculateProfit',\n      name: 'Calculate Profit',\n      public: false,\n      method: 'POST',\n      path: '/finance/profit',\n      url: `${baseAPI}/finance/profit`,\n      demo: 'finance-profit',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'buy', type: 'number', required: true, description: '' },\n          { name: 'sell', type: 'number', required: true, description: '' },\n          { name: 'volume', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'profit', type: 'number', description: '' }],\n          example: { profit: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  government: {\n    getGeneralSecretaries: {\n      id: 'getGeneralSecretaries',\n      name: 'Get General Secretaries',\n      public: true,\n      method: 'GET',\n      path: '/government/general-secretaries',\n      url: `${baseAPI}/government/general-secretaries`,\n      demo: 'government-general-secretaries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'string', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPresidents: {\n      id: 'getPresidents',\n      name: 'Get Presidents',\n      public: true,\n      method: 'GET',\n      path: '/government/presidents',\n      url: `${baseAPI}/government/presidents`,\n      demo: 'government-presidents',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPrimeMinisters: {\n      id: 'getPrimeMinisters',\n      name: 'Get Prime Ministers',\n      public: true,\n      method: 'GET',\n      path: '/government/prime-ministers',\n      url: `${baseAPI}/government/prime-ministers`,\n      demo: 'government-prime-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getNationalAssemblyChairs: {\n      id: 'getNationalAssemblyChairs',\n      name: 'Get National Assembly Chairs',\n      public: true,\n      method: 'GET',\n      path: '/government/national-assembly/chairs',\n      url: `${baseAPI}/government/national-assembly/chairs`,\n      demo: 'government-national-assembly-chairs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getNationalAssemblyMembers: {\n      id: 'getNationalAssemblyMembers',\n      name: 'Get National Assembly Members',\n      public: true,\n      method: 'GET',\n      path: '/government/national-assembly/members',\n      url: `${baseAPI}/government/national-assembly/members`,\n      demo: 'government-national-assembly-members',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'no', type: 'number', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'no', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'date_of_birth', type: 'string', description: '' },\n            { name: 'city_of_birth', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'degree', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'percentage', type: 'number', description: '' }\n          ],\n          example: [\n            {\n              no: '<number>',\n              name: '<string>',\n              date_of_birth: '<string>',\n              city_of_birth: '<string>',\n              gender: '<string>',\n              degree: '<string>',\n              province: '<string>',\n              district: '<string>',\n              percentage: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMinistries: {\n      id: 'getMinistries',\n      name: 'Get Ministries',\n      public: true,\n      method: 'GET',\n      path: '/government/ministries',\n      url: `${baseAPI}/government/ministries`,\n      demo: 'government-ministries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'name_en', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              short: '<string>',\n              name: '<string>',\n              name_en: '<string>',\n              level: '<string>',\n              level_en: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMinisters: {\n      id: 'getMinisters',\n      name: 'Get Ministers',\n      public: true,\n      method: 'GET',\n      path: '/government/ministers',\n      url: `${baseAPI}/government/ministers`,\n      demo: 'government-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  licensePlates: {\n    getLicensePlates: {\n      id: 'getLicensePlates',\n      name: 'Get License Plates',\n      public: true,\n      method: 'GET',\n      path: '/license-plates',\n      url: `${baseAPI}/license-plates`,\n      demo: 'license-plates-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'license', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'license', type: 'string', description: '' },\n            { name: 'definition', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' }\n          ],\n          example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  music: {\n    getMusicArtists: {\n      id: 'getMusicArtists',\n      name: 'Get Music Artists',\n      public: true,\n      method: 'GET',\n      path: '/music/artists',\n      url: `${baseAPI}/music/artists`,\n      demo: 'music-artists',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [{ name: 'name', type: 'string', description: '' }],\n          example: [\n            {\n              name: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  news: {\n    getArticles: {\n      id: 'getArticles',\n      name: 'Get Articles',\n      public: true,\n      method: 'GET',\n      path: '/news',\n      url: `${baseAPI}/news`,\n      demo: 'news-feed',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'category', type: 'string', required: true, description: '' },\n          { name: 'source', type: 'string', required: true, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'source', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' },\n            { name: 'pubDate', type: 'string', description: '' },\n            { name: 'day', type: 'string', description: '' },\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hours', type: 'number', description: '' },\n            { name: 'minutes', type: 'number', description: '' },\n            { name: 'seconds', type: 'number', description: '' },\n            { name: 'timestamp', type: 'number', description: '' },\n            { name: 'dateTimeString', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              url: '<string>',\n              source: '<string>',\n              description: '<string>',\n              pubDate: '<string>',\n              day: '<string>',\n              year: '<number>',\n              month: '<number>',\n              date: '<number>',\n              hours: '<number>',\n              minutes: '<number>',\n              seconds: '<number>',\n              timestamp: '<number>',\n              dateTimeString: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getTrends: {\n      id: 'getTrends',\n      name: 'Get (Google) Trends',\n      public: true,\n      method: 'GET',\n      path: '/news/trends',\n      url: `${baseAPI}/news/trends`,\n      demo: 'news-trends',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hour', type: 'number', description: '' },\n            { name: 'trends', type: 'Array<string>', description: '' }\n          ],\n          example: {\n            year: '<number>',\n            month: '<number>',\n            date: '<number>',\n            hour: '<number>',\n            categories: '<Array<string>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getSources: {\n      id: 'getSources',\n      name: 'Get Sources',\n      public: true,\n      method: 'GET',\n      path: '/news/sources',\n      url: `${baseAPI}/news/sources`,\n      demo: 'news-sources',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'category', type: 'string', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ],\n          example: [\n            {\n              id: '<string>',\n              name: '<string>',\n              url: '<string>',\n              category: '<string>',\n              categories: '<Array<string>>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getCategories: {\n      id: 'getCategories',\n      name: 'Get Categories',\n      public: true,\n      method: 'GET',\n      path: '/news/categories',\n      url: `${baseAPI}/news/categories`,\n      demo: 'news-categories',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'total', type: 'number', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ],\n          example: {\n            total: '<number>',\n            categories: '<Array<string>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  phones: {\n    getPhonesPrefixes: {\n      id: 'getPhonesPrefixes',\n      name: 'Get Phone Prefixes',\n      public: true,\n      method: 'GET',\n      path: '/phones/prefixes',\n      url: `${baseAPI}/phones/prefixes`,\n      demo: 'phones-prefixes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'prefix', type: 'string', description: '' },\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'provider_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              id: '<string>',\n              prefix: '<string>',\n              provider: '<string>',\n              provider_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPhonesProviders: {\n      id: 'getPhonesProviders',\n      name: 'Get Phone Providers',\n      public: true,\n      method: 'GET',\n      path: '/phones/providers',\n      url: `${baseAPI}/phones/providers`,\n      demo: 'phones-providers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'prefixes', type: 'Array<string>', description: '' }\n          ],\n          example: [\n            {\n              provider: '<string>',\n              prefixes: '<Array<string>>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  sports: {\n    getSportsClubs: {\n      id: 'getSportsClubs',\n      name: 'Get Sports Clubs',\n      public: true,\n      method: 'GET',\n      path: '/sports/clubs',\n      url: `${baseAPI}/sports/clubs`,\n      demo: 'sports-clubs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'sport', type: 'string', description: '' },\n            { name: 'sport_en', type: 'string', description: '' },\n            { name: 'competition', type: 'string', description: '' },\n            { name: 'city', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              sport: '<string>',\n              sport_en: '<string>',\n              competition: '<string>',\n              city: '<string>',\n              name: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  technologies: {\n    getTechnologies: {\n      id: 'getTechnologies',\n      name: 'Get Public APIs',\n      public: true,\n      method: 'GET',\n      path: '/technologies',\n      url: `${baseAPI}/technologies`,\n      demo: 'technologies-apis',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_id', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'npm', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              name: '<string>',\n              type: '<string>',\n              type_id: '<string>',\n              url: '<string>',\n              npm: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getGHNProvinces: {\n      id: 'getGHNProvinces',\n      name: 'GHN - Get Provinces',\n      public: true,\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/provinces',\n      url: `${baseAPI}/technologies/giaohangnhanh/provinces`,\n      demo: 'technologies-ghn-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              province_id: '<string>',\n              name: '<string>',\n              code: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getGHNDistricts: {\n      id: 'getGHNDistricts',\n      name: 'GHN - Get Districts',\n      public: true,\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/districts',\n      url: `${baseAPI}/technologies/giaohangnhanh/districts`,\n      demo: 'technologies-ghn-districts',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'number', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'district_id', type: 'number', description: '' },\n            { name: 'province_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' },\n            { name: 'type', type: 'number', description: '' },\n            { name: 'support_type', type: 'number', description: '' }\n          ],\n          example: [\n            {\n              district_id: '<string>',\n              province_id: '<string>',\n              name: '<string>',\n              code: '<string>',\n              type: '<number>',\n              support_type: '<number>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getGHNWards: {\n      id: 'getGHNWards',\n      name: 'GHN - Get Wards',\n      public: true,\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/wards',\n      url: `${baseAPI}/technologies/giaohangnhanh/wards`,\n      demo: 'technologies-ghn-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'district_id', type: 'number', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'district_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              district_id: '<string>',\n              name: '<string>',\n              code: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getVietceteraArticles: {\n      id: 'getVietceteraArticles',\n      name: 'Get Vietcetera Articles',\n      public: true,\n      method: 'GET',\n      path: '/technologies/vietcetera',\n      url: `${baseAPI}/technologies/vietcetera`,\n      demo: 'technologies-vietcetera',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'publishDate', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              url: '<string>',\n              publishDate: '<string>',\n              description: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  }\n};\n","import { endpoints, IEndpoint } from '../configs';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries() {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents() {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters() {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs() {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number) {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries() {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string) {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends() {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources() {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCategories() {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint);\n    return categories;\n  }\n\n  public async getArticles(options: any = {}) {\n    const { category, source } = options;\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number) {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies() {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: {}, query: { symbol, from, to } });\n  }\n\n  public async getBanksForexRates() {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks() {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  public async syncForexRates(id: string) {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getPostalCodes() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProvinces() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDistricts(province_id: string) {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getWards(skip: number) {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getWards;\n    return await this.fetch(endpoint, { query: { skip }, body: {} });\n  }\n\n  public async getTotalWards(): Promise<number> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getTotalWards;\n    const { total = 0 } = await this.fetch(endpoint);\n    return total;\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates() {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities() {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getTechnologies() {\n    const endpoint: IEndpoint = endpoints.technologies.getTechnologies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesProviders() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesPrefixes() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string) {\n    const endpoint: IEndpoint = endpoints.technologies.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n\n  public async getGHNProvinces() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNDistricts() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNWards() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMusicArtists() {\n    const endpoint: IEndpoint = endpoints.music.getMusicArtists;\n    return await this.fetch(endpoint);\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\n\nexport { apis, graphql, helper };\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n}\n\nexport default class API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n}\n\nexport default class Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data'\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\n\nexport default class Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">\n                    <b>{name}</b>\n                  </h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className=\"mb-3\">\n          <b>{header}</b>\n        </h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavigationProps {}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path: pathname, text } = route;\n                      return (\n                        <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Doc from './Doc';\nimport { endpoints, IEndpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n}\n\ninterface ISmallDocState {\n  endpoints: IEndpoints;\n}\n\nexport default class SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header } = this.props;\n    const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n    return (\n      <div>\n        <h6>\n          <b>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.getDistricts = this.getDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  async getProvinces() {\n    const provinces = await apis.getProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={this.state.province_id}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Pagination } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n  total: number;\n  active: number;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true, total: 0, active: 1 };\n\n    this.getWards = this.getWards.bind(this);\n    this.getTotalWards = this.getTotalWards.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n    this.updateActive = this.updateActive.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTotalWards();\n    await this.getWards();\n  }\n\n  async getWards(page: number = 0) {\n    this.setState({ loading: true });\n    const skip: number = page * 100;\n    const wards = await apis.getWards(skip);\n    this.setState({ wards, loading: false });\n  }\n\n  async getTotalWards() {\n    const total: number = await apis.getTotalWards();\n    this.setState({ total });\n  }\n\n  async goToPage(page: number) {\n    await this.setState({ active: page });\n    await this.getWards(page - 1);\n  }\n\n  async updateActive(value: number) {\n    let { active } = this.state;\n    active += value;\n    await this.setState({ active });\n    await this.getWards(active - 1);\n  }\n\n  renderPagination() {\n    const { total, active } = this.state;\n\n    if (!total) return '';\n\n    const max: number = Math.floor(total / 100);\n\n    const final: number = active + 10 < max ? active + 10 : max;\n    const start: number = final === max ? max - 10 : active;\n    const items: Array<any> = [];\n    for (let page = start; page <= final; page++) {\n      items.push(\n        <Pagination.Item key={page} active={page === active} onClick={() => this.goToPage(page)}>\n          {page}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination size=\"sm\" className=\"justify-content-center\">\n        {active !== 1 && (\n          <Pagination.Item key={1} onClick={() => this.goToPage(1)}>\n            1\n          </Pagination.Item>\n        )}\n        {active !== 1 && <Pagination.Prev onClick={() => this.updateActive(1)} />}\n        {items}\n        {final !== max && <Pagination.Next onClick={() => this.updateActive(1)} />}\n        {final !== max && (\n          <Pagination.Item key={max} onClick={() => this.goToPage(max)}>\n            {max}\n          </Pagination.Item>\n        )}\n      </Pagination>\n    );\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    const rowConfigs: Array<any> = [\n      { header: 'Ward', key: 'ward' },\n      { header: 'District', key: 'district' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {this.renderPagination()}\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksForexProps {}\n\ninterface IBanksForexState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nexport default class BanksForex extends Component<IBanksForexProps, IBanksForexState> {\n  constructor(props: IBanksForexProps) {\n    super(props);\n\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.updateCurrency = this.updateCurrency.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    await this.setState({ data });\n  }\n\n  async updateCurrency(event: any) {\n    const { value: currency } = event.target;\n    await this.setState({ currency });\n  }\n\n  renderForm(currencies: Array<any>) {\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"currency\"\n            value={this.state.currency}\n            onChange={this.updateCurrency}>\n            {currencies.map((currency, index) => {\n              return (\n                <option key={index} value={currency}>\n                  {currency.toUpperCase()}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && this.renderForm(currencies)}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                          Buy\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                          Transfer\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                          Sell\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const { bank = '', time = '', buy = {}, transfer = {}, sell = {} } = item;\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buy[currency] || ''}</td>\n                              <td>{transfer[currency] || ''}</td>\n                              <td>{sell[currency] || ''}</td>\n                              <td>{time}</td>\n                            </tr>\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    await this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    await this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.bank}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank.name}>\n                          {bank.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    await this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string) {\n    const message = await apis.syncForexRates(id);\n    alert(message);\n  }\n\n  renderTable(loading: boolean, banks: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', url = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = { solarDate: '', solarString: '', lunarDate: '', lunarString: '' };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    await this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    return await apis.getCanChi(year, month, date);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"AdministrativeDivisions\" className=\"container\">\n        <SmallDoc group={'administrativeDivisions'} header={'Administrative Divisions'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints, IEndpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {}\n\ninterface IDocsState {\n  endpoints: IEndpoints;\n}\n\nexport default class Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n      return { group, apis };\n    });\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.capitalize(group);\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className=\"m-0 p-0 text-dark\"\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              {groups.length > 0 &&\n                groups.map((group: string, index: number) => {\n                  return <Doc key={index} group={group} header={helper.capitalize(group)}></Doc>;\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Music extends Component {\n  render() {\n    return (\n      <div id=\"Music\" className=\"container\">\n        <SmallDoc group={'music'} header={'Music'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\" className=\"container\">\n        <SmallDoc group={'technologies'} header={'Technologies'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    await this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div id=\"FinanceHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.period}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"VIC\"\n                    value={this.state.symbol}\n                    onChange={this.updateSymbol}>\n                    {symbols.map((symbol, index) => {\n                      return (\n                        <option key={index} value={symbol}>\n                          {symbol}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {helper.numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {helper.numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {helper.numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.ministry}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\ninterface IHomeProps {}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n  externalPackages: Array<any>;\n  filterExternalPackages: Array<any>;\n}\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis = [\n      {\n        name: 'administrative-divisions',\n        npm: 'vnapis#administrative-divisions',\n        docs: '/administrative-divisions'\n      },\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'music',\n        npm: 'vnapis#music',\n        docs: '/music'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis,\n      externalPackages: [],\n      filterExternalPackages: []\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    await this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title: string, packages: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IMusicArtistsProps {}\n\ninterface IMusicArtistsState {\n  artists: Array<any>;\n  loading: boolean;\n}\n\nexport default class MusicArtists extends Component<IMusicArtistsProps, IMusicArtistsState> {\n  constructor(props: IMusicArtistsProps) {\n    super(props);\n\n    this.state = { artists: [], loading: true };\n\n    this.getMusicArtists = this.getMusicArtists.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMusicArtists();\n  }\n\n  async getMusicArtists() {\n    this.setState({ loading: true });\n    const artists: Array<any> = await apis.getMusicArtists();\n    this.setState({ artists, loading: false });\n  }\n\n  render() {\n    const { artists = [], loading = false } = this.state;\n\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n\n    return (\n      <div id=\"MusicArtists\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Artists'}\n              rows={artists}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.category}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {helper.capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.source}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Administrative Divisions\n  AdministrativeDivisions,\n  AdministrativeDivisionsPostalCodes,\n  AdministrativeDivisionsProvinces,\n  AdministrativeDivisionsDistricts,\n  AdministrativeDivisionsWards,\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Music\n  Music,\n  MusicArtists,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Technologies\n  Technologies,\n  APIs,\n  GHNProvinces,\n  GHNDistricts,\n  GHNWards,\n  Vietcetera\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions',\n    text: 'Administrative Divisions',\n    component: AdministrativeDivisions,\n    navigation: true\n  },\n  {\n    path: 'administrative-divisions-postal-codes',\n    text: 'Administrative Divisions Postal Codes',\n    component: AdministrativeDivisionsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-provinces',\n    text: 'Administrative Divisions Provinces',\n    component: AdministrativeDivisionsProvinces,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-districts',\n    text: 'Administrative Divisions Districts',\n    component: AdministrativeDivisionsDistricts,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-wards',\n    text: 'Administrative Divisions Wards',\n    component: AdministrativeDivisionsWards,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'music',\n    text: 'Music',\n    component: Music,\n    navigation: true\n  },\n  {\n    path: 'music-artists',\n    text: 'Music Artists',\n    component: MusicArtists,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies,\n    navigation: true\n  },\n  {\n    path: 'technologies-apis',\n    text: 'Technologies APIs',\n    component: APIs,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-provinces',\n    text: 'Technologies GHN Provinces',\n    component: GHNProvinces,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-districts',\n    text: 'Technologies GHN Districts',\n    component: GHNDistricts,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-wards',\n    text: 'Technologies GHN Wards',\n    component: GHNWards,\n    navigation: false\n  },\n  {\n    path: 'technologies-vietcetera',\n    text: 'Technologies Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsSourcesProps {}\n\ninterface INewsSourcesState {\n  sources: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsSources extends Component<INewsSourcesProps, INewsSourcesState> {\n  constructor(props: INewsSourcesProps) {\n    super(props);\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading: boolean, sources: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category: string, index: number) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n}\n\nexport default class NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [] };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesProviders extends Component<\n  IPhonesProvidersProps,\n  IPhonesProvidersState\n> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading: boolean, providers: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IAPIsProps {}\n\ninterface IAPIsState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nexport default class APIs extends Component<IAPIsProps, IAPIsState> {\n  constructor(props: IAPIsProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading: boolean, filterTechnologies: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"APIs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Provinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Provinces</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IDistrictsProps {}\n\ninterface IDistrictsState {\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { districts: [], loading: true };\n\n    this.getGHNDistricts = this.getGHNDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNDistricts();\n  }\n\n  async getGHNDistricts() {\n    this.setState({ loading: true });\n    const districts = await apis.getGHNDistricts();\n    this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' },\n      { header: 'Type', key: 'type' },\n      { header: 'Support Type', key: 'support_type' }\n    ];\n\n    return (\n      <div id=\"Districts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Districts</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getGHNWards = this.getGHNWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNWards();\n  }\n\n  async getGHNWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getGHNWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Wards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Wards</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nexport default class Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.type}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}