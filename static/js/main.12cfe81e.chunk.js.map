{"version":3,"sources":["configs/index.js","components/BanksForex.js","graphql/index.js","helper/index.js","components/BanksHistory.js","components/BanksList.js","components/FinanceCompanies.js","components/FinanceHighlights.js","components/FinanceHistory.js","components/FinancePotentials.js","components/FinanceProfit.js","components/Footer.js","components/Navigation.js","components/NewsFeed.js","components/NewsSources.js","components/NewsTrends.js","components/Packages.js","pages/Banks.js","pages/Finance.js","pages/Government.js","pages/Home.js","pages/Maps.js","pages/News.js","pages/Sports.js","pages/Uong.js","pages/Vietcetera.js","App.js","reportWebVitals.js","index.js"],"names":["baseAPI","baseGraphQL","periods","label","value","BanksForex","state","data","currency","currencies","loading","sortBy","sortDir","getFiannceForexRates","bind","sort","this","self","setState","url","fetch","then","res","json","response","catch","error","console","by","dir","a","b","bank","aBuy","buy","bBuy","aSell","sell","bSell","aTransfer","transfer","bTransfer","log","id","className","Card","Body","Spinner","animation","variant","Form","Group","Control","as","defaultValue","map","index","toUpperCase","onClick","length","item","time","Component","graphql","key","query","fallback","body","Promise","resolve","method","headers","JSON","stringify","result","graphGet","fields","options","fieldsString","join","params","Object","keys","_key","__value","paramsString","list","find","prefix","capitalize","s","charAt","slice","addZero","x","toString","numberFormatter","replace","processPeriod","period","now","Date","oneDay","oneWeek","unit","includes","from","parseInt","to","deepClone","o","parse","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","type","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","banks","getFinanceForexBanks","getFinanceForexRatesData","processRates","name","filter","rates","rate","code","labels","year","month","date","hour","minute","datasets","buyData","transferData","sellData","lines","assign","Title","BanksList","syncForex","status","alert","forex","href","target","rel","Button","FinanceCompanies","companies","getStockCompanies","symbol","company","group","industry","subsector","basicPE","dilutedPE","PB","PS","FinanceHighlights","highlights","updatePeriod","getStockHighlights","event","onChange","highlight","startDate","low","latest","latestDate","min","minDate","max","maxDate","diff","diffToMin","diffToMax","median","average","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","getStockHistory","historyLabels","historyData","history","split","yyyy","mm","dd","i","close","_labels","timestamp","d","getFullYear","getMonth","getDate","concat","array","indexOf","class","FinancePotentials","potentials","getStockPotentials","potential","FinanceProfit","volume","profit","calculateProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","placeholder","Footer","Navigation","Navbar","bg","expand","Brand","NewsFeed","category","categories","source","sources","articles","getCategories","getSources","getArticles","updateCategory","updateSource","article","title","dateTimeString","description","Subtitle","Text","NewsSources","Badge","NewsTrends","trends","getGoogleTrends","text","encodeURI","trend","Packages","props","basicPackages","demo","paymentPackages","filterBasicPackages","filterPaymentPackages","filterPackages","renderPackages","nextProps","packages","_package","toLowerCase","ListGroup","Item","Banks","Tabs","defaultActiveKey","Tab","eventKey","Finance","Government","Home","updateQuery","Maps","News","Sports","wrapperStyles","width","height","actionsStyles","display","justifyContent","marginTop","Uong","cards","remove","style","buttons","right","onAfterSwipe","zIndex","vietcetera","VietceteraClient","Vietcetera","processArticles","basicArticles","slug","language","publishDate","excerpt","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12cfe81e.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\nexport const periods = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { baseAPI } from '../configs';\n\nclass BanksForex extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getFiannceForexRates = this.getFiannceForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getFiannceForexRates();\n  }\n\n  getFiannceForexRates() {\n    const self = this;\n    this.setState({ loading: true });\n    const url = `${baseAPI}/banks/forex/rates`;\n    fetch(url)\n      .then(res => res.json())\n      .then((response = {}) => {\n        const { data = [], currencies = [] } = response;\n        const currency = currencies[0] || '';\n        self.setState({ data, currency, currencies, loading: false });\n      })\n      .catch(error => {\n        console.error(error);\n        self.setState({ data: [], currency: '', currencies: [], loading: false });\n      });\n  }\n\n  sort(by) {\n    const self = this;\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    self.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n    console.log('currencies', currencies);\n    console.log('currency', currency);\n    console.log('data', data);\n    console.log('loading', loading);\n    return (\n      <div id=\"BanksForex\">\n        <div className=\"mt-3 w-100\">\n          <Card>\n            <Card.Body>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n\n              {!loading && (\n                <Form>\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.value}>\n                      {currencies.map((currency, index) => {\n                        return (\n                          <option key={index} value={currency}>\n                            {currency.toUpperCase()}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </Form>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                            Bank\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                            Buy\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                            Transfer\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                            Sell\n                          </span>\n                        </th>\n                        <th>Last Updated At</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.length\n                        ? data.map((item, index) => {\n                            const {\n                              bank = '',\n                              time = '',\n                              buy = {},\n                              transfer = {},\n                              sell = {}\n                            } = item;\n                            return (\n                              <tr key={index}>\n                                <td>{index + 1}</td>\n                                <td>{bank}</td>\n                                <td>{buy[currency] || ''}</td>\n                                <td>{transfer[currency] || ''}</td>\n                                <td>{sell[currency] || ''}</td>\n                                <td>{time}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksForex;\n","import { baseGraphQL } from '../configs';\n\nconst graphql = async (key = '', query = '', fallback = {}) => {\n  const body = { query };\n  const url = `${baseGraphQL}`;\n  return new Promise(resolve => {\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        const { data = {} } = res;\n        const result = data[key] || fallback;\n        resolve(result);\n      })\n      .catch(error => {\n        console.error(error);\n        resolve({});\n      });\n  });\n};\n\nconst graphGet = async (key = '', fields = [], options = {}) => {\n  const fieldsString = fields.join(' ');\n  const params = Object.keys(options)\n    .map(key => {\n      let value = options[key];\n      if (key === 'filter') {\n        const filterKeys = Object.keys(options[key]);\n        value = filterKeys.map(_key => {\n          const __value =\n            typeof options[key][_key] === 'string' ? `\"${options[key][_key]}\"` : options[key][_key];\n          return `${_key}: ${__value}`;\n        });\n        value = `{${value}}`;\n      }\n      return `${key}: ${value}`;\n    })\n    .join(',');\n  const paramsString = params ? `(${params})` : '';\n  const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n  const fallback = [];\n  const list = await graphql(key, query, fallback);\n  return list;\n};\n\nconst graphPost = async (key = '', body = {}, fields = []) => {\n  const newRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n    })\n    .join(' ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${newRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphPut = async (key = '', body = {}, fields = []) => {\n  const updatedRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      if (valueType === 'string') return `${key}: \"${value}\"`;\n      return `${key}: ${value}`;\n    })\n    .join(', ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${updatedRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphDelete = async (key = '', id = '', fields = []) => {\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n/**\n * GraphQL Functions\n */\nexport const count = async (prefix = '') => {\n  const key = `${prefix}Count`;\n  const query = `query { ${key} }`;\n  const fallback = 0;\n  const count = await graphql(key, query, fallback);\n  return count;\n};\n\nexport const find = async (prefix = '', fields = [], options = {}) => {\n  const key = `${prefix}Many`;\n  const list = await graphGet(key, fields, options);\n  return list;\n};\n\nexport const add = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}CreateOne`;\n  const item = await graphPost(key, body, fields);\n  return item;\n};\n\nexport const updateById = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}UpdateById`;\n  const item = await graphPut(key, body, fields);\n  return item;\n};\n\nexport const removeById = async (prefix = '', id = '', fields = []) => {\n  const key = `${prefix}RemoveById`;\n  const item = await graphDelete(key, id, fields);\n  return item;\n};\n","export const capitalize = (s = '') => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const addZero = (x = 0) => {\n  return x > 9 ? x.toString() : `0${x}`;\n};\n\nexport const numberFormatter = (x = 0) => {\n  return x\n    .toString()\n    .replace(/,/g, '')\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const processPeriod = period => {\n  const now = Date.now();\n  const oneDay = 1000 * 60 * 60 * 24;\n  const oneYear = oneDay * 365;\n  const oneMonth = oneDay * 30;\n  const oneWeek = oneDay * 7;\n  let unit = oneWeek;\n  if (period.includes('Y')) {\n    unit = oneYear;\n  } else if (period.includes('M')) {\n    unit = oneMonth;\n  } else if (period.includes('W')) {\n    unit = oneWeek;\n  }\n\n  const time = parseInt(period[0]) || 2;\n  const from = now - unit * time;\n\n  return { from, to: now };\n};\n\nexport const deepClone = (o = {}) => {\n  return JSON.parse(JSON.stringify(o));\n};\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { baseAPI } from '../configs';\nimport { find } from '../graphql';\nimport { deepClone } from '../helper';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nclass BanksHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [] };\n    this.getFinanceForexBanks = this.getFinanceForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getFinanceForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getFinanceForexBanks() {\n    const self = this;\n    this.setState({ loading: true });\n    const url = `${baseAPI}/banks`;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((banks = []) => {\n          const { name: bank = '' } = banks[0];\n          self.setState({ bank, banks, loading: false });\n          console.log('getFinanceForexBanks() done');\n          resolve();\n        })\n        .catch(error => {\n          console.error(error);\n          self.setState({ bank: '', banks: [], loading: false });\n          console.log('getFinanceForexBanks() error');\n          resolve();\n        });\n    });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n    console.log('getFinanceForexRatesData() bank', bank);\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map(rate => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map(item => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data, currency) {\n    const rates = data.map(item => {\n      const { rates } = item;\n      const rate = rates.find(rate => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map(rate => rate.buy);\n    const transferData = rates.map(rate => rate.transfer);\n    const sellData = rates.map(rate => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n    console.log('render() bank', bank);\n    console.log('render() banks', banks);\n    console.log('render() currency', currency);\n    console.log('render() currencies', currencies);\n    console.log('render() data', data);\n    console.log('render() loading', loading);\n    return (\n      <div id=\"BanksHistory\">\n        <div className=\"mt-3 w-100\">\n          <Card>\n            <Card.Body>\n              <Card.Title>History</Card.Title>\n              <Form className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue={bank} value={this.state.value}>\n                      {banks.map((bank, index) => {\n                        return (\n                          <option key={index} value={bank.name}>\n                            {bank.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue={currency} value={this.state.value}>\n                      {currencies.map((currency, index) => {\n                        return (\n                          <option key={index} value={currency}>\n                            {currency}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksHistory;\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { baseAPI } from '../configs';\n\nclass BanksList extends Component {\n  constructor() {\n    super();\n    this.state = { banks: [], loading: false };\n    this.getFinanceForexBanks = this.getFinanceForexBanks.bind(this);\n    this.syncForex = this.syncForex.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getFinanceForexBanks();\n  }\n\n  async getFinanceForexBanks() {\n    const self = this;\n    self.setState({ loading: true });\n    const url = `${baseAPI}/banks`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then((banks = []) => {\n        self.setState({ banks, loading: false });\n      })\n      .catch(error => {\n        console.error(error);\n        self.setState({ banks: [], loading: false });\n      });\n  }\n\n  syncForex(id) {\n    const url = `${baseAPI}/banks/forex/sync`;\n    console.log(`syncForex(${id})`);\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id })\n    })\n      .then(res => res.json())\n      .then((data = []) => {\n        const { status = '' } = data;\n        alert(status);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('banks', banks);\n    return (\n      <div id=\"BanksList\">\n        <div className=\"mt-3 w-100\">\n          <Card>\n            <Card.Body>\n              <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Forex</th>\n                        <th>Sync</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {banks.length\n                        ? banks.map((bank, index) => {\n                            const { id = '', name = '', forex = '' } = bank;\n                            return (\n                              <tr key={index}>\n                                <td>{id}</td>\n                                <td>{name}</td>\n                                <td>\n                                  <a href={forex} target=\"_blank\" rel=\"noreferrer\">\n                                    Forex\n                                  </a>\n                                </td>\n                                <td>\n                                  <Button variant=\"danger\" onClick={() => this.syncForex(id)}>\n                                    Sync\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksList;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { baseAPI } from '../configs';\n\nclass FinanceCompanies extends Component {\n  constructor() {\n    super();\n    this.state = { companies: [], loading: false };\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    const self = this;\n    self.setState({ loading: true });\n    const url = `${baseAPI}/stock/companies`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then((companies = []) => {\n        companies.sort((a, b) => (a.symbol > b.symbol ? 1 : -1));\n        self.setState({ companies, loading: false });\n      })\n      .catch(error => {\n        console.error(error);\n        self.setState({ companies: [], loading: false });\n      });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('companies', companies);\n    return (\n      <div id=\"FinanceCompanies\">\n        <div className=\"mt-3 w-100\">\n          <Card>\n            <Card.Body>\n              <Card.Title className=\"text-center\">Companies ({companies.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Symbol</th>\n                        <th>Name</th>\n                        <th>Group</th>\n                        <th>Industry</th>\n                        <th>Sub Sector</th>\n                        <th>Basic P/E</th>\n                        <th>Diluted P/E</th>\n                        <th>P/B</th>\n                        <th>P/S</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {companies.length\n                        ? companies.map((company, index) => {\n                            const {\n                              symbol,\n                              name,\n                              group,\n                              industry,\n                              subsector,\n                              basicPE,\n                              dilutedPE,\n                              PB,\n                              PS\n                            } = company;\n                            return (\n                              <tr key={index}>\n                                <td>{symbol}</td>\n                                <td>{name}</td>\n                                <td>{group}</td>\n                                <td>{industry}</td>\n                                <td>{subsector}</td>\n                                <td>{basicPE}</td>\n                                <td>{dilutedPE}</td>\n                                <td>{PB}</td>\n                                <td>{PS}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                ''\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceCompanies;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { baseAPI, periods } from '../configs';\nimport { processPeriod } from '../helper';\n\nclass FinanceHighlights extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, highlights: [], from: 0, to: 0 };\n    this.updatePeriod = this.updatePeriod.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const self = this;\n    const { from = 0, to = 0 } = this.state;\n    self.setState({ loading: true });\n    const url = `${baseAPI}/stock/highlights`;\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ from, to })\n    })\n      .then(res => res.json())\n      .then((highlights = []) => {\n        self.setState({ highlights, loading: false });\n      })\n      .catch(error => {\n        console.error(error);\n        self.setState({ highlights: [], loading: false });\n      });\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div className=\"FinanceHighlights\">\n        <div className=\"w-100 mt-3\">\n          <Card>\n            <Card.Body>\n              <Card.Title className=\"text-center\">Highlight</Card.Title>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.value}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Symbol</th>\n                        <th>Name</th>\n                        <th>Latest</th>\n                        <th>Diff</th>\n                        <th>Median</th>\n                        <th>Average</th>\n                        <th>Middle</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {highlights.length\n                        ? highlights.map((highlight, index) => {\n                            const {\n                              symbol = '',\n                              group = '',\n                              startDate = '',\n                              name = '',\n                              industry = '',\n                              subsector = '',\n                              low = false,\n                              latest,\n                              latestDate,\n                              min,\n                              minDate,\n                              max,\n                              maxDate,\n                              diff,\n                              diffToMin,\n                              diffToMax,\n                              median,\n                              average,\n                              middle\n                            } = highlight;\n                            return (\n                              <tr key={index}>\n                                <td>\n                                  <div>{symbol}</div>\n                                  <div>{group}</div>\n                                  <div>{startDate}</div>\n                                </td>\n                                <td>\n                                  <div>{name}</div>\n                                  <div>{industry}</div>\n                                  <div>{subsector}</div>\n                                </td>\n                                <td>\n                                  <div className={low ? 'text-danger' : 'text-success'}>\n                                    <div>\n                                      {latest} ({latestDate})\n                                    </div>\n                                    <div>\n                                      {min} ({minDate})\n                                    </div>\n                                    <div>\n                                      {max} ({maxDate})\n                                    </div>\n                                  </div>\n                                </td>\n                                <td>\n                                  <div className={low ? 'text-danger' : 'text-success'}>\n                                    <div>{diff}</div>\n                                    <div>{diffToMin}</div>\n                                    <div>{diffToMax}</div>\n                                  </div>\n                                </td>\n                                <td>{median}</td>\n                                <td>{average}</td>\n                                <td>{middle}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                ''\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceHighlights;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { baseAPI, periods } from '../configs';\nimport { addZero, processPeriod, deepClone } from '../helper';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nclass FinanceHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, data: [], symbols: [], symbol: '', from: 0, to: 0 };\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    const self = this;\n    self.setState({ loading: true });\n    const url = `${baseAPI}/stock/companies`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then((companies = []) => {\n        const symbols = companies.map(company => company.symbol);\n        const symbol = symbols[0];\n        self.setState({ symbols, symbol, loading: false });\n      })\n      .catch(error => {\n        console.error(error);\n        self.setState({ symbols: [], symbol: '', loading: false });\n      });\n  }\n\n  async getStockHistory() {\n    const self = this;\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    self.setState({ loading: true });\n    const url = `${baseAPI}/stock/history`;\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ symbol, from, to })\n    })\n      .then(res => res.json())\n      .then((res = {}) => {\n        const labels = self.processLabels(res);\n        const datasets = self.processDatasets(labels, res);\n        console.log(labels, datasets);\n        self.setState({ data: { labels, datasets }, loading: false });\n      })\n      .catch(error => {\n        console.error(error);\n        self.setState({ data: {}, loading: false });\n      });\n  }\n\n  processDatasets(historyLabels, historyData) {\n    const datasets = historyData.map(item => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find(i => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map(item => {\n      const { label = '', data = [] } = item;\n\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data) {\n    let labels = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels = history.map(value => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = addZero(d.getFullYear());\n        const month = addZero(d.getMonth() + 1);\n        const date = addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card>\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.value}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.value}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceHistory;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { baseAPI, periods } from '../configs';\nimport { processPeriod } from '../helper';\n\nclass FinancePotentials extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, potentials: [], from: 0, to: 0 };\n    this.updatePeriod = this.updatePeriod.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const self = this;\n    const { from = 0, to = 0 } = this.state;\n    self.setState({ loading: true });\n    const url = `${baseAPI}/stock/potentials`;\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ from, to })\n    })\n      .then(res => res.json())\n      .then((potentials = []) => {\n        self.setState({ potentials, loading: false });\n      })\n      .catch(error => {\n        console.error(error);\n        self.setState({ potentials: [], loading: false });\n      });\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div className=\"FinancePotentials\">\n        <div className=\"w-100 mt-3\">\n          <Card>\n            <Card.Body>\n              <Card.Title className=\"text-center\">Potential</Card.Title>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.value}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Symbol</th>\n                        <th>Name</th>\n                        <th>Latest</th>\n                        <th>Diff</th>\n                        <th>Median</th>\n                        <th>Average</th>\n                        <th>Middle</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {potentials.length\n                        ? potentials.map((potential, index) => {\n                            const {\n                              symbol = '',\n                              group = '',\n                              startDate = '',\n                              name = '',\n                              industry = '',\n                              subsector = '',\n                              low = false,\n                              latest,\n                              latestDate,\n                              min,\n                              minDate,\n                              max,\n                              maxDate,\n                              diff,\n                              diffToMin,\n                              diffToMax,\n                              median,\n                              average,\n                              middle\n                            } = potential;\n                            return (\n                              <tr key={index}>\n                                <td>\n                                  <div>{symbol}</div>\n                                  <div>{group}</div>\n                                  <div>{startDate}</div>\n                                </td>\n                                <td>\n                                  <div>{name}</div>\n                                  <div>{industry}</div>\n                                  <div>{subsector}</div>\n                                </td>\n                                <td>\n                                  <div className={low ? 'text-danger' : 'text-success'}>\n                                    <div>\n                                      {latest} ({latestDate})\n                                    </div>\n                                    <div>\n                                      {min} ({minDate})\n                                    </div>\n                                    <div>\n                                      {max} ({maxDate})\n                                    </div>\n                                  </div>\n                                </td>\n                                <td>\n                                  <div className={low ? 'text-danger' : 'text-success'}>\n                                    <div>{diff}</div>\n                                    <div>{diffToMin}</div>\n                                    <div>{diffToMax}</div>\n                                  </div>\n                                </td>\n                                <td>{median}</td>\n                                <td>{average}</td>\n                                <td>{middle}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                ''\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinancePotentials;\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { baseAPI } from '../configs';\nimport { numberFormatter } from '../helper';\n\nclass FinanceProfit extends Component {\n  constructor() {\n    super();\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event) {\n    event.preventDefault();\n    const self = this;\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const url = `${baseAPI}/stock/profit`;\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ buy, sell, volume })\n    })\n      .then(res => res.json())\n      .then((data = []) => {\n        const { profit = 0 } = data;\n        self.setState({ profit });\n      })\n      .catch(error => {\n        console.error(error);\n        self.setState({ profit: 0 });\n      });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div className=\"FinanceProfit\">\n        <div className=\"mt-3 w-100\">\n          <Card>\n            <Card.Body>\n              <Form onSubmit={this.calculateProfit} className=\"row\">\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Buy\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateBuy}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Sell\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateSell}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Volume\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateVolume}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                    Calculate\n                  </Button>\n                </div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(buy * volume)}</div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(sell * volume)}</div>\n                <div className=\"col-sm-3\"></div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(profit)}</div>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceProfit;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center\">\n        &copy;{' '}\n        <a\n          href=\"https://www.linkedin.com/in/hieudoanm/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"text-white\">\n          HIEU DOAN\n        </a>{' '}\n        {year}\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <Navbar bg=\"danger\" expand=\"sm\">\n        <div className=\"container\">\n          <Navbar.Brand href=\"#\" className=\"text-white\">\n            VNPM\n          </Navbar.Brand>\n        </div>\n      </Navbar>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { baseAPI } from '../configs';\nimport { capitalize } from '../helper';\n\nclass NewsFeed extends Component {\n  constructor() {\n    super();\n    this.state = { category: '', categories: [], source: '', sources: [], articles: [] };\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  getCategories() {\n    const self = this;\n    const url = `${baseAPI}/news/categories`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then((categories = []) => {\n        console.log('getCategories', categories);\n        self.setState({ categories });\n      });\n  }\n\n  getSources() {\n    const self = this;\n    const url = `${baseAPI}/news/sources`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then((sources = []) => {\n        console.log('getSources', sources);\n        self.setState({ sources });\n      });\n  }\n\n  updateCategory(event) {\n    const { value: category } = event.target;\n    this.setState({ category });\n  }\n\n  async updateSource(event) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  getArticles() {\n    const self = this;\n    const { category = '', source = '' } = this.state;\n\n    const url = `${baseAPI}/news?category=${category}&sources=${source}`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then((data = {}) => {\n        const { articles = [] } = data;\n        console.log('getArticles', articles);\n        self.setState({ articles });\n      });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [] } = this.state;\n\n    return (\n      <div id=\"NewsFeed\">\n        <Form className=\"mt-3 w-100\">\n          <div className=\"row mb-3\">\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.updateCategory}>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category}>\n                        {capitalize(category)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.updateSource}>\n                  {sources.map((source, index) => {\n                    return (\n                      <option key={index} value={source.id}>\n                        {source.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          </div>\n          <div className=\"row\">\n            {articles.length &&\n              articles.map((article = {}, index) => {\n                const {\n                  title = '',\n                  url = '',\n                  source = '',\n                  dateTimeString = '',\n                  description = ''\n                } = article;\n                return (\n                  <div key={index} className=\"col-sm-6 mb-3\">\n                    <Card className=\"w-100\">\n                      <Card.Body>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                );\n              })}\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default NewsFeed;\n","import React, { Component } from 'react';\nimport { Card, Badge } from 'react-bootstrap';\n\nimport { baseAPI } from '../configs';\n\nclass NewsSources extends Component {\n  constructor() {\n    super();\n    this.state = { sources: [] };\n    this.getSources = this.getSources.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  getSources() {\n    const self = this;\n    const url = `${baseAPI}/news/sources`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then((sources = []) => {\n        console.log('getSources', sources);\n        self.setState({ sources });\n      });\n  }\n\n  render() {\n    const { sources = [] } = this.state;\n\n    return (\n      <div id=\"NewsSources\">\n        <div className=\"row mt-3\">\n          {sources.map((source = {}, index) => {\n            const { id = '', name = '', url = '', category = '', categories = [] } = source;\n            return (\n              <div key={index} className=\"col-sm-6 mb-3\">\n                <Card className=\"w-100\">\n                  <Card.Body>\n                    <Card.Title>\n                      <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                        {id} - {name}\n                      </a>\n                    </Card.Title>\n                    <Card.Subtitle className=\"d-block text-muted mb-1\">\n                      {category && <small>{category}</small>}\n                    </Card.Subtitle>\n                    {categories.map((category, index) => {\n                      return (\n                        <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                          {category}\n                        </Badge>\n                      );\n                    })}\n                  </Card.Body>\n                </Card>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewsSources;\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { baseAPI } from '../configs';\n\nclass NewsTrends extends Component {\n  constructor() {\n    super();\n    this.state = { trends: [] };\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const self = this;\n    const url = `${baseAPI}/news/trends`;\n\n    fetch(url)\n      .then(res => res.json())\n      .then(response => {\n        const basicTrends = response || [];\n        const trends = basicTrends.map(text => {\n          const url = `https://www.google.com/search?q=${encodeURI(text)}`;\n          return { text, url };\n        });\n        console.log('getGoogleTrends', trends);\n        self.setState({ trends });\n      });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n    console.log('render', trends);\n    return (\n      <div id=\"NewsTrends\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Card.Title>Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"primary\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default NewsTrends;\n","import React, { Component } from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nclass Packages extends Component {\n  constructor(props) {\n    super(props);\n    const basicPackages = [\n      { name: 'vnapis', demo: '' },\n      { name: 'vietnamnews', demo: 'https://hieudoanm.github.io/vietnam/#/news' },\n      { name: 'vietnambanks', demo: 'https://hieudoanm.github.io/vietnam/#/banks' },\n      { name: 'vietnamgovernment', demo: '' },\n      { name: 'vietcetera', demo: 'https://hieudoanm.github.io/vietnam/#/vietcetera' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n    const paymentPackages = [\n      { name: 'vnpay', demo: '' },\n      { name: 'onepay', demo: '' },\n      { name: 'vtcpay', demo: '' },\n      { name: 'zalopay', demo: '' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n    this.state = {\n      basicPackages,\n      filterBasicPackages: basicPackages,\n      paymentPackages,\n      filterPaymentPackages: paymentPackages\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderPackages = this.renderPackages.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { query = '' } = nextProps;\n    const { basicPackages = [], paymentPackages = [] } = this.state;\n    const filterBasicPackages = this.filterPackages(basicPackages, query);\n    const filterPaymentPackages = this.filterPackages(paymentPackages, query);\n    this.setState({ filterBasicPackages, filterPaymentPackages });\n  }\n\n  filterPackages(packages = [], query = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderPackages(title, packages = []) {\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title className=\"text-center\">{title}</Card.Title>\n          <ListGroup className=\"mt-3 mb-3 text-center\">\n            {packages.length !== 0 &&\n              packages.map((_package, index) => {\n                const { name = '', demo } = _package;\n                return (\n                  <ListGroup.Item key={index}>\n                    <a\n                      href={`https://www.npmjs.com/package/${name}`}\n                      rel=\"noreferrer\"\n                      target=\"_blank\">\n                      {name}\n                    </a>\n                    {demo && (\n                      <a className=\"ml-1\" href={demo} target=\"_blank\" rel=\"noreferrer\">\n                        (Demo)\n                      </a>\n                    )}\n                  </ListGroup.Item>\n                );\n              })}\n            {packages.length === 0 && <ListGroup.Item>No packages</ListGroup.Item>}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  render() {\n    const { filterBasicPackages = [], filterPaymentPackages = [] } = this.state;\n    return (\n      <div id=\"Packages\">\n        <div className=\"mt-3\">{this.renderPackages('Basic', filterBasicPackages)}</div>\n        <div className=\"mt-3\">{this.renderPackages('Payment', filterPaymentPackages)}</div>\n      </div>\n    );\n  }\n}\n\nexport default Packages;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { BanksForex, BanksHistory, BanksList } from '../components';\n\nclass Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"forex\" className=\"nav-justified\">\n            <Tab eventKey=\"forex\" title=\"Forex\">\n              <BanksForex></BanksForex>\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <BanksHistory></BanksHistory>\n            </Tab>\n            <Tab eventKey=\"list\" title=\"List\">\n              <BanksList></BanksList>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Banks;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport {\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit\n} from '../components';\n\nclass Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"companies\" className=\"nav-justified\">\n            <Tab eventKey=\"companies\" title=\"Forex\">\n              <FinanceCompanies></FinanceCompanies>\n            </Tab>\n            <Tab eventKey=\"highlights\" title=\"Highlights\">\n              <FinanceHighlights></FinanceHighlights>\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <FinanceHistory></FinanceHistory>\n            </Tab>\n            <Tab eventKey=\"potentials\" title=\"Potentials\">\n              <FinancePotentials></FinancePotentials>\n            </Tab>\n            <Tab eventKey=\"profit\" title=\"Profit\">\n              <FinanceProfit></FinanceProfit>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Finance;\n","import React, { Component } from 'react';\n\nclass Government extends Component {\n  render() {\n    return <div id=\"Government\"></div>;\n  }\n}\n\nexport default Government;\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport { Packages } from '../components';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = { query: '' };\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  updateQuery(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div id=\"Home\">\n        <main className=\"container\">\n          <Form className=\"mt-3 w-100\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Query\"\n              className=\"text-center\"\n              value={this.state.value}\n              onChange={this.updateQuery}></Form.Control>\n          </Form>\n          <Packages query={query}></Packages>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass Maps extends Component {\n  render() {\n    return <div id=\"Maps\"></div>;\n  }\n}\n\nexport default Maps;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { NewsFeed, NewsSources, NewsTrends } from '../components';\n\nclass News extends Component {\n  render() {\n    return (\n      <div id=\"News\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"feed\" className=\"nav-justified\">\n            <Tab eventKey=\"feed\" title=\"Feed\">\n              <NewsFeed></NewsFeed>\n            </Tab>\n            <Tab eventKey=\"sources\" title=\"Sources\">\n              <NewsSources></NewsSources>\n            </Tab>\n            <Tab eventKey=\"trends\" title=\"Trends\">\n              <NewsTrends></NewsTrends>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default News;\n","import React, { Component } from 'react';\n\nclass Sports extends Component {\n  render() {\n    return <div id=\"Sports\"></div>;\n  }\n}\n\nexport default Sports;\n","import React, { Component } from 'react';\nimport Swipeable from 'react-swipy';\n\nconst wrapperStyles = { position: 'relative', width: '250px', height: '250px' };\nconst actionsStyles = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: 12\n};\n\nclass Uong extends Component {\n  constructor() {\n    super();\n    this.state = { cards: ['First', 'Second', 'Third'] };\n    this.remove = this.remove.bind(this);\n  }\n\n  remove() {\n    this.setState(({ cards }) => ({\n      cards: cards.slice(1, cards.length)\n    }));\n  }\n\n  render() {\n    const { cards = [] } = this.state;\n    return (\n      <div id=\"Uong\">\n        {cards.length > 0 ? (\n          <div style={wrapperStyles}>\n            <Swipeable\n              buttons={({ right }) => (\n                <div style={actionsStyles}>\n                  <button onClick={right}>Next</button>\n                </div>\n              )}\n              onAfterSwipe={this.remove}>\n              <div>{cards[0]}</div>\n            </Swipeable>\n            {cards.length > 1 && <div zIndex={-1}>{cards[1]}</div>}\n          </div>\n        ) : (\n          <div>No more cards</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Uong;\n","import React, { Component } from 'react';\nimport { Form, Card } from 'react-bootstrap';\nimport VietceteraClient from 'vietcetera';\n\nconst vietcetera = new VietceteraClient();\n\nclass Vietcetera extends Component {\n  constructor() {\n    super();\n    this.state = { articles: [] };\n    this.getArticles = this.getArticles.bind(this);\n    this.processArticles = this.processArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    this.setState({ articles });\n  }\n\n  processArticles(articles = []) {\n    return articles.map((article = {}) => {\n      const { title = '', slug = '', language = '', publishDate = '', excerpt = '' } = article;\n      const url =\n        language && slug ? `https://vietcetera.com/${language.toLowerCase()}/${slug}` : '';\n      const description = excerpt.replace('<p>', '').replace('</p>', '');\n      return { title, url, publishDate, description };\n    });\n  }\n\n  async getArticles(event) {\n    const { value: type = '' } = event.target;\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    console.log(articles);\n    this.setState({ articles });\n  }\n\n  render() {\n    const { articles = [] } = this.state;\n\n    return (\n      <div id=\"Vietcetera\">\n        <main className=\"container\">\n          <Form className=\"mt-3 w-100\">\n            <Form.Group>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"latest\"\n                value={this.state.value}\n                onChange={this.getArticles}>\n                <option value=\"latest\">Latest</option>\n                <option value=\"popular\">Popular</option>\n                <option value=\"editor-pick\">Editor Pick</option>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n          <div className=\"mb-5 row\">\n            {articles.length !== 0 &&\n              articles.map((article, index) => {\n                const { title = '', url = '', publishDate = '', description = '' } = article;\n                return (\n                  <div className=\"col-sm-6\">\n                    <Card key={index} className=\"mb-3\">\n                      <Card.Body>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"text-muted\">{publishDate}</Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                );\n              })}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Vietcetera;\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport { Banks, Finance, Government, Home, Maps, News, Sports, Uong, Vietcetera } from './pages';\nimport { Navigation, Footer } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation></Navigation>\n        <div className=\"pb-5\">\n          <div className=\"pb-5\">\n            <HashRouter basename=\"/\">\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/banks\" component={Banks}></Route>\n              <Route exact path=\"/finance\" component={Finance}></Route>\n              <Route exact path=\"/government\" component={Government}></Route>\n              <Route exact path=\"/maps\" component={Maps}></Route>\n              <Route exact path=\"/news\" component={News}></Route>\n              <Route exact path=\"/sports\" component={Sports}></Route>\n              <Route exact path=\"/uong\" component={Uong}></Route>\n              <Route exact path=\"/vietcetera\" component={Vietcetera}></Route>\n            </HashRouter>\n          </div>\n        </div>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}