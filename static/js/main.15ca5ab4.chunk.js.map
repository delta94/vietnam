{"version":3,"sources":["configs/index.js","services/apis-configs.js","services/apis.js","components/banks/Forex.js","graphql/index.js","helper/index.js","components/banks/History.js","components/banks/List.js","components/finance/Companies.js","components/finance/Highlights.js","components/finance/History.js","components/finance/Potentials.js","components/finance/Profit.js","components/home/Footer.js","components/home/Navigation.js","components/home/Packages.js","components/government/Ministers.js","components/government/Ministries.js","components/maps/Districts.js","components/maps/Provinces.js","components/maps/Wards.js","components/news/Feed.js","components/news/Sources.js","components/news/Trends.js","components/sports/Clubs.js","pages/Banks.js","pages/Calendar.js","pages/EthnicMinorities.js","pages/Finance.js","pages/Government.js","pages/Home.js","pages/LicensePlates.js","pages/Maps.js","pages/News.js","pages/Phones.js","pages/Sports.js","pages/Technologies.js","pages/Vietcetera.js","routers/index.js","App.js","reportWebVitals.js","index.js"],"names":["baseAPI","baseGraphQL","periods","label","value","endpoints","ethnicMinorities","get","government","ministries","licensePlates","maps","provinces","districts","wards","news","trends","sources","categories","sports","clubs","technologies","apis","base","this","url","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","ministers","response","map","text","encodeURI","options","category","source","data","articles","buy","sell","volume","method","headers","body","JSON","stringify","profit","from","to","highlights","potentials","companies","sort","a","b","symbol","currencies","currency","banks","name","bank","id","status","stack","result","BanksForex","state","loading","sortBy","sortDir","getBanksForexRates","bind","setState","by","self","dir","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","log","className","Card","Body","Spinner","animation","variant","Form","Group","Control","as","defaultValue","index","toUpperCase","onClick","length","item","time","Component","graphql","key","query","fallback","graphGet","fields","fieldsString","join","params","Object","keys","_key","__value","paramsString","list","find","prefix","capitalize","s","charAt","slice","addZero","x","toString","numberFormatter","replace","processPeriod","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","deepClone","o","parse","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","type","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getBanksWithForex","getFinanceForexRatesData","processRates","filter","rates","rate","code","labels","year","month","date","hour","minute","datasets","buyData","transferData","sellData","lines","assign","Title","BanksList","syncForex","message","alert","forex","href","target","rel","Button","FinanceCompanies","getStockCompanies","company","group","industry","subsector","basicPE","dilutedPE","PB","PS","FinanceHighlights","updatePeriod","getStockHighlights","event","onChange","highlight","startDate","low","latest","latestDate","min","minDate","max","maxDate","diff","diffToMin","diffToMax","median","average","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","getStockHistory","historyLabels","historyData","history","split","yyyy","mm","dd","i","close","_labels","timestamp","d","getFullYear","getMonth","getDate","concat","array","indexOf","class","FinancePotentials","getStockPotentials","potential","FinanceProfit","calculateProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","placeholder","HomeFooter","HomeNavigation","Navbar","bg","expand","Brand","Nav","NavDropdown","title","routes","route","path","Item","HomePackages","props","npm","docs","filterAPIs","filterPackages","renderPackages","nextProps","externalPackages","filterExternalPackages","packages","_package","toLowerCase","ListGroup","GovernmentMinisters","getMinistries","getMinisters","updateMinistry","short","minister","start_date","end_date","GovernmentMinistries","name_en","level","level_en","MapsDistricts","getDistricts","district","MapsProvinces","getProvinces","MapsWards","getWards","NewsFeed","getCategories","getSources","getArticles","updateCategory","updateSource","article","dateTimeString","description","Subtitle","Text","NewsSources","Badge","NewsTrends","getGoogleTrends","trend","SportsClubs","getSportsClubs","club","sport","competition","city","Banks","Tabs","defaultActiveKey","Tab","eventKey","Calendar","EthnicMinorities","filterEthnicMinorities","getEthnicMinorities","ethnicMinority","license","type_en","Finance","Government","Home","updateQuery","LicensePlates","filterLicensePlates","getLicensePlates","licensePlate","definition","Maps","News","Phones","Sports","Technologies","filterTechnologies","getTechnologies","vietcetera","VietceteraClient","component","processArticles","basicArticles","slug","language","publishDate","excerpt","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15ca5ab4.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\nexport const periods = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n","import { baseAPI } from '../configs';\n\nconst endpoints = {\n  ethnicMinorities: {\n    get: `${baseAPI}/ethnic-minorities`\n  },\n  government: {\n    ministries: { get: `${baseAPI}/government/ministries` }\n  },\n  licensePlates: {\n    get: `${baseAPI}/license-plates`\n  },\n  maps: {\n    provinces: { get: `${baseAPI}/maps/provinces` },\n    districts: { get: `${baseAPI}/maps/districts` },\n    wards: { get: `${baseAPI}/maps/wards` }\n  },\n  news: {\n    trends: { get: `${baseAPI}/news/trends` },\n    sources: { get: `${baseAPI}/news/sources` },\n    categories: { get: `${baseAPI}/news/categories` }\n  },\n  sports: {\n    clubs: {\n      get: `${baseAPI}/sports/clubs`\n    }\n  },\n  technologies: {\n    get: `${baseAPI}/technologies`\n  }\n};\n\nexport default endpoints;\n","import { baseAPI } from '../configs';\n\nimport endpoints from './apis-configs';\n\nclass APIS {\n  constructor(base) {\n    this.base = base;\n  }\n\n  getMinistries() {\n    const url = endpoints.government.ministries.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((ministries = []) => {\n          resolve(ministries);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getMinisters(ministry) {\n    const url = `${this.base}/government/ministers?ministry=${ministry}`;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((ministers = []) => {\n          resolve(ministers);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getGoogleTrends() {\n    const url = endpoints.news.trends.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then(response => {\n          const basicTrends = response || [];\n          const trends = basicTrends.map(text => {\n            const url = `https://www.google.com/search?q=${encodeURI(text)}`;\n            return { text, url };\n          });\n          resolve(trends);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getSources() {\n    const url = endpoints.news.sources.get;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((sources = []) => {\n          resolve(sources);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getCategories() {\n    const url = endpoints.news.categories.get;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((categories = []) => {\n          resolve(categories);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getArticles(options = {}) {\n    const { category, source } = options;\n    const url = `${this.base}/news?category=${category}&sources=${source}`;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((data = {}) => {\n          const { articles = [] } = data;\n          resolve(articles);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  calculateProfit(buy, sell, volume) {\n    const url = `${this.base}/finance/profit`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ buy, sell, volume })\n      })\n        .then(res => res.json())\n        .then((data = []) => {\n          const { profit = 0 } = data;\n          resolve(profit);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve(0);\n        });\n    });\n  }\n\n  getStockHighlights(from, to) {\n    const url = `${this.base}/finance/highlights`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ from, to })\n      })\n        .then(res => res.json())\n        .then((highlights = []) => {\n          resolve(highlights);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getStockPotentials(from, to) {\n    const url = `${this.base}/finance/potentials`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ from, to })\n      })\n        .then(res => res.json())\n        .then((potentials = []) => {\n          resolve(potentials);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getStockCompanies() {\n    const url = `${this.base}/finance/companies`;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((companies = []) => {\n          companies.sort((a, b) => (a.symbol > b.symbol ? 1 : -1));\n          resolve(companies);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getBanksForexRates() {\n    const url = `${this.base}/banks/forex/rates`;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((response = {}) => {\n          const { data = [], currencies = [] } = response;\n          const currency = currencies[0] || '';\n          resolve({ data, currency, currencies });\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({ data: [], currency: '', currencies: [] });\n        });\n    });\n  }\n\n  getBanksWithForex() {\n    const url = `${this.base}/banks`;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((banks = []) => {\n          const { name: bank = '' } = banks[0];\n          resolve({ bank, banks });\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({ bank: '', banks: [] });\n        });\n    });\n  }\n\n  syncForex(id) {\n    const url = `${this.base}/banks/forex/sync`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id })\n      })\n        .then(res => res.json())\n        .then((data = []) => {\n          const { status = '' } = data;\n          resolve(status);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve(error.stack);\n        });\n    });\n  }\n\n  getStockHistory(symbol, from, to) {\n    const url = `${this.base}/finance/history`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ symbol, from, to })\n      })\n        .then(res => res.json())\n        .then((result = {}) => {\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  getDistricts() {\n    const url = endpoints.maps.districts.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((districts = []) => {\n          resolve(districts);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getProvinces() {\n    const url = endpoints.maps.provinces.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((provinces = []) => {\n          resolve(provinces);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getWards() {\n    const url = endpoints.maps.wards.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((wards = []) => {\n          resolve(wards);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getSportsClubs() {\n    const url = endpoints.sports.clubs.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((clubs = []) => {\n          resolve(clubs);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getLicensePlates() {\n    const url = endpoints.ethnicMinorities.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((licensePlates = []) => {\n          resolve(licensePlates);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getEthnicMinorities() {\n    const url = endpoints.ethnicMinorities.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((ethnicMinorities = []) => {\n          resolve(ethnicMinorities);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getTechnologies() {\n    const url = endpoints.technologies.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((technologies = []) => {\n          resolve(technologies);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n}\n\nconst apis = new APIS(baseAPI);\n\nexport default apis;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass BanksForex extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by) {\n    const self = this;\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    self.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n    console.log('currencies', currencies);\n    console.log('currency', currency);\n    console.log('data', data);\n    console.log('loading', loading);\n    return (\n      <div id=\"BanksForex\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n\n              {!loading && (\n                <Form>\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.value}>\n                      {currencies.map((currency, index) => {\n                        return (\n                          <option key={index} value={currency}>\n                            {currency.toUpperCase()}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </Form>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                            Bank\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                            Buy\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                            Transfer\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                            Sell\n                          </span>\n                        </th>\n                        <th>Last Updated At</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.length\n                        ? data.map((item, index) => {\n                            const {\n                              bank = '',\n                              time = '',\n                              buy = {},\n                              transfer = {},\n                              sell = {}\n                            } = item;\n                            return (\n                              <tr key={index}>\n                                <td>{index + 1}</td>\n                                <td>{bank}</td>\n                                <td>{buy[currency] || ''}</td>\n                                <td>{transfer[currency] || ''}</td>\n                                <td>{sell[currency] || ''}</td>\n                                <td>{time}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksForex;\n","import { baseGraphQL } from '../configs';\n\nconst graphql = async (key = '', query = '', fallback = {}) => {\n  const body = { query };\n  const url = `${baseGraphQL}`;\n  return new Promise(resolve => {\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        const { data = {} } = res;\n        const result = data[key] || fallback;\n        resolve(result);\n      })\n      .catch(error => {\n        console.error(error);\n        resolve({});\n      });\n  });\n};\n\nconst graphGet = async (key = '', fields = [], options = {}) => {\n  const fieldsString = fields.join(' ');\n  const params = Object.keys(options)\n    .map(key => {\n      let value = options[key];\n      if (key === 'filter') {\n        const filterKeys = Object.keys(options[key]);\n        value = filterKeys.map(_key => {\n          const __value =\n            typeof options[key][_key] === 'string' ? `\"${options[key][_key]}\"` : options[key][_key];\n          return `${_key}: ${__value}`;\n        });\n        value = `{${value}}`;\n      }\n      return `${key}: ${value}`;\n    })\n    .join(',');\n  const paramsString = params ? `(${params})` : '';\n  const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n  const fallback = [];\n  const list = await graphql(key, query, fallback);\n  return list;\n};\n\nconst graphPost = async (key = '', body = {}, fields = []) => {\n  const newRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n    })\n    .join(' ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${newRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphPut = async (key = '', body = {}, fields = []) => {\n  const updatedRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      if (valueType === 'string') return `${key}: \"${value}\"`;\n      return `${key}: ${value}`;\n    })\n    .join(', ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${updatedRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphDelete = async (key = '', id = '', fields = []) => {\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n/**\n * GraphQL Functions\n */\nexport const count = async (prefix = '') => {\n  const key = `${prefix}Count`;\n  const query = `query { ${key} }`;\n  const fallback = 0;\n  const count = await graphql(key, query, fallback);\n  return count;\n};\n\nexport const find = async (prefix = '', fields = [], options = {}) => {\n  const key = `${prefix}Many`;\n  const list = await graphGet(key, fields, options);\n  return list;\n};\n\nexport const add = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}CreateOne`;\n  const item = await graphPost(key, body, fields);\n  return item;\n};\n\nexport const updateById = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}UpdateById`;\n  const item = await graphPut(key, body, fields);\n  return item;\n};\n\nexport const removeById = async (prefix = '', id = '', fields = []) => {\n  const key = `${prefix}RemoveById`;\n  const item = await graphDelete(key, id, fields);\n  return item;\n};\n","export const capitalize = (s = '') => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const addZero = (x = 0) => {\n  return x > 9 ? x.toString() : `0${x}`;\n};\n\nexport const numberFormatter = (x = 0) => {\n  return x\n    .toString()\n    .replace(/,/g, '')\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const processPeriod = period => {\n  const now = Date.now();\n  const oneDay = 1000 * 60 * 60 * 24;\n  const oneYear = oneDay * 365;\n  const oneMonth = oneDay * 30;\n  const oneWeek = oneDay * 7;\n  let unit = oneWeek;\n  if (period.includes('Y')) {\n    unit = oneYear;\n  } else if (period.includes('M')) {\n    unit = oneMonth;\n  } else if (period.includes('W')) {\n    unit = oneWeek;\n  }\n\n  const time = parseInt(period[0]) || 2;\n  const from = now - unit * time;\n\n  return { from, to: now };\n};\n\nexport const deepClone = (o = {}) => {\n  return JSON.parse(JSON.stringify(o));\n};\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis } from '../../services';\nimport { find } from '../../graphql';\nimport { deepClone } from '../../helper';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nclass BanksHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [] };\n    this.getBanksWithForex = this.getBanksWithForex.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksWithForex();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getBanksWithForex() {\n    this.setState({ loading: true });\n    const { bank, banks } = await apis.getBanksWithForex();\n    this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n    console.log('getFinanceForexRatesData() bank', bank);\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map(rate => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map(item => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data, currency) {\n    const rates = data.map(item => {\n      const { rates } = item;\n      const rate = rates.find(rate => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map(rate => rate.buy);\n    const transferData = rates.map(rate => rate.transfer);\n    const sellData = rates.map(rate => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n    console.log('render() bank', bank);\n    console.log('render() banks', banks);\n    console.log('render() currency', currency);\n    console.log('render() currencies', currencies);\n    console.log('render() data', data);\n    console.log('render() loading', loading);\n    return (\n      <div id=\"BanksHistory\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title>History</Card.Title>\n              <Form className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue={bank} value={this.state.value}>\n                      {banks.map((bank, index) => {\n                        return (\n                          <option key={index} value={bank.name}>\n                            {bank.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue={currency} value={this.state.value}>\n                      {currencies.map((currency, index) => {\n                        return (\n                          <option key={index} value={currency}>\n                            {currency}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksHistory;\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass BanksList extends Component {\n  constructor() {\n    super();\n    this.state = { banks: [], loading: false };\n    this.getBanksWithForex = this.getBanksWithForex.bind(this);\n    this.syncForex = this.syncForex.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksWithForex();\n  }\n\n  async getBanksWithForex() {\n    this.setState({ loading: true });\n    const { banks = [] } = await apis.getBanksWithForex();\n    this.setState({ banks, loading: false });\n  }\n\n  async syncForex(id) {\n    const message = await apis.syncForex();\n    alert(message);\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('banks', banks);\n    return (\n      <div id=\"BanksList\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Forex</th>\n                        <th>Sync</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {banks.length\n                        ? banks.map((bank, index) => {\n                            const { id = '', name = '', forex = '' } = bank;\n                            return (\n                              <tr key={index}>\n                                <td>{id}</td>\n                                <td>{name}</td>\n                                <td>\n                                  <a href={forex} target=\"_blank\" rel=\"noreferrer\">\n                                    Forex\n                                  </a>\n                                </td>\n                                <td>\n                                  <Button variant=\"danger\" onClick={() => this.syncForex(id)}>\n                                    Sync\n                                  </Button>\n                                </td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksList;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass FinanceCompanies extends Component {\n  constructor() {\n    super();\n    this.state = { companies: [], loading: false };\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('companies', companies);\n    return (\n      <div id=\"FinanceCompanies\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Companies ({companies.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Symbol</th>\n                        <th>Name</th>\n                        <th>Group</th>\n                        <th>Industry</th>\n                        <th>Sub Sector</th>\n                        <th>Basic P/E</th>\n                        <th>Diluted P/E</th>\n                        <th>P/B</th>\n                        <th>P/S</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {companies.length\n                        ? companies.map((company, index) => {\n                            const {\n                              symbol,\n                              name,\n                              group,\n                              industry,\n                              subsector,\n                              basicPE,\n                              dilutedPE,\n                              PB,\n                              PS\n                            } = company;\n                            return (\n                              <tr key={index}>\n                                <td>{symbol}</td>\n                                <td>{name}</td>\n                                <td>{group}</td>\n                                <td>{industry}</td>\n                                <td>{subsector}</td>\n                                <td>{basicPE}</td>\n                                <td>{dilutedPE}</td>\n                                <td>{PB}</td>\n                                <td>{PS}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                ''\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceCompanies;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { apis } from '../../services';\nimport { processPeriod } from '../../helper';\n\nclass FinanceHighlights extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, highlights: [], from: 0, to: 0 };\n    this.updatePeriod = this.updatePeriod.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const self = this;\n    const { from = 0, to = 0 } = this.state;\n    self.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    self.setState({ highlights, loading: false });\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div className=\"FinanceHighlights\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Highlight</Card.Title>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.value}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Symbol</th>\n                        <th>Name</th>\n                        <th>Latest</th>\n                        <th>Diff</th>\n                        <th>Median</th>\n                        <th>Average</th>\n                        <th>Middle</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {highlights.length\n                        ? highlights.map((highlight, index) => {\n                            const {\n                              symbol = '',\n                              group = '',\n                              startDate = '',\n                              name = '',\n                              industry = '',\n                              subsector = '',\n                              low = false,\n                              latest,\n                              latestDate,\n                              min,\n                              minDate,\n                              max,\n                              maxDate,\n                              diff,\n                              diffToMin,\n                              diffToMax,\n                              median,\n                              average,\n                              middle\n                            } = highlight;\n                            return (\n                              <tr key={index}>\n                                <td>\n                                  <div>{symbol}</div>\n                                  <div>{group}</div>\n                                  <div>{startDate}</div>\n                                </td>\n                                <td>\n                                  <div>{name}</div>\n                                  <div>{industry}</div>\n                                  <div>{subsector}</div>\n                                </td>\n                                <td>\n                                  <div className={low ? 'text-danger' : 'text-success'}>\n                                    <div>\n                                      {latest} ({latestDate})\n                                    </div>\n                                    <div>\n                                      {min} ({minDate})\n                                    </div>\n                                    <div>\n                                      {max} ({maxDate})\n                                    </div>\n                                  </div>\n                                </td>\n                                <td>\n                                  <div className={low ? 'text-danger' : 'text-success'}>\n                                    <div>{diff}</div>\n                                    <div>{diffToMin}</div>\n                                    <div>{diffToMax}</div>\n                                  </div>\n                                </td>\n                                <td>{median}</td>\n                                <td>{average}</td>\n                                <td>{middle}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                ''\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceHighlights;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../configs';\nimport { addZero, processPeriod, deepClone } from '../../helper';\nimport { apis } from '../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nclass FinanceHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, data: [], symbols: [], symbol: '', from: 0, to: 0 };\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    const self = this;\n    self.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map(company => company.symbol);\n    const symbol = symbols[0];\n    self.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const self = this;\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = self.processLabels(result);\n    const datasets = self.processDatasets(labels, result);\n    console.log(labels, datasets);\n    self.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels, historyData) {\n    const datasets = historyData.map(item => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find(i => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map(item => {\n      const { label = '', data = [] } = item;\n\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data) {\n    let labels = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels = history.map(value => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = addZero(d.getFullYear());\n        const month = addZero(d.getMonth() + 1);\n        const date = addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.value}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.value}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceHistory;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { processPeriod } from '../../helper';\nimport { apis } from '../../services';\n\nclass FinancePotentials extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, potentials: [], from: 0, to: 0 };\n    this.updatePeriod = this.updatePeriod.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const self = this;\n    const { from = 0, to = 0 } = this.state;\n    self.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    self.setState({ potentials, loading: false });\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div className=\"FinancePotentials\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Potential</Card.Title>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.value}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Symbol</th>\n                        <th>Name</th>\n                        <th>Latest</th>\n                        <th>Diff</th>\n                        <th>Median</th>\n                        <th>Average</th>\n                        <th>Middle</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {potentials.length\n                        ? potentials.map((potential, index) => {\n                            const {\n                              symbol = '',\n                              group = '',\n                              startDate = '',\n                              name = '',\n                              industry = '',\n                              subsector = '',\n                              low = false,\n                              latest,\n                              latestDate,\n                              min,\n                              minDate,\n                              max,\n                              maxDate,\n                              diff,\n                              diffToMin,\n                              diffToMax,\n                              median,\n                              average,\n                              middle\n                            } = potential;\n                            return (\n                              <tr key={index}>\n                                <td>\n                                  <div>{symbol}</div>\n                                  <div>{group}</div>\n                                  <div>{startDate}</div>\n                                </td>\n                                <td>\n                                  <div>{name}</div>\n                                  <div>{industry}</div>\n                                  <div>{subsector}</div>\n                                </td>\n                                <td>\n                                  <div className={low ? 'text-danger' : 'text-success'}>\n                                    <div>\n                                      {latest} ({latestDate})\n                                    </div>\n                                    <div>\n                                      {min} ({minDate})\n                                    </div>\n                                    <div>\n                                      {max} ({maxDate})\n                                    </div>\n                                  </div>\n                                </td>\n                                <td>\n                                  <div className={low ? 'text-danger' : 'text-success'}>\n                                    <div>{diff}</div>\n                                    <div>{diffToMin}</div>\n                                    <div>{diffToMax}</div>\n                                  </div>\n                                </td>\n                                <td>{median}</td>\n                                <td>{average}</td>\n                                <td>{middle}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                ''\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinancePotentials;\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { numberFormatter } from '../../helper';\n\nclass FinanceProfit extends Component {\n  constructor() {\n    super();\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event) {\n    event.preventDefault();\n    const self = this;\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    self.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div className=\"FinanceProfit\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Form onSubmit={this.calculateProfit} className=\"row\">\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Buy\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateBuy}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Sell\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateSell}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Volume\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateVolume}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                    Calculate\n                  </Button>\n                </div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(buy * volume)}</div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(sell * volume)}</div>\n                <div className=\"col-sm-3\"></div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(profit)}</div>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceProfit;\n","import React, { Component } from 'react';\n\nclass HomeFooter extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"HomeFooter\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default HomeFooter;\n","import React, { Component } from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nimport routes from '../../routers';\nimport { capitalize } from '../../helper';\n\nclass HomeNavigation extends Component {\n  render() {\n    return (\n      <div id=\"HomeNavigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"ml-auto\">\n              <NavDropdown title=\"APIs\" className=\"text-white\" id=\"apis-nav-dropdown\">\n                {routes.map((route, index) => {\n                  let { path } = route;\n                  path = path.replace('/', '');\n                  if (!path) return '';\n                  return (\n                    <NavDropdown.Item\n                      key={index}\n                      href={`https://hieudoanm.github.io/vietnam/#/${path}`}>\n                      {capitalize(path)}\n                    </NavDropdown.Item>\n                  );\n                })}\n              </NavDropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default HomeNavigation;\n","import React, { Component } from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nclass HomePackages extends Component {\n  constructor(props) {\n    super(props);\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: 'https://hieudoanm.github.io/vietnam/#/banks'\n      },\n      {\n        name: 'calendar',\n        npm: '',\n        docs: 'https://hieudoanm.github.io/vietnam/#/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: '',\n        docs: 'https://hieudoanm.github.io/vietnam/#/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: '',\n        docs: 'https://hieudoanm.github.io/vietnam/#/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vietnamgovernment',\n        docs: 'https://hieudoanm.github.io/vietnam/#/government'\n      },\n      {\n        name: 'license-plates',\n        npm: '',\n        docs: 'https://hieudoanm.github.io/vietnam/#/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: '',\n        docs: 'https://hieudoanm.github.io/vietnam/#/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: 'https://hieudoanm.github.io/vietnam/#/news'\n      },\n      {\n        name: 'phones',\n        npm: '',\n        docs: 'https://hieudoanm.github.io/vietnam/#/phones'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: 'https://hieudoanm.github.io/vietnam/#/technologies'\n      },\n      {\n        name: 'sports',\n        npm: '',\n        docs: 'https://hieudoanm.github.io/vietnam/#/sports'\n      },\n      { name: 'vnltk', npm: 'vnapis', docs: 'https://hieudoanm.github.io/vietnam/#/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      apis,\n      filterAPIs: apis\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderPackages = this.renderPackages.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { query = '' } = nextProps;\n    const { apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages = [], query = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderPackages(title, packages = []) {\n    return (\n      <Card className=\"shadow\">\n        <Card.Body>\n          <Card.Title className=\"text-center\">\n            {title} ({packages.length})\n          </Card.Title>\n          <ListGroup className=\"mt-3 mb-3 text-center\">\n            {packages.length !== 0 &&\n              packages.map((_package, index) => {\n                const { name = '', npm = '', docs = '' } = _package;\n                return (\n                  <ListGroup.Item\n                    className=\"d-flex justify-content-between align-items-center\"\n                    key={index}>\n                    {name}\n                    <span>\n                      {npm && (\n                        <a\n                          href={`https://www.npmjs.com/package/${npm}`}\n                          rel=\"noreferrer\"\n                          target=\"_blank\">\n                          npm -\n                        </a>\n                      )}\n                      {docs && (\n                        <a className=\"ml-1\" href={docs} target=\"_blank\" rel=\"noreferrer\">\n                          Docs\n                        </a>\n                      )}\n                    </span>\n                  </ListGroup.Item>\n                );\n              })}\n            {packages.length === 0 && <ListGroup.Item>No packages</ListGroup.Item>}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"HomePackages\">\n        <div className=\"mt-3\">{this.renderPackages('APIs', filterAPIs)}</div>\n      </div>\n    );\n  }\n}\n\nexport default HomePackages;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('ministries', ministries);\n\n    return (\n      <div id=\"GovernmentMinisters\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Ministers ({ministers.length})</Card.Title>\n              <Form className=\"mt-3 w-100\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"latest\"\n                    value={this.state.value}\n                    onChange={this.updateMinistry}>\n                    {ministries.map((ministry, index) => {\n                      const { short, name } = ministry;\n                      return (\n                        <option key={index} value={short}>\n                          {name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Start</th>\n                        <th>End</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {ministers.length\n                        ? ministers.map((minister, index) => {\n                            const { name = '', start_date = '', end_date = '' } = minister;\n                            return (\n                              <tr key={index}>\n                                <td>{name}</td>\n                                <td>{start_date}</td>\n                                <td>{end_date.toUpperCase()}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentMinisters;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentMinistries extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    const self = this;\n\n    self.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    self.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('ministries', ministries);\n    return (\n      <div id=\"GovernmentMinistries\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Ministries ({ministries.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Level</th>\n                        <th>Level (EN)</th>\n                        <th>Name</th>\n                        <th>Name (EN)</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {ministries.length\n                        ? ministries.map((ministry, index) => {\n                            const { name = '', name_en = '', level = '', level_en = '' } = ministry;\n                            return (\n                              <tr key={index}>\n                                <td>{level}</td>\n                                <td>{level_en}</td>\n                                <td>{name}</td>\n                                <td>{name_en}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentMinistries;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsDistricts extends Component {\n  constructor() {\n    super();\n\n    this.state = { districts: [], loading: true };\n\n    this.getDistricts = this.getDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getDistricts();\n  }\n\n  async getDistricts() {\n    const self = this;\n\n    self.setState({ loading: true });\n    const districts = await apis.getDistricts();\n    self.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n    return (\n      <div id=\"MapsDistricts\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Districts ({districts.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Start</th>\n                        <th>End</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {districts.length\n                        ? districts.map((district, index) => {\n                            const { name = '', start_date = '', end_date = '' } = district;\n                            return (\n                              <tr key={index}>\n                                <td>{name}</td>\n                                <td>{start_date}</td>\n                                <td>{end_date.toUpperCase()}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsDistricts;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsProvinces extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    const self = this;\n\n    self.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    self.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    return (\n      <div id=\"MapsProvinces\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Provinces ({provinces.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsProvinces;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsWards extends Component {\n  constructor() {\n    super();\n\n    this.state = { wards: [], loading: true };\n\n    this.getWards = this.getWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWards();\n  }\n\n  async getWards() {\n    const self = this;\n\n    self.setState({ loading: true });\n    const wards = await apis.getWards();\n    self.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    return (\n      <div id=\"MapsWards\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Wards ({wards.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsWards;\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { capitalize } from '../../helper';\n\nclass NewsFeed extends Component {\n  constructor() {\n    super();\n    this.state = { category: '', categories: [], source: '', sources: [], articles: [] };\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const self = this;\n    const categories = await apis.getCategories();\n    self.setState({ categories });\n  }\n\n  async getSources() {\n    const self = this;\n    const sources = await apis.getSources();\n    self.setState({ sources });\n  }\n\n  updateCategory(event) {\n    const { value: category } = event.target;\n    this.setState({ category });\n  }\n\n  async updateSource(event) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const self = this;\n    const { category = '', source = '' } = this.state;\n    const articles = await apis.getArticles({ category, source });\n    self.setState({ articles });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [] } = this.state;\n\n    return (\n      <div id=\"NewsFeed\">\n        <Form className=\"mt-3 w-100\">\n          <div className=\"row mb-3\">\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.updateCategory}>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category}>\n                        {capitalize(category)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.value}\n                  onChange={this.updateSource}>\n                  {sources.map((source, index) => {\n                    return (\n                      <option key={index} value={source.id}>\n                        {source.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          </div>\n          <div className=\"row\">\n            {articles.length &&\n              articles.map((article = {}, index) => {\n                const {\n                  title = '',\n                  url = '',\n                  source = '',\n                  dateTimeString = '',\n                  description = ''\n                } = article;\n                return (\n                  <div key={index} className=\"col-sm-6 mb-3\">\n                    <Card className=\"w-100\">\n                      <Card.Body>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                );\n              })}\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default NewsFeed;\n","import React, { Component } from 'react';\nimport { Card, Badge } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass NewsSources extends Component {\n  constructor() {\n    super();\n    this.state = { sources: [] };\n    this.getSources = this.getSources.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    const self = this;\n    const sources = await apis.getSources();\n    self.setState({ sources });\n  }\n\n  render() {\n    const { sources = [] } = this.state;\n\n    return (\n      <div id=\"NewsSources\">\n        <div className=\"row mt-3\">\n          {sources.map((source = {}, index) => {\n            const { id = '', name = '', url = '', category = '', categories = [] } = source;\n            return (\n              <div key={index} className=\"col-sm-6 mb-3\">\n                <Card className=\"w-100\">\n                  <Card.Body>\n                    <Card.Title>\n                      <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                        {id} - {name}\n                      </a>\n                    </Card.Title>\n                    <Card.Subtitle className=\"d-block text-muted mb-1\">\n                      {category && <small>{category}</small>}\n                    </Card.Subtitle>\n                    {categories.map((category, index) => {\n                      return (\n                        <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                          {category}\n                        </Badge>\n                      );\n                    })}\n                  </Card.Body>\n                </Card>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewsSources;\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass NewsTrends extends Component {\n  constructor() {\n    super();\n    this.state = { trends: [] };\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const self = this;\n\n    const trends = await apis.getGoogleTrends();\n    self.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n    console.log('render', trends);\n    return (\n      <div id=\"NewsTrends\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Card.Title>Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"primary\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default NewsTrends;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass SportsClubs extends Component {\n  constructor() {\n    super();\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    const self = this;\n\n    self.setState({ loading: true });\n    const clubs = await apis.getSportsClubs();\n    self.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('clubs', clubs);\n\n    return (\n      <div id=\"SportsClubs\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Clubs ({clubs.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Sport</th>\n                        <th>Competition</th>\n                        <th>City</th>\n                        <th>Name</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {clubs.length\n                        ? clubs.map((club, index) => {\n                            const { sport = '', name = '', competition = '', city = '' } = club;\n                            return (\n                              <tr key={index}>\n                                <td>{sport}</td>\n                                <td>{competition}</td>\n                                <td>{city}</td>\n                                <td>{name}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SportsClubs;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { BanksForex, BanksHistory, BanksList } from '../components';\n\nclass Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"forex\" className=\"nav-justified\">\n            <Tab eventKey=\"forex\" title=\"Forex\">\n              <BanksForex></BanksForex>\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <BanksHistory></BanksHistory>\n            </Tab>\n            <Tab eventKey=\"list\" title=\"List\">\n              <BanksList></BanksList>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Banks;\n","import React, { Component } from 'react';\n\nclass Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\">\n        <main className=\"container mt-3\"></main>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nclass EthnicMinorities extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', ethnicMinorities: [], filterEthnicMinorities: [], loading: true };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type } = ethnicMinority;\n      return query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { license } = ethnicMinority;\n      return query ? license.includes(query) : true;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    return (\n      <div id=\"EthnicMinorities\">\n        <main className=\"container\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>\n                <Card.Title className=\"text-center\">\n                  Ethnic Minorities ({filterEthnicMinorities.length})\n                </Card.Title>\n                <Form className=\"mt-3 mb-3 w-100\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Type\"\n                    value={this.state.value}\n                    onChange={this.filter}></Form.Control>\n                </Form>\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading && (\n                  <div className=\"table-responsive table-container\">\n                    <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Type</th>\n                          <th>Type (EN)</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {filterEthnicMinorities.length\n                          ? filterEthnicMinorities.map((ethnicMinority, index) => {\n                              const { name = '', type = '', type_en = '' } = ethnicMinority;\n                              return (\n                                <tr key={index}>\n                                  <td>{name}</td>\n                                  <td>{type}</td>\n                                  <td>{type_en}</td>\n                                </tr>\n                              );\n                            })\n                          : ''}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default EthnicMinorities;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport {\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit\n} from '../components';\n\nclass Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"companies\" className=\"nav-justified\">\n            <Tab eventKey=\"companies\" title=\"Forex\">\n              <FinanceCompanies></FinanceCompanies>\n            </Tab>\n            <Tab eventKey=\"highlights\" title=\"Highlights\">\n              <FinanceHighlights></FinanceHighlights>\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <FinanceHistory></FinanceHistory>\n            </Tab>\n            <Tab eventKey=\"potentials\" title=\"Potentials\">\n              <FinancePotentials></FinancePotentials>\n            </Tab>\n            <Tab eventKey=\"profit\" title=\"Profit\">\n              <FinanceProfit></FinanceProfit>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Finance;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { GovernmentMinisters, GovernmentMinistries } from '../components';\n\nclass Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"ministries\" className=\"nav-justified\">\n            <Tab eventKey=\"ministries\" title=\"Ministries\">\n              <GovernmentMinistries></GovernmentMinistries>\n            </Tab>\n            <Tab eventKey=\"ministers\" title=\"Ministers\">\n              <GovernmentMinisters></GovernmentMinisters>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Government;\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport { HomePackages } from '../components';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = { query: '' };\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  updateQuery(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div id=\"Home\">\n        <main className=\"container\">\n          <Form className=\"mt-3 w-100\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Query\"\n              value={this.state.value}\n              onChange={this.updateQuery}></Form.Control>\n          </Form>\n          <HomePackages query={query}></HomePackages>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nclass LicensePlates extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.includes(query) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n\n    return (\n      <div id=\"LicensePlates\">\n        <main className=\"container\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>\n                <Card.Title className=\"text-center\">\n                  License Plates ({filterLicensePlates.length})\n                </Card.Title>\n                <Form className=\"mt-3 mb-3 w-100\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"License\"\n                    value={this.state.value}\n                    onChange={this.filter}></Form.Control>\n                </Form>\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading && (\n                  <div className=\"table-responsive table-container\">\n                    <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <th>License</th>\n                          <th>Definition</th>\n                          <th>Type</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {filterLicensePlates.length\n                          ? filterLicensePlates.map((licensePlate, index) => {\n                              const { license = '', definition = '', type = '' } = licensePlate;\n                              return (\n                                <tr key={index}>\n                                  <td>{license}</td>\n                                  <td>{definition}</td>\n                                  <td>{type}</td>\n                                </tr>\n                              );\n                            })\n                          : ''}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default LicensePlates;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { MapsDistricts, MapsProvinces, MapsWards } from '../components';\n\nclass Maps extends Component {\n  render() {\n    return (\n      <div id=\"Maps\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"provinces\" className=\"nav-justified\">\n            <Tab eventKey=\"provinces\" title=\"Provinces\">\n              <MapsProvinces></MapsProvinces>\n            </Tab>\n            <Tab eventKey=\"districts\" title=\"Districts\">\n              <MapsDistricts></MapsDistricts>\n            </Tab>\n            <Tab eventKey=\"wards\" title=\"Wards\">\n              <MapsWards></MapsWards>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Maps;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { NewsFeed, NewsSources, NewsTrends } from '../components';\n\nclass News extends Component {\n  render() {\n    return (\n      <div id=\"News\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"feed\" className=\"nav-justified\">\n            <Tab eventKey=\"feed\" title=\"Feed\">\n              <NewsFeed></NewsFeed>\n            </Tab>\n            <Tab eventKey=\"sources\" title=\"Sources\">\n              <NewsSources></NewsSources>\n            </Tab>\n            <Tab eventKey=\"trends\" title=\"Trends\">\n              <NewsTrends></NewsTrends>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default News;\n","import React, { Component } from 'react';\n\nclass Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\">\n        <main className=\"container mt-3\"></main>\n      </div>\n    );\n  }\n}\n\nexport default Phones;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { SportsClubs } from '../components';\n\nclass Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"clubs\" className=\"nav-justified\">\n            <Tab eventKey=\"clubs\" title=\"Clubs\">\n              <SportsClubs></SportsClubs>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Sports;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nclass Technologies extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(ethnicMinority => {\n      const { type } = ethnicMinority;\n      return query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter(ethnicMinority => {\n      const { license } = ethnicMinority;\n      return query ? license.includes(query) : true;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"Technologies\">\n        <main className=\"container\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>\n                <Card.Title className=\"text-center\">\n                  Technologies ({filterTechnologies.length})\n                </Card.Title>\n                <Form className=\"mt-3 mb-3 w-100\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Type\"\n                    value={this.state.value}\n                    onChange={this.filter}></Form.Control>\n                </Form>\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading && (\n                  <div className=\"table-responsive table-container\">\n                    <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Type</th>\n                          <th>npm</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {filterTechnologies.length\n                          ? filterTechnologies.map((ethnicMinority, index) => {\n                              const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                              return (\n                                <tr key={index}>\n                                  <td>\n                                    <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                                      {name}\n                                    </a>\n                                  </td>\n                                  <td>{type}</td>\n                                  <td>\n                                    {npm && (\n                                      <a\n                                        href={`https://www.npmjs.com/package/${npm}`}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\">\n                                        npm\n                                      </a>\n                                    )}\n                                  </td>\n                                </tr>\n                              );\n                            })\n                          : ''}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Technologies;\n","import React, { Component } from 'react';\nimport { Form, Card } from 'react-bootstrap';\nimport VietceteraClient from 'vietcetera';\n\nconst vietcetera = new VietceteraClient();\n\nclass Vietcetera extends Component {\n  constructor() {\n    super();\n    this.state = { articles: [] };\n    this.getArticles = this.getArticles.bind(this);\n    this.processArticles = this.processArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    this.setState({ articles });\n  }\n\n  processArticles(articles = []) {\n    return articles.map((article = {}) => {\n      const { title = '', slug = '', language = '', publishDate = '', excerpt = '' } = article;\n      const url =\n        language && slug ? `https://vietcetera.com/${language.toLowerCase()}/${slug}` : '';\n      const description = excerpt.replace('<p>', '').replace('</p>', '');\n      return { title, url, publishDate, description };\n    });\n  }\n\n  async getArticles(event) {\n    const { value: type = '' } = event.target;\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    console.log(articles);\n    this.setState({ articles });\n  }\n\n  render() {\n    const { articles = [] } = this.state;\n\n    return (\n      <div id=\"Vietcetera\">\n        <main className=\"container\">\n          <Form className=\"mt-3 w-100\">\n            <Form.Group>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"latest\"\n                value={this.state.value}\n                onChange={this.getArticles}>\n                <option value=\"latest\">Latest</option>\n                <option value=\"popular\">Popular</option>\n                <option value=\"editor-pick\">Editor Pick</option>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n          <div className=\"mb-5 row\">\n            {articles.length !== 0 &&\n              articles.map((article, index) => {\n                const { title = '', url = '', publishDate = '', description = '' } = article;\n                return (\n                  <div className=\"col-sm-6\">\n                    <Card key={index} className=\"mb-3\">\n                      <Card.Body>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"text-muted\">{publishDate}</Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                );\n              })}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Vietcetera;\n","import {\n  Banks,\n  Calendar,\n  EthnicMinorities,\n  Finance,\n  Government,\n  Home,\n  LicensePlates,\n  Maps,\n  News,\n  Phones,\n  Sports,\n  Technologies,\n  Vietcetera\n} from '../pages';\n\nconst routes = [\n  {\n    path: '/',\n    component: Home\n  },\n  {\n    path: '/banks',\n    component: Banks\n  },\n  {\n    path: '/calendar',\n    component: Calendar\n  },\n  {\n    path: '/ethnic-minorities',\n    component: EthnicMinorities\n  },\n  {\n    path: '/finance',\n    component: Finance\n  },\n  {\n    path: '/government',\n    component: Government\n  },\n  {\n    path: '/license-plates',\n    component: LicensePlates\n  },\n  {\n    path: '/maps',\n    component: Maps\n  },\n  {\n    path: '/news',\n    component: News\n  },\n  {\n    path: '/phones',\n    component: Phones\n  },\n  {\n    path: '/sports',\n    component: Sports\n  },\n  {\n    path: '/technologies',\n    component: Technologies\n  },\n  {\n    path: '/vietcetera',\n    component: Vietcetera\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { HomeFooter, HomeNavigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HomeNavigation></HomeNavigation>\n        <div className=\"pb-5\">\n          <div className=\"pb-5\">\n            <HashRouter basename=\"/\">\n              {routes.map((route, key) => {\n                const { path, component } = route;\n                return <Route exact path={path} component={component}></Route>;\n              })}\n            </HashRouter>\n          </div>\n        </div>\n        <HomeFooter></HomeFooter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}