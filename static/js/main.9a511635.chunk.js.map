{"version":3,"sources":["configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/index.ts","pages/demo/banks/Forex.tsx","pages/demo/banks/History.tsx","pages/demo/banks/List.tsx","pages/demo/calendar/Converter.tsx","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","components/Navigation.tsx","components/SmallDoc.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/LicensePlates.tsx","pages/docs/Maps.tsx","pages/docs/News.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Technologies.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/maps/Districts.tsx","pages/demo/maps/PostalCodes.tsx","pages/demo/maps/Provinces.tsx","pages/demo/maps/Wards.tsx","pages/demo/news/Feed.tsx","routers/index.ts","pages/demo/news/Sources.tsx","pages/demo/news/Trends.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/sports/Clubs.tsx","pages/demo/technologies/APIs.tsx","pages/demo/technologies/GiaoHangNhanh.tsx","pages/demo/technologies/Vietcetera.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","periods","label","value","months","name","short","endpoints","banks","getForexBanks","id","path","url","demo","method","request","headers","key","query","body","response","200","schema","type","description","example","400","message","getForexRates","currencies","data","syncForexRates","required","status","calendar","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","ethnicMinorities","getEthnicMinorities","type_en","finance","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHistory","history","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","calculateProfit","profit","government","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","province","district","percentage","getMinistries","name_en","level","level_en","getMinisters","licensePlates","getLicensePlates","license","definition","maps","getMapsPostalCodes","code","province_id","getMapsProvinces","capital","macro_region","macro_region_en","region","region_en","getMapsDistricts","getMapsWards","district_id","news","getArticles","source","pubDate","day","hours","minutes","seconds","timestamp","dateTimeString","getTrends","hour","categories","getSources","category","getCategories","total","phones","getPhonesPrefixes","prefix","provider","provider_id","getPhonesProviders","prefixes","sports","getSportsClubs","sport","sport_en","competition","city","technologies","getTechnologies","type_id","npm","getGHNProvinces","getVietceteraArticles","publishDate","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","articles","buy","sell","volume","from","to","currency","bank","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","apis","helper","BanksForex","props","state","loading","sortBy","sortDir","getBanksForexRates","bind","sort","setState","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","className","Card","Body","Spinner","animation","variant","Form","Group","Control","as","defaultValue","index","onClick","time","Component","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","find","rates","rate","labels","minute","datasets","buyData","transferData","sellData","lines","deepClone","assign","Title","BanksList","renderTable","href","target","rel","Button","CalendarConverter","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getFullYear","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","capitalize","event","split","controlId","Label","placeholder","pattern","onChange","API","api","copyToClipboard","CURL","buildDataRaw","trim","dataRaw","header","lastFlag","Table","caption","rows","rowConfigs","emptyRowsText","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","Navigation","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","route","navigation","Link","SmallDoc","renderSidebar","scrollIntoView","element","document","getElementById","behavior","colors","get","post","color","toLowerCase","Banks","Calendar","Docs","Accordion","Toggle","Collapse","groups","EthnicMinorities","Finance","Government","LicensePlates","Maps","News","Phones","Sports","Technologies","EthnicMinoritiesList","filterEthnicMinorities","ethnicMinority","typeFlag","typeEnFlag","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","processPeriod","highlight","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","concat","array","indexOf","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","Home","docs","filterAPIs","externalPackages","filterExternalPackages","filterPackages","updateQuery","packages","_package","LicensePlatesList","filterLicensePlates","licensePlate","MapsDistricts","provinces","districts","updateProvince","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","wards","NewsFeed","sources","updateCategory","updateSource","ListGroup","article","Subtitle","Text","component","Badge","getGoogleTrends","trend","providers","_provider","clubs","filterTechnologies","technology","nameFlag","option","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9a511635.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\ninterface IPeriod {\n  label: string;\n  value: string;\n}\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\ninterface IMonth {\n  name: string;\n  short: string;\n}\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'maps'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport interface IEndpoints {\n  banks: IBanksEndpoints;\n  calendar: ICalendarEndpoints;\n  ethnicMinorities: IEthnicMinoritiesEndpoints;\n  finance: IFinanceEndpoints;\n  government: IGovernmentEndpoints;\n  licensePlates: ILicensePlatesEndpoints;\n  maps: IMapsEndpoints;\n  news: INewsEndpoints;\n  phones: IPhonesEndpoints;\n  sports: ISportsEndpoints;\n  technologies: ITechnologiesEndpoints;\n}\n\ninterface IBanksEndpoints {\n  getForexBanks: IEndpoint;\n  getForexRates: IEndpoint;\n  syncForexRates: IEndpoint;\n}\ninterface ICalendarEndpoints {\n  convertLunarToSolar: IEndpoint;\n  convertSolarToLunar: IEndpoint;\n  getCanChi: IEndpoint;\n}\ninterface IEthnicMinoritiesEndpoints {\n  getEthnicMinorities: IEndpoint;\n}\ninterface IFinanceEndpoints {\n  getStockCompanies: IEndpoint;\n  getStockHistory: IEndpoint;\n  getStockHighlights: IEndpoint;\n  getStockPotentials: IEndpoint;\n  calculateProfit: IEndpoint;\n}\ninterface IGovernmentEndpoints {\n  getGeneralSecretaries: IEndpoint;\n  getPresidents: IEndpoint;\n  getPrimeMinisters: IEndpoint;\n  getNationalAssemblyChairs: IEndpoint;\n  getNationalAssemblyMembers: IEndpoint;\n  getMinistries: IEndpoint;\n  getMinisters: IEndpoint;\n}\ninterface ILicensePlatesEndpoints {\n  getLicensePlates: IEndpoint;\n}\ninterface IMapsEndpoints {\n  getMapsPostalCodes: IEndpoint;\n  getMapsProvinces: IEndpoint;\n  getMapsDistricts: IEndpoint;\n  getMapsWards: IEndpoint;\n}\ninterface INewsEndpoints {\n  getArticles: IEndpoint;\n  getTrends: IEndpoint;\n  getSources: IEndpoint;\n  getCategories: IEndpoint;\n}\ninterface IPhonesEndpoints {\n  getPhonesPrefixes: IEndpoint;\n  getPhonesProviders: IEndpoint;\n}\ninterface ISportsEndpoints {\n  getSportsClubs: IEndpoint;\n}\ninterface ITechnologiesEndpoints {\n  getTechnologies: IEndpoint;\n  getGHNProvinces: IEndpoint;\n  getVietceteraArticles: IEndpoint;\n}\n\nexport interface IEndpoint {\n  id: string;\n  name: string;\n  path: string;\n  url: string;\n  demo: string;\n  method: string;\n  request: IEndpointRequest;\n  response: IEndpointResponse;\n}\n\nexport interface IEndpointRequest {\n  headers?: Array<IEndpointRequestHeader>;\n  query: Array<IEndpointRequestQuery>;\n  body: Array<IEndpointRequestBody>;\n}\n\ninterface IEndpointRequestHeader {\n  key: string;\n  value: string;\n}\n\ninterface IEndpointRequestQuery {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointRequestBody {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointResponse {\n  200: IEndpointResponseDetails;\n  400: IEndpointResponseDetails;\n}\n\ninterface IEndpointResponseDetails {\n  schema: Array<IEndpointResponseSchema>;\n  example: any;\n}\n\ninterface IEndpointResponseSchema {\n  name: string;\n  type: string;\n  description: string;\n}\n\nexport const endpoints: IEndpoints = {\n  banks: {\n    getForexBanks: {\n      id: 'getForexBanks',\n      name: 'Get Forex Banks',\n      path: '/banks/forex/banks',\n      url: `${baseAPI}/banks/forex/banks`,\n      demo: 'banks-list',\n      method: 'GET',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' }\n          ],\n          example: [{ id: '<string>', name: '<string>', url: '<string>' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getForexRates: {\n      id: 'getForexRates',\n      name: 'Get Forex Rates',\n      method: 'GET',\n      path: '/banks/forex/rates',\n      url: `${baseAPI}/banks/forex/rates`,\n      demo: 'banks-forex',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'currencies', type: 'Array<string>', description: '' },\n            { name: 'data', type: 'Array<Rates>', description: '' }\n          ],\n          example: {\n            currencies: '<Array<string>>',\n            data: '<Array<any>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    syncForexRates: {\n      id: 'syncForexRates',\n      name: 'Sync Forex Rates',\n      method: 'POST',\n      path: '/banks/forex/sync',\n      url: `${baseAPI}/banks/forex/sync`,\n      demo: 'banks-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'id', required: true, type: 'string', description: '' }]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'status', type: 'string', description: '' }],\n          example: { status: '<string>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  calendar: {\n    convertLunarToSolar: {\n      id: 'convertLunarToSolar',\n      name: 'Convert Lunar Date to Solar Date',\n      method: 'POST',\n      path: '/calendar/lunar2solar',\n      url: `${baseAPI}/calendar/lunar2solar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: { year: '<number>', month: '<number>', date: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    convertSolarToLunar: {\n      id: 'convertSolarToLunar',\n      name: 'Convert Solar Date to Lunar Date',\n      method: 'POST',\n      path: '/calendar/solar2lunar',\n      url: `${baseAPI}/calendar/solar2lunar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: { year: '<number>', month: '<number>', date: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getCanChi: {\n      id: 'getCanChi',\n      name: 'Get Can Chi of Lunar Date',\n      method: 'POST',\n      path: '/calendar/lunar/can-chi',\n      url: `${baseAPI}/calendar/lunar/can-chi`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'canChi', type: 'string', description: '' }],\n          example: { canChi: '<string>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  ethnicMinorities: {\n    getEthnicMinorities: {\n      id: 'getEthnicMinorities',\n      name: 'Get Ethnic Minorities',\n      method: 'GET',\n      path: '/ethnic-minorities',\n      url: `${baseAPI}/ethnic-minorities`,\n      demo: 'ethnic-minorities-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_en', type: 'string', description: '' }\n          ],\n          example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  finance: {\n    getStockCompanies: {\n      id: 'getStockCompanies',\n      name: 'Get Listed Companies',\n      method: 'GET',\n      path: '/finance/companies',\n      url: `${baseAPI}/finance/companies`,\n      demo: 'finance-companies',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'market', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'supersector', type: 'string', description: '' },\n            { name: 'sector', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'listingDate', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              market: '<string>',\n              group: '<string>',\n              symbol: '<string>',\n              name: '<string>',\n              industry: '<string>',\n              supersector: '<string>',\n              sector: '<string>',\n              subsector: '<string>',\n              listingDate: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockHistory: {\n      id: 'getStockHistory',\n      name: 'Get Stock History',\n      method: 'POST',\n      path: '/finance/history',\n      url: `${baseAPI}/finance/history`,\n      demo: 'finance-history',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'symbol', type: 'string', required: true, description: '' },\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'history', type: 'Array<Date>', description: '' }\n          ],\n          example: {\n            symbol: '<string>',\n            name: '<string>',\n            group: '<string>',\n            industry: '<string>',\n            subsector: '<string>',\n            history: '<Array<any>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockHighlights: {\n      id: 'getStockHighlights',\n      name: 'Get Stock Highlights',\n      method: 'POST',\n      path: '/finance/highlights',\n      url: `${baseAPI}/finance/highlights`,\n      demo: 'finance-highlights',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'average', type: 'number', description: '' },\n            { name: 'diff', type: 'number', description: '' },\n            { name: 'diffToMax', type: 'number', description: '' },\n            { name: 'diffToMin', type: 'number', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'latest', type: 'number', description: '' },\n            { name: 'latestDate', type: 'string', description: '' },\n            { name: 'low', type: 'boolean', description: '' },\n            { name: 'max', type: 'number', description: '' },\n            { name: 'maxDate', type: 'string', description: '' },\n            { name: 'median', type: 'number', description: '' },\n            { name: 'min', type: 'number', description: '' },\n            { name: 'minDate', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'numberOfDates', type: 'number', description: '' },\n            { name: 'start', type: 'number', description: '' },\n            { name: 'startDate', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              average: '<number>',\n              diff: '<number>',\n              diffToMax: '<number>',\n              diffToMin: '<number>',\n              group: '<string>',\n              industry: '<string>',\n              latest: '<number>',\n              latestDate: '<string>',\n              low: '<boolean>',\n              max: '<number>',\n              maxDate: '<string>',\n              median: '<number>',\n              min: '<number>',\n              minDate: '<string>',\n              name: '<string>',\n              numberOfDates: '<number>',\n              start: '<number>',\n              startDate: '<string>',\n              subsector: '<string>',\n              symbol: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getStockPotentials: {\n      id: 'getStockPotentials',\n      name: 'Get Stock Potentials',\n      method: 'POST',\n      path: '/finance/potentials',\n      url: `${baseAPI}/finance/potentials`,\n      demo: 'finance-potentials',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'average', type: 'number', description: '' },\n            { name: 'diff', type: 'number', description: '' },\n            { name: 'diffToMax', type: 'number', description: '' },\n            { name: 'diffToMin', type: 'number', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'latest', type: 'number', description: '' },\n            { name: 'latestDate', type: 'string', description: '' },\n            { name: 'low', type: 'boolean', description: '' },\n            { name: 'max', type: 'number', description: '' },\n            { name: 'maxDate', type: 'string', description: '' },\n            { name: 'median', type: 'number', description: '' },\n            { name: 'min', type: 'number', description: '' },\n            { name: 'minDate', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'numberOfDates', type: 'number', description: '' },\n            { name: 'start', type: 'number', description: '' },\n            { name: 'startDate', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              average: '<number>',\n              diff: '<number>',\n              diffToMax: '<number>',\n              diffToMin: '<number>',\n              group: '<string>',\n              industry: '<string>',\n              latest: '<number>',\n              latestDate: '<string>',\n              low: '<boolean>',\n              max: '<number>',\n              maxDate: '<string>',\n              median: '<number>',\n              min: '<number>',\n              minDate: '<string>',\n              name: '<string>',\n              numberOfDates: '<number>',\n              start: '<number>',\n              startDate: '<string>',\n              subsector: '<string>',\n              symbol: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    calculateProfit: {\n      id: 'calculateProfit',\n      name: 'Calculate Profit',\n      method: 'POST',\n      path: '/finance/profit',\n      url: `${baseAPI}/finance/profit`,\n      demo: 'finance-profit',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'buy', type: 'number', required: true, description: '' },\n          { name: 'sell', type: 'number', required: true, description: '' },\n          { name: 'volume', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [{ name: 'profit', type: 'number', description: '' }],\n          example: { profit: '<number>' }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  government: {\n    getGeneralSecretaries: {\n      id: 'getGeneralSecretaries',\n      name: 'Get General Secretaries',\n      method: 'GET',\n      path: '/government/general-secretaries',\n      url: `${baseAPI}/government/general-secretaries`,\n      demo: 'government-general-secretaries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'string', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPresidents: {\n      id: 'getPresidents',\n      name: 'Get Presidents',\n      method: 'GET',\n      path: '/government/presidents',\n      url: `${baseAPI}/government/presidents`,\n      demo: 'government-presidents',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPrimeMinisters: {\n      id: 'getPrimeMinisters',\n      name: 'Get Prime Ministers',\n      method: 'GET',\n      path: '/government/prime-ministers',\n      url: `${baseAPI}/government/prime-ministers`,\n      demo: 'government-prime-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getNationalAssemblyChairs: {\n      id: 'getNationalAssemblyChairs',\n      name: 'Get National Assembly Chairs',\n      method: 'GET',\n      path: '/government/national-assembly/chairs',\n      url: `${baseAPI}/government/national-assembly/chairs`,\n      demo: 'government-national-assembly-chairs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getNationalAssemblyMembers: {\n      id: 'getNationalAssemblyMembers',\n      name: 'Get National Assembly Members',\n      method: 'GET',\n      path: '/government/national-assembly/members',\n      url: `${baseAPI}/government/national-assembly/members`,\n      demo: 'government-national-assembly-members',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'no', type: 'number', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'no', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'date_of_birth', type: 'string', description: '' },\n            { name: 'city_of_birth', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'degree', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'percentage', type: 'number', description: '' }\n          ],\n          example: [\n            {\n              no: '<number>',\n              name: '<string>',\n              date_of_birth: '<string>',\n              city_of_birth: '<string>',\n              gender: '<string>',\n              degree: '<string>',\n              province: '<string>',\n              district: '<string>',\n              percentage: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMinistries: {\n      id: 'getMinistries',\n      name: 'Get Ministries',\n      method: 'GET',\n      path: '/government/ministries',\n      url: `${baseAPI}/government/ministries`,\n      demo: 'government-ministries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'name_en', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              short: '<string>',\n              name: '<string>',\n              name_en: '<string>',\n              level: '<string>',\n              level_en: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMinisters: {\n      id: 'getMinisters',\n      name: 'Get Ministers',\n      method: 'GET',\n      path: '/government/ministers',\n      url: `${baseAPI}/government/ministers`,\n      demo: 'government-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              title_en: '<string>',\n              title_short: '<string>',\n              name: '<string>',\n              gender: '<string>',\n              gender_en: '<string>',\n              start_date: '<string>',\n              end_date: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  licensePlates: {\n    getLicensePlates: {\n      id: 'getLicensePlates',\n      name: 'Get License Plates',\n      method: 'GET',\n      path: '/license-plates',\n      url: `${baseAPI}/license-plates`,\n      demo: 'license-plates-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'license', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'license', type: 'string', description: '' },\n            { name: 'definition', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' }\n          ],\n          example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  maps: {\n    getMapsPostalCodes: {\n      id: 'getMapsPostalCodes',\n      name: 'Get Postal Codes',\n      method: 'GET',\n      path: '/maps/postal-codes',\n      url: `${baseAPI}/maps/postal-codes`,\n      demo: 'maps-postal-codes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'code', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              code: '<string>',\n              province: '<string>',\n              province_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMapsProvinces: {\n      id: 'getMapsProvinces',\n      name: 'Get Provinces',\n      method: 'GET',\n      path: '/maps/provinces',\n      url: `${baseAPI}/maps/provinces`,\n      demo: 'maps-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'level_en', type: 'string', required: false, description: '' },\n          { name: 'macro_region_en', type: 'string', required: false, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'capital', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'macro_region', type: 'string', description: '' },\n            { name: 'macro_region_en', type: 'string', description: '' },\n            { name: 'region', type: 'string', description: '' },\n            { name: 'region_en', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              province_id: '<string>',\n              name: '<string>',\n              capital: '<string>',\n              level: '<string>',\n              level_en: '<string>',\n              macro_region: '<string>',\n              macro_region_en: '<string>',\n              region: '<string>',\n              region_en: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMapsDistricts: {\n      id: 'getMapsDistricts',\n      name: 'Get Districts',\n      method: 'GET',\n      path: '/maps/districts',\n      url: `${baseAPI}/maps/districts`,\n      demo: 'maps-districts',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              name: '<string>',\n              level: '<string>',\n              level_en: '<string>',\n              province: '<string>',\n              province_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getMapsWards: {\n      id: 'getMapsWards',\n      name: 'Get Wards',\n      method: 'GET',\n      path: '/maps/wards',\n      url: `${baseAPI}/maps/wards`,\n      demo: 'maps-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'district_id', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              name: '<string>',\n              level: '<string>',\n              level_en: '<string>',\n              district: '<string>',\n              district_id: '<string>',\n              province: '<string>',\n              province_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  news: {\n    getArticles: {\n      id: 'getArticles',\n      name: 'Get Articles',\n      method: 'GET',\n      path: '/news',\n      url: `${baseAPI}/news`,\n      demo: 'news-feed',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'category', type: 'string', required: true, description: '' },\n          { name: 'source', type: 'string', required: true, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'source', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' },\n            { name: 'pubDate', type: 'string', description: '' },\n            { name: 'day', type: 'string', description: '' },\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hours', type: 'number', description: '' },\n            { name: 'minutes', type: 'number', description: '' },\n            { name: 'seconds', type: 'number', description: '' },\n            { name: 'timestamp', type: 'number', description: '' },\n            { name: 'dateTimeString', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              url: '<string>',\n              source: '<string>',\n              description: '<string>',\n              pubDate: '<string>',\n              day: '<string>',\n              year: '<number>',\n              month: '<number>',\n              date: '<number>',\n              hours: '<number>',\n              minutes: '<number>',\n              seconds: '<number>',\n              timestamp: '<number>',\n              dateTimeString: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getTrends: {\n      id: 'getTrends',\n      name: 'Get (Google) Trends',\n      method: 'GET',\n      path: '/news/trends',\n      url: `${baseAPI}/news/trends`,\n      demo: 'news-trends',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hour', type: 'number', description: '' },\n            { name: 'trends', type: 'Array<string>', description: '' }\n          ],\n          example: {\n            year: '<number>',\n            month: '<number>',\n            date: '<number>',\n            hour: '<number>',\n            categories: '<Array<string>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getSources: {\n      id: 'getSources',\n      name: 'Get Sources',\n      method: 'GET',\n      path: '/news/sources',\n      url: `${baseAPI}/news/sources`,\n      demo: 'news-sources',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'category', type: 'string', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ],\n          example: [\n            {\n              id: '<string>',\n              name: '<string>',\n              url: '<string>',\n              category: '<string>',\n              categories: '<Array<string>>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getCategories: {\n      id: 'getCategories',\n      name: 'Get Categories',\n      method: 'GET',\n      path: '/news/categories',\n      url: `${baseAPI}/news/categories`,\n      demo: 'news-categories',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'total', type: 'number', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ],\n          example: {\n            total: '<number>',\n            categories: '<Array<string>>'\n          }\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  phones: {\n    getPhonesPrefixes: {\n      id: 'getPhonesPrefixes',\n      name: 'Get Phone Prefixes',\n      method: 'GET',\n      path: '/phones/prefixes',\n      url: `${baseAPI}/phones/prefixes`,\n      demo: 'phones-prefixes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'prefix', type: 'string', description: '' },\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'provider_id', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              id: '<string>',\n              prefix: '<string>',\n              provider: '<string>',\n              provider_id: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getPhonesProviders: {\n      id: 'getPhonesProviders',\n      name: 'Get Phone Providers',\n      method: 'GET',\n      path: '/phones/providers',\n      url: `${baseAPI}/phones/providers`,\n      demo: 'phones-providers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'prefixes', type: 'Array<string>', description: '' }\n          ],\n          example: [\n            {\n              provider: '<string>',\n              prefixes: '<Array<string>>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  sports: {\n    getSportsClubs: {\n      id: 'getSportsClubs',\n      name: 'Get Sports Clubs',\n      method: 'GET',\n      path: '/sports/clubs',\n      url: `${baseAPI}/sports/clubs`,\n      demo: 'sports-clubs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'sport', type: 'string', description: '' },\n            { name: 'sport_en', type: 'string', description: '' },\n            { name: 'competition', type: 'string', description: '' },\n            { name: 'city', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              sport: '<string>',\n              sport_en: '<string>',\n              competition: '<string>',\n              city: '<string>',\n              name: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  },\n  technologies: {\n    getTechnologies: {\n      id: 'getTechnologies',\n      name: 'Get Public APIs',\n      method: 'GET',\n      path: '/technologies',\n      url: `${baseAPI}/technologies`,\n      demo: 'technologies-apis',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_id', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'npm', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              name: '<string>',\n              type: '<string>',\n              type_id: '<string>',\n              url: '<string>',\n              npm: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getGHNProvinces: {\n      id: 'getGHNProvinces',\n      name: 'GHN - Get Provinces',\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/provinces',\n      url: `${baseAPI}/technologies/giaohangnhanh/provinces`,\n      demo: 'technologies-ghn-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              province_id: '<string>',\n              name: '<string>',\n              code: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    },\n    getVietceteraArticles: {\n      id: 'getVietceteraArticles',\n      name: 'Get Vietcetera Articles',\n      method: 'GET',\n      path: '/technologies/vietcetera',\n      url: `${baseAPI}/technologies/vietcetera`,\n      demo: 'technologies-vietcetera',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'publishDate', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' }\n          ],\n          example: [\n            {\n              title: '<string>',\n              url: '<string>',\n              publishDate: '<string>',\n              description: '<string>'\n            }\n          ]\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: '<string>' }\n        }\n      }\n    }\n  }\n};\n","import { endpoints, IEndpoint } from '../configs';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries() {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents() {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters() {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs() {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number) {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries() {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string) {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends() {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources() {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCategories() {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint);\n    return categories;\n  }\n\n  public async getArticles(options: any = {}) {\n    const { category, source } = options;\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number) {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies() {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { query: {}, body: { symbol, from, to } });\n  }\n\n  public async getBanksForexRates() {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks() {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  public async syncForexRates(id: string) {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getMapsPostalCodes() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMapsProvinces() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMapsDistricts(province_id: string) {\n    const endpoint: IEndpoint = endpoints.maps.getMapsDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getMapsWards() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates() {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities() {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getTechnologies() {\n    const endpoint: IEndpoint = endpoints.technologies.getTechnologies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesProviders() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesPrefixes() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNProvinces() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string) {\n    const endpoint: IEndpoint = endpoints.technologies.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\n\nexport { apis, graphql, helper };\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksForexProps {}\n\ninterface IBanksForexState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nexport default class BanksForex extends Component<IBanksForexProps, IBanksForexState> {\n  constructor(props: IBanksForexProps) {\n    super(props);\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    this.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && (\n              <Form>\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency.toUpperCase()}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n            )}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                          Buy\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                          Transfer\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                          Sell\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const { bank = '', time = '', buy = {}, transfer = {}, sell = {} } = item;\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buy[currency] || ''}</td>\n                              <td>{transfer[currency] || ''}</td>\n                              <td>{sell[currency] || ''}</td>\n                              <td>{time}</td>\n                            </tr>\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.bank}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank.name}>\n                          {bank.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string) {\n    const message = await apis.syncForexRates(id);\n    alert(message);\n  }\n\n  renderTable(loading: boolean, banks: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', url = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = { solarDate: '', solarString: '', lunarDate: '', lunarString: '' };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    return await apis.getCanChi(year, month, date);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n}\n\nexport default class API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n}\n\nexport default class Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data'\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\n\nexport default class Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">\n                    <b>{name}</b>\n                  </h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className=\"mb-3\">\n          <b>{header}</b>\n        </h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavigationProps {}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path: pathname, text } = route;\n                      return (\n                        <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Doc from './Doc';\nimport { endpoints, IEndpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n}\n\ninterface ISmallDocState {\n  endpoints: IEndpoints;\n}\n\nexport default class SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header } = this.props;\n    const apis = Object.values(endpoints[group]);\n    return (\n      <div>\n        <h6>\n          <b>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints, IEndpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {}\n\ninterface IDocsState {\n  endpoints: IEndpoints;\n}\n\nexport default class Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]);\n      return { group, apis };\n    });\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.capitalize(group);\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className=\"m-0 p-0 text-dark\"\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              {groups.length > 0 &&\n                groups.map((group: string, index: number) => {\n                  return <Doc key={index} group={group} header={helper.capitalize(group)}></Doc>;\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"Maps\" className=\"container\">\n        <SmallDoc group={'maps'} header={'Maps'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\" className=\"container\">\n        <SmallDoc group={'technologies'} header={'Technologies'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.period}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.symbol}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {helper.numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {helper.numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {helper.numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.ministry}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\ninterface IHomeProps {}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n  externalPackages: Array<any>;\n  filterExternalPackages: Array<any>;\n}\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#lunar-calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: 'vnapis#maps',\n        docs: '/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis,\n      externalPackages: [],\n      filterExternalPackages: []\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title: string, packages: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container h-60vh\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"w-100 mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n    this.getMapsDistricts = this.getMapsDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getMapsDistricts();\n  }\n\n  async getMapsProvinces() {\n    const provinces = await apis.getMapsProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getMapsDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getMapsDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getMapsDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={this.state.province_id}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getMapsPostalCodes = this.getMapsPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsPostalCodes();\n  }\n\n  async getMapsPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getMapsPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n  }\n\n  async getMapsProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getMapsProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getMapsWards = this.getMapsWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsWards();\n  }\n\n  async getMapsWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getMapsWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Wards ({wards.length})</Card.Title>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.category}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {helper.capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.source}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Maps\n  Maps,\n  MapsPostalCodes,\n  MapsProvinces,\n  MapsDistricts,\n  MapsWards,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Technologies\n  Technologies,\n  APIs,\n  GiaoHangNhanh,\n  Vietcetera\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'maps',\n    text: 'Maps',\n    component: Maps,\n    navigation: true\n  },\n  {\n    path: 'maps-postal-codes',\n    text: 'Maps Postal Codes',\n    component: MapsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'maps-provinces',\n    text: 'Maps Provinces',\n    component: MapsProvinces,\n    navigation: false\n  },\n  {\n    path: 'maps-districts',\n    text: 'Maps Districts',\n    component: MapsDistricts,\n    navigation: false\n  },\n  {\n    path: 'maps-wards',\n    text: 'Maps Wards',\n    component: MapsWards,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies,\n    navigation: true\n  },\n  {\n    path: 'technologies-apis',\n    text: 'Technologies APIs',\n    component: APIs,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-provinces',\n    text: 'Technologies GHN',\n    component: GiaoHangNhanh,\n    navigation: false\n  },\n  {\n    path: 'technologies-vietcetera',\n    text: 'Technologies Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsSourcesProps {}\n\ninterface INewsSourcesState {\n  sources: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsSources extends Component<INewsSourcesProps, INewsSourcesState> {\n  constructor(props: INewsSourcesProps) {\n    super(props);\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading: boolean, sources: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category: string, index: number) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n}\n\nexport default class NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [] };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesProviders extends Component<\n  IPhonesProvidersProps,\n  IPhonesProvidersState\n> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading: boolean, providers: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IAPIsProps {}\n\ninterface IAPIsState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nexport default class APIs extends Component<IAPIsProps, IAPIsState> {\n  constructor(props: IAPIsProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading: boolean, filterTechnologies: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"APIs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGiaoHangNhanhProps {}\n\ninterface IGiaoHangNhanhState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class GiaoHangNhanh extends Component<IGiaoHangNhanhProps, IGiaoHangNhanhState> {\n  constructor(props: IGiaoHangNhanhProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"GiaoHangNhanh\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">Giao Hang Nhanh</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nexport default class Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.type}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}