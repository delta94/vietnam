{"version":3,"sources":["configs/index.js","services/apis-configs.js","services/apis.js","components/banks/Forex.js","graphql/index.js","helper/index.js","components/banks/History.js","components/banks/List.js","components/finance/Companies.js","components/finance/Highlights.js","components/finance/History.js","components/finance/Potentials.js","components/finance/Profit.js","components/globals/Code.js","components/government/GeneralSecretaries.js","components/government/Ministers.js","components/government/Ministries.js","components/government/NationalAssemblyChairs.js","components/government/Presidents.js","components/government/PrimeMinisters.js","components/home/Footer.js","components/home/Navigation.js","components/home/Packages.js","components/maps/Districts.js","components/maps/PostalCodes.js","components/maps/Provinces.js","components/maps/Wards.js","components/news/Feed.js","components/news/Sources.js","components/news/Trends.js","components/sports/Clubs.js","components/technologies/GiaoHangNhanh.js","components/technologies/List.js","components/technologies/Vietcetera.js","pages/Banks.js","pages/Calendar.js","pages/EthnicMinorities.js","pages/Finance.js","pages/Government.js","routers/index.js","pages/Home.js","pages/LicensePlates.js","pages/Maps.js","pages/News.js","pages/Phones.js","pages/Sports.js","pages/Technologies.js","App.js","reportWebVitals.js","index.js"],"names":["baseAPI","baseGraphQL","periods","label","value","endpoints","banks","get","forex","rates","sync","post","ethnicMinorities","finance","companies","highlights","history","potentials","profit","government","generalSecretaries","presidents","primeMinisters","nationalAssemblyChairs","ministries","ministers","licensePlates","maps","postalCodes","provinces","districts","wards","news","trends","sources","categories","phones","providers","sports","clubs","technologies","giaohangnhanh","apis","url","Promise","resolve","fetch","then","res","json","catch","error","console","chairs","ministry","response","map","text","encodeURI","options","category","source","data","articles","buy","sell","volume","method","headers","body","JSON","stringify","from","to","sort","a","b","symbol","currencies","currency","name","bank","id","status","stack","result","BanksForex","state","loading","sortBy","sortDir","getBanksForexRates","bind","this","setState","by","dir","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","log","className","Card","Body","Spinner","animation","variant","Form","Group","Control","as","defaultValue","index","toUpperCase","onClick","length","item","time","Component","graphql","key","query","fallback","graphGet","fields","fieldsString","join","params","Object","keys","_key","__value","paramsString","list","find","prefix","capitalize","s","charAt","slice","addZero","x","toString","numberFormatter","replace","processPeriod","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","deepClone","o","parse","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","type","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getBanksWithForex","getFinanceForexRatesData","processRates","filter","rate","code","labels","year","month","date","hour","minute","datasets","buyData","transferData","sellData","lines","assign","Title","BanksList","renderTable","syncForex","message","alert","href","target","rel","Button","FinanceCompanies","getStockCompanies","company","group","industry","subsector","basicPE","dilutedPE","PB","PS","FinanceHighlights","updatePeriod","getStockHighlights","event","highlight","startDate","low","latest","latestDate","min","minDate","max","maxDate","diff","diffToMin","diffToMax","median","average","middle","onChange","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","getStockHistory","historyLabels","historyData","split","yyyy","mm","dd","i","close","_labels","timestamp","d","getFullYear","getMonth","getDate","concat","array","indexOf","class","FinancePotentials","getStockPotentials","potential","FinanceProfit","calculateProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","placeholder","Code","props","api","navigator","clipboard","writeText","err","GovernmentGeneralSecretaries","getGeneralSecretaries","minister","start_date","end_date","GovernmentMinisters","getMinistries","getMinisters","updateMinistry","short","GovernmentMinistries","name_en","level","level_en","GovernmentNationalAssemblyChairs","getNationalAssemblyChairs","GovernmentPresidents","getPresidents","GovernmentPrimeMinisters","getPrimeMinisters","HomeFooter","HomeNavigation","Navbar","bg","expand","Brand","Nav","NavDropdown","title","routes","route","path","Item","HomePackages","npm","docs","filterAPIs","filterPackages","updateQuery","externalPackages","filterExternalPackages","packages","_package","toLowerCase","MapsDistricts","getDistricts","district","province","getPostalCodes","MapsProvinces","getMapsProvinces","capital","region","macro_region","MapsWards","getWards","NewsFeed","getCategories","getSources","getArticles","updateCategory","updateSource","ListGroup","article","dateTimeString","description","Subtitle","Text","NewsSources","Badge","NewsTrends","getGoogleTrends","trend","SportsClubs","getSportsClubs","club","sport","competition","city","GiaoHangNhanh","getProvinces","province_id","List","filterTechnologies","getTechnologies","technology","nameFlag","typeFlag","ethnicMinority","vietcetera","VietceteraClient","Vietcetera","processArticles","basicArticles","slug","language","publishDate","excerpt","option","Banks","Tabs","defaultActiveKey","Tab","eventKey","Calendar","EthnicMinorities","filterEthnicMinorities","getEthnicMinorities","type_en","typeEnFlag","Finance","Government","component","filterLicensePlates","getLicensePlates","licensePlate","license","definition","getPhonesProviders","provider","prefixes","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1ddc349.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\nexport const periods = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n","import { baseAPI } from '../configs';\n\nconst endpoints = {\n  banks: {\n    get: `${baseAPI}/banks`,\n    forex: {\n      rates: { get: `${baseAPI}/banks/forex/rates` },\n      sync: { post: `${baseAPI}/banks/forex/sync` }\n    }\n  },\n  ethnicMinorities: {\n    get: `${baseAPI}/ethnic-minorities`\n  },\n  finance: {\n    companies: { get: `${baseAPI}/finance/companies` },\n    highlights: { post: `${baseAPI}/finance/highlights` },\n    history: { post: `${baseAPI}/finance/history` },\n    potentials: { post: `${baseAPI}/finance/potentials` },\n    profit: { post: `${baseAPI}/finance/profit` }\n  },\n  government: {\n    generalSecretaries: { get: `${baseAPI}/government/general-secretaries` },\n    presidents: { get: `${baseAPI}/government/presidents` },\n    primeMinisters: { get: `${baseAPI}/government/prime-ministers` },\n    nationalAssemblyChairs: { get: `${baseAPI}/government/national-assembly/chairs` },\n    ministries: { get: `${baseAPI}/government/ministries` },\n    ministers: { get: `${baseAPI}/government/ministers` }\n  },\n  licensePlates: {\n    get: `${baseAPI}/license-plates`\n  },\n  maps: {\n    postalCodes: { get: `${baseAPI}/maps/postal-codes` },\n    provinces: { get: `${baseAPI}/maps/provinces` },\n    districts: { get: `${baseAPI}/maps/districts` },\n    wards: { get: `${baseAPI}/maps/wards` }\n  },\n  news: {\n    get: `${baseAPI}/news`,\n    trends: { get: `${baseAPI}/news/trends` },\n    sources: { get: `${baseAPI}/news/sources` },\n    categories: { get: `${baseAPI}/news/categories` }\n  },\n  phones: {\n    providers: { get: `${baseAPI}/phones/providers` }\n  },\n  sports: {\n    clubs: {\n      get: `${baseAPI}/sports/clubs`\n    }\n  },\n  technologies: {\n    get: `${baseAPI}/technologies`,\n    giaohangnhanh: {\n      provinces: { get: `${baseAPI}/technologies/giaohangnhanh/provinces` }\n    }\n  }\n};\n\nexport default endpoints;\n","import endpoints from './apis-configs';\n\nclass APIS {\n  getGeneralSecretaries() {\n    const url = endpoints.government.generalSecretaries.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((generalSecretaries = []) => {\n          resolve(generalSecretaries);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getPresidents() {\n    const url = endpoints.government.presidents.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((presidents = []) => {\n          resolve(presidents);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getPrimeMinisters() {\n    const url = endpoints.government.primeMinisters.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((primeMinisters = []) => {\n          resolve(primeMinisters);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getNationalAssemblyChairs() {\n    const url = endpoints.government.nationalAssemblyChairs.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((chairs = []) => {\n          resolve(chairs);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getMinistries() {\n    const url = endpoints.government.ministries.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((ministries = []) => {\n          resolve(ministries);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getMinisters(ministry) {\n    const url = `${endpoints.government.ministers.get}?ministry=${ministry}`;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((ministers = []) => {\n          resolve(ministers);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getGoogleTrends() {\n    const url = endpoints.news.trends.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then(response => {\n          const basicTrends = response || [];\n          const trends = basicTrends.map(text => {\n            const url = `https://www.google.com/search?q=${encodeURI(text)}`;\n            return { text, url };\n          });\n          resolve(trends);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getSources() {\n    const url = endpoints.news.sources.get;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((sources = []) => {\n          resolve(sources);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getCategories() {\n    const url = endpoints.news.categories.get;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((categories = []) => {\n          resolve(categories);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getArticles(options = {}) {\n    const { category, source } = options;\n    const url = `${endpoints.news.get}?category=${category}&sources=${source}`;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((data = {}) => {\n          const { articles = [] } = data;\n          resolve(articles);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  calculateProfit(buy, sell, volume) {\n    const url = endpoints.finance.profit.post;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ buy, sell, volume })\n      })\n        .then(res => res.json())\n        .then((data = []) => {\n          const { profit = 0 } = data;\n          resolve(profit);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve(0);\n        });\n    });\n  }\n\n  getStockHighlights(from, to) {\n    const url = endpoints.finance.highlights.post;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ from, to })\n      })\n        .then(res => res.json())\n        .then((highlights = []) => {\n          resolve(highlights);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getStockPotentials(from, to) {\n    const url = endpoints.finance.potentials.post;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ from, to })\n      })\n        .then(res => res.json())\n        .then((potentials = []) => {\n          resolve(potentials);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getStockCompanies() {\n    const url = endpoints.finance.companies.get;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((companies = []) => {\n          companies.sort((a, b) => (a.symbol > b.symbol ? 1 : -1));\n          resolve(companies);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getBanksForexRates() {\n    const url = endpoints.banks.forex.rates.get;\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((response = {}) => {\n          const { data = [], currencies = [] } = response;\n          const currency = currencies[0] || '';\n          resolve({ data, currency, currencies });\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({ data: [], currency: '', currencies: [] });\n        });\n    });\n  }\n\n  getBanksWithForex() {\n    const url = endpoints.banks.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((banks = []) => {\n          const { name: bank = '' } = banks[0];\n          resolve({ bank, banks });\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({ bank: '', banks: [] });\n        });\n    });\n  }\n\n  syncForex(id) {\n    const url = endpoints.banks.forex.sync.post;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id })\n      })\n        .then(res => res.json())\n        .then((data = []) => {\n          const { status = '' } = data;\n          resolve(status);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve(error.stack);\n        });\n    });\n  }\n\n  getStockHistory(symbol, from, to) {\n    const url = endpoints.finance.history.post;\n\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ symbol, from, to })\n      })\n        .then(res => res.json())\n        .then((result = {}) => {\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  getPostalCodes() {\n    const url = endpoints.maps.postalCodes.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((postalCodes = []) => {\n          resolve(postalCodes);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getDistricts() {\n    const url = endpoints.maps.districts.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((districts = []) => {\n          resolve(districts);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getMapsProvinces() {\n    const url = endpoints.maps.provinces.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((provinces = []) => {\n          resolve(provinces);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getWards() {\n    const url = endpoints.maps.wards.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((wards = []) => {\n          resolve(wards);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getSportsClubs() {\n    const url = endpoints.sports.clubs.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((clubs = []) => {\n          resolve(clubs);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getLicensePlates() {\n    const url = endpoints.licensePlates.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((licensePlates = []) => {\n          resolve(licensePlates);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getEthnicMinorities() {\n    const url = endpoints.ethnicMinorities.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((ethnicMinorities = []) => {\n          resolve(ethnicMinorities);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getTechnologies() {\n    const url = endpoints.technologies.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((technologies = []) => {\n          resolve(technologies);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getPhonesProviders() {\n    const url = endpoints.phones.providers.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((technologies = []) => {\n          resolve(technologies);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  getProvinces() {\n    const url = endpoints.technologies.giaohangnhanh.provinces.get;\n\n    return new Promise(resolve => {\n      fetch(url)\n        .then(res => res.json())\n        .then((provinces = []) => {\n          resolve(provinces);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n}\n\nconst apis = new APIS();\n\nexport default apis;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass BanksForex extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    this.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n    console.log('currencies', currencies);\n    console.log('currency', currency);\n    console.log('data', data);\n    console.log('loading', loading);\n    return (\n      <div id=\"BanksForex\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n\n              {!loading && (\n                <Form>\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.value}>\n                      {currencies.map((currency, index) => {\n                        return (\n                          <option key={index} value={currency}>\n                            {currency.toUpperCase()}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </Form>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                            Bank\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                            Buy\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                            Transfer\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                            Sell\n                          </span>\n                        </th>\n                        <th>Last Updated At</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.length\n                        ? data.map((item, index) => {\n                            const {\n                              bank = '',\n                              time = '',\n                              buy = {},\n                              transfer = {},\n                              sell = {}\n                            } = item;\n                            return (\n                              <tr key={index}>\n                                <td>{index + 1}</td>\n                                <td>{bank}</td>\n                                <td>{buy[currency] || ''}</td>\n                                <td>{transfer[currency] || ''}</td>\n                                <td>{sell[currency] || ''}</td>\n                                <td>{time}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksForex;\n","import { baseGraphQL } from '../configs';\n\nconst graphql = async (key = '', query = '', fallback = {}) => {\n  const body = { query };\n  const url = `${baseGraphQL}`;\n  return new Promise(resolve => {\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        const { data = {} } = res;\n        const result = data[key] || fallback;\n        resolve(result);\n      })\n      .catch(error => {\n        console.error(error);\n        resolve({});\n      });\n  });\n};\n\nconst graphGet = async (key = '', fields = [], options = {}) => {\n  const fieldsString = fields.join(' ');\n  const params = Object.keys(options)\n    .map(key => {\n      let value = options[key];\n      if (key === 'filter') {\n        const filterKeys = Object.keys(options[key]);\n        value = filterKeys.map(_key => {\n          const __value =\n            typeof options[key][_key] === 'string' ? `\"${options[key][_key]}\"` : options[key][_key];\n          return `${_key}: ${__value}`;\n        });\n        value = `{${value}}`;\n      }\n      return `${key}: ${value}`;\n    })\n    .join(',');\n  const paramsString = params ? `(${params})` : '';\n  const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n  const fallback = [];\n  const list = await graphql(key, query, fallback);\n  return list;\n};\n\nconst graphPost = async (key = '', body = {}, fields = []) => {\n  const newRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n    })\n    .join(' ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${newRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphPut = async (key = '', body = {}, fields = []) => {\n  const updatedRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      if (valueType === 'string') return `${key}: \"${value}\"`;\n      return `${key}: ${value}`;\n    })\n    .join(', ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${updatedRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphDelete = async (key = '', id = '', fields = []) => {\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n/**\n * GraphQL Functions\n */\nexport const count = async (prefix = '') => {\n  const key = `${prefix}Count`;\n  const query = `query { ${key} }`;\n  const fallback = 0;\n  const count = await graphql(key, query, fallback);\n  return count;\n};\n\nexport const find = async (prefix = '', fields = [], options = {}) => {\n  const key = `${prefix}Many`;\n  const list = await graphGet(key, fields, options);\n  return list;\n};\n\nexport const add = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}CreateOne`;\n  const item = await graphPost(key, body, fields);\n  return item;\n};\n\nexport const updateById = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}UpdateById`;\n  const item = await graphPut(key, body, fields);\n  return item;\n};\n\nexport const removeById = async (prefix = '', id = '', fields = []) => {\n  const key = `${prefix}RemoveById`;\n  const item = await graphDelete(key, id, fields);\n  return item;\n};\n","export const capitalize = (s = '') => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const addZero = (x = 0) => {\n  return x > 9 ? x.toString() : `0${x}`;\n};\n\nexport const numberFormatter = (x = 0) => {\n  return x\n    .toString()\n    .replace(/,/g, '')\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const processPeriod = period => {\n  const now = Date.now();\n  const oneDay = 1000 * 60 * 60 * 24;\n  const oneYear = oneDay * 365;\n  const oneMonth = oneDay * 30;\n  const oneWeek = oneDay * 7;\n  let unit = oneWeek;\n  if (period.includes('Y')) {\n    unit = oneYear;\n  } else if (period.includes('M')) {\n    unit = oneMonth;\n  } else if (period.includes('W')) {\n    unit = oneWeek;\n  }\n\n  const time = parseInt(period[0]) || 2;\n  const from = now - unit * time;\n\n  return { from, to: now };\n};\n\nexport const deepClone = (o = {}) => {\n  return JSON.parse(JSON.stringify(o));\n};\n\nexport const copyToClipboard = text => {\n  navigator.clipboard\n    .writeText(text)\n    .then(() => {\n      alert('Text copied to clipboard');\n    })\n    .catch(err => {\n      alert('Error in copying text: ', err);\n    });\n};\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis } from '../../services';\nimport { find } from '../../graphql';\nimport { deepClone } from '../../helper';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nclass BanksHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [] };\n    this.getBanksWithForex = this.getBanksWithForex.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksWithForex();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getBanksWithForex() {\n    this.setState({ loading: true });\n    const { bank, banks } = await apis.getBanksWithForex();\n    this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n    console.log('getFinanceForexRatesData() bank', bank);\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map(rate => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map(item => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data, currency) {\n    const rates = data.map(item => {\n      const { rates } = item;\n      const rate = rates.find(rate => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map(rate => rate.buy);\n    const transferData = rates.map(rate => rate.transfer);\n    const sellData = rates.map(rate => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n    console.log('render() bank', bank);\n    console.log('render() banks', banks);\n    console.log('render() currency', currency);\n    console.log('render() currencies', currencies);\n    console.log('render() data', data);\n    console.log('render() loading', loading);\n    return (\n      <div id=\"BanksHistory\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title>History</Card.Title>\n              <Form className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue={bank} value={this.state.value}>\n                      {banks.map((bank, index) => {\n                        return (\n                          <option key={index} value={bank.name}>\n                            {bank.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue={currency} value={this.state.value}>\n                      {currencies.map((currency, index) => {\n                        return (\n                          <option key={index} value={currency}>\n                            {currency}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksHistory;\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass BanksList extends Component {\n  constructor() {\n    super();\n\n    this.state = { banks: [], loading: false };\n\n    this.getBanksWithForex = this.getBanksWithForex.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForex = this.syncForex.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksWithForex();\n  }\n\n  async getBanksWithForex() {\n    this.setState({ loading: true });\n    const { banks = [] } = await apis.getBanksWithForex();\n    this.setState({ banks, loading: false });\n  }\n\n  async syncForex(id) {\n    const message = await apis.syncForex();\n    alert(message);\n  }\n\n  renderTable(loading, banks) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Forex</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', forex = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>{name}</td>\n                          <td>\n                            <a href={forex} target=\"_blank\" rel=\"noreferrer\">\n                              Forex\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForex(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('banks', banks);\n    return (\n      <div id=\"BanksList\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n              {this.renderTable(loading, banks)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksList;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass FinanceCompanies extends Component {\n  constructor() {\n    super();\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  renderTable(loading, companies) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Companies ({companies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Group</th>\n                  <th>Industry</th>\n                  <th>Sub Sector</th>\n                  <th>Basic P/E</th>\n                  <th>Diluted P/E</th>\n                  <th>P/B</th>\n                  <th>P/S</th>\n                </tr>\n              </thead>\n              <tbody>\n                {companies.length\n                  ? companies.map((company, index) => {\n                      const {\n                        symbol,\n                        name,\n                        group,\n                        industry,\n                        subsector,\n                        basicPE,\n                        dilutedPE,\n                        PB,\n                        PS\n                      } = company;\n                      return (\n                        <tr key={index}>\n                          <td>{symbol}</td>\n                          <td>{name}</td>\n                          <td>{group}</td>\n                          <td>{industry}</td>\n                          <td>{subsector}</td>\n                          <td>{basicPE}</td>\n                          <td>{dilutedPE}</td>\n                          <td>{PB}</td>\n                          <td>{PS}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('companies', companies);\n    return (\n      <div id=\"FinanceCompanies\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, companies)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceCompanies;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { apis } from '../../services';\nimport { processPeriod } from '../../helper';\n\nclass FinanceHighlights extends Component {\n  constructor() {\n    super();\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0 };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading, highlights) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              Highlights ({highlights.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Symbol</th>\n                <th>Name</th>\n                <th>Latest</th>\n                <th>Diff</th>\n                <th>Median</th>\n                <th>Average</th>\n                <th>Middle</th>\n              </tr>\n            </thead>\n            <tbody>\n              {highlights.length\n                ? highlights.map((highlight, index) => {\n                    const {\n                      symbol = '',\n                      group = '',\n                      startDate = '',\n                      name = '',\n                      industry = '',\n                      subsector = '',\n                      low = false,\n                      latest,\n                      latestDate,\n                      min,\n                      minDate,\n                      max,\n                      maxDate,\n                      diff,\n                      diffToMin,\n                      diffToMax,\n                      median,\n                      average,\n                      middle\n                    } = highlight;\n                    return (\n                      <tr key={index}>\n                        <td>\n                          <div>{symbol}</div>\n                          <div>{group}</div>\n                          <div>{startDate}</div>\n                        </td>\n                        <td>\n                          <div>{name}</div>\n                          <div>{industry}</div>\n                          <div>{subsector}</div>\n                        </td>\n                        <td>\n                          <div className={low ? 'text-danger' : 'text-success'}>\n                            <div>\n                              {latest} ({latestDate})\n                            </div>\n                            <div>\n                              {min} ({minDate})\n                            </div>\n                            <div>\n                              {max} ({maxDate})\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <div className={low ? 'text-danger' : 'text-success'}>\n                            <div>{diff}</div>\n                            <div>{diffToMin}</div>\n                            <div>{diffToMax}</div>\n                          </div>\n                        </td>\n                        <td>{median}</td>\n                        <td>{average}</td>\n                        <td>{middle}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div className=\"FinanceHighlights\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\"></Card.Title>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.value}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {this.renderTable(loading, highlights)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceHighlights;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../configs';\nimport { addZero, processPeriod, deepClone } from '../../helper';\nimport { apis } from '../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nclass FinanceHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, data: [], symbols: [], symbol: '', from: 0, to: 0 };\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map(company => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    console.log(labels, datasets);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels, historyData) {\n    const datasets = historyData.map(item => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find(i => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map(item => {\n      const { label = '', data = [] } = item;\n\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data) {\n    let labels = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels = history.map(value => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = addZero(d.getFullYear());\n        const month = addZero(d.getMonth() + 1);\n        const date = addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.value}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.value}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceHistory;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { processPeriod } from '../../helper';\nimport { apis } from '../../services';\n\nclass FinancePotentials extends Component {\n  constructor() {\n    super();\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0 };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading, potentials) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              Potentials ({potentials.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Symbol</th>\n                <th>Name</th>\n                <th>Latest</th>\n                <th>Diff</th>\n                <th>Median</th>\n                <th>Average</th>\n                <th>Middle</th>\n              </tr>\n            </thead>\n            <tbody>\n              {potentials.length\n                ? potentials.map((potential, index) => {\n                    const {\n                      symbol = '',\n                      group = '',\n                      startDate = '',\n                      name = '',\n                      industry = '',\n                      subsector = '',\n                      low = false,\n                      latest,\n                      latestDate,\n                      min,\n                      minDate,\n                      max,\n                      maxDate,\n                      diff,\n                      diffToMin,\n                      diffToMax,\n                      median,\n                      average,\n                      middle\n                    } = potential;\n                    return (\n                      <tr key={index}>\n                        <td>\n                          <div>{symbol}</div>\n                          <div>{group}</div>\n                          <div>{startDate}</div>\n                        </td>\n                        <td>\n                          <div>{name}</div>\n                          <div>{industry}</div>\n                          <div>{subsector}</div>\n                        </td>\n                        <td>\n                          <div className={low ? 'text-danger' : 'text-success'}>\n                            <div>\n                              {latest} ({latestDate})\n                            </div>\n                            <div>\n                              {min} ({minDate})\n                            </div>\n                            <div>\n                              {max} ({maxDate})\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <div className={low ? 'text-danger' : 'text-success'}>\n                            <div>{diff}</div>\n                            <div>{diffToMin}</div>\n                            <div>{diffToMax}</div>\n                          </div>\n                        </td>\n                        <td>{median}</td>\n                        <td>{average}</td>\n                        <td>{middle}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div className=\"FinancePotentials\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.value}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {this.renderTable(loading, potentials)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinancePotentials;\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { numberFormatter } from '../../helper';\n\nclass FinanceProfit extends Component {\n  constructor() {\n    super();\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div className=\"FinanceProfit\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Form onSubmit={this.calculateProfit} className=\"row\">\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Buy\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateBuy}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Sell\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateSell}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Volume\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateVolume}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                    Calculate\n                  </Button>\n                </div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(buy * volume)}</div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(sell * volume)}</div>\n                <div className=\"col-sm-3\"></div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(profit)}</div>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceProfit;\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../../configs';\nimport { copyToClipboard } from '../../helper';\n\nclass Code extends Component {\n  render() {\n    const { method, url } = this.props;\n    const api = `${baseAPI}/${url}`;\n    return (\n      <div id=\"Code\" className=\"bg-dark text-white p-3 rounded mb-3\">\n        <span className=\"text-uppercase mr-3\">API</span>\n        <span className=\"text-uppercase mr-3\">{method}</span>\n        <span\n          className=\"cursor-pointer\"\n          onClick={() => {\n            copyToClipboard(api);\n          }}>\n          {api}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Code;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Code } from '../globals';\n\nclass GovernmentGeneralSecretaries extends Component {\n  constructor() {\n    super();\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries(ministry);\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  renderTable(loading, generalSecretaries) {\n    return (\n      <div>\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-white text-center\">\n                General Secretaries ({generalSecretaries.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Start</th>\n                  <th>End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {generalSecretaries.length\n                  ? generalSecretaries.map((minister, index) => {\n                      const { name = '', start_date = '', end_date = '' } = minister;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{start_date}</td>\n                          <td>{end_date.toUpperCase()}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n\n    return (\n      <div id=\"GovernmentGeneralSecretaries\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Code method={'GET'} url={`government/general-secretaries`}></Code>\n              {this.renderTable(loading, generalSecretaries)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentGeneralSecretaries;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  renderTable(loading, ministers) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-center text-white bg-danger\">\n              Ministers ({ministers.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Start</th>\n                <th>End</th>\n              </tr>\n            </thead>\n            <tbody>\n              {ministers.length\n                ? ministers.map((minister, index) => {\n                    const { name = '', start_date = '', end_date = '' } = minister;\n                    return (\n                      <tr key={index}>\n                        <td>{name}</td>\n                        <td>{start_date}</td>\n                        <td>{end_date.toUpperCase()}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('ministries', ministries);\n\n    return (\n      <div id=\"GovernmentMinisters\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Form className=\"mt-3 w-100\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"latest\"\n                    value={this.state.value}\n                    onChange={this.updateMinistry}>\n                    {ministries.map((ministry, index) => {\n                      const { short, name } = ministry;\n                      return (\n                        <option key={index} value={short}>\n                          {name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {this.renderTable(loading, ministers)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentMinisters;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentMinistries extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  renderTable(loading, ministries = []) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-center text-white bg-danger\">\n              Ministries ({ministries.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Level</th>\n                <th>Level (EN)</th>\n                <th>Name</th>\n                <th>Name (EN)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {ministries.length\n                ? ministries.map((ministry, index) => {\n                    const { name = '', name_en = '', level = '', level_en = '' } = ministry;\n                    return (\n                      <tr key={index}>\n                        <td>{level}</td>\n                        <td>{level_en}</td>\n                        <td>{name}</td>\n                        <td>{name_en}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('ministries', ministries);\n    return (\n      <div id=\"GovernmentMinistries\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, ministries)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentMinistries;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentNationalAssemblyChairs extends Component {\n  constructor() {\n    super();\n\n    this.state = { nationalAssemblyChairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const nationalAssemblyChairs = await apis.getNationalAssemblyChairs(ministry);\n    this.setState({ nationalAssemblyChairs, loading: false });\n  }\n\n  renderTable(loading, nationalAssemblyChairs) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-center text-white bg-danger\">\n              National Assembly Chairs ({nationalAssemblyChairs.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Start</th>\n                <th>End</th>\n              </tr>\n            </thead>\n            <tbody>\n              {nationalAssemblyChairs.length\n                ? nationalAssemblyChairs.map((minister, index) => {\n                    const { name = '', start_date = '', end_date = '' } = minister;\n                    return (\n                      <tr key={index}>\n                        <td>{name}</td>\n                        <td>{start_date}</td>\n                        <td>{end_date.toUpperCase()}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { nationalAssemblyChairs = [], loading = false } = this.state;\n\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, nationalAssemblyChairs)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentNationalAssemblyChairs;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentPresidents extends Component {\n  constructor() {\n    super();\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents(ministry);\n    this.setState({ presidents, loading: false });\n  }\n\n  renderTable(loading, presidents) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-center text-white bg-danger\">\n              Presidents ({presidents.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Start</th>\n                <th>End</th>\n              </tr>\n            </thead>\n            <tbody>\n              {presidents.length\n                ? presidents.map((minister, index) => {\n                    const { name = '', start_date = '', end_date = '' } = minister;\n                    return (\n                      <tr key={index}>\n                        <td>{name}</td>\n                        <td>{start_date}</td>\n                        <td>{end_date.toUpperCase()}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n\n    return (\n      <div id=\"Presidents\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, presidents)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentPresidents;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentPrimeMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters(ministry);\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  renderTable(loading, primeMinisters) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-white bg-danger text-center\">\n              Prime Ministers ({primeMinisters.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Start</th>\n                <th>End</th>\n              </tr>\n            </thead>\n            <tbody>\n              {primeMinisters.length\n                ? primeMinisters.map((minister, index) => {\n                    const { name = '', start_date = '', end_date = '' } = minister;\n                    return (\n                      <tr key={index}>\n                        <td>{name}</td>\n                        <td>{start_date}</td>\n                        <td>{end_date.toUpperCase()}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n\n    return (\n      <div id=\"GovernmentPrimeMinisters\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, primeMinisters)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentPrimeMinisters;\n","import React, { Component } from 'react';\n\nclass HomeFooter extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"HomeFooter\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default HomeFooter;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nimport routes from '../../routers';\n\nclass HomeNavigation extends Component {\n  render() {\n    return (\n      <div id=\"HomeNavigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" className=\"shadow\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"ml-auto\">\n              <NavDropdown title=\"APIs\" className=\"text-white\" id=\"apis-nav-dropdown\">\n                {routes.map((route, index) => {\n                  const { path, text } = route;\n                  if (!text) return '';\n                  return (\n                    <NavDropdown.Item key={index}>\n                      <Link to={path}>{text}</Link>\n                    </NavDropdown.Item>\n                  );\n                })}\n              </NavDropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default HomeNavigation;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\nclass HomePackages extends Component {\n  constructor() {\n    super();\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: '',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: '',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: '',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vietnamgovernment',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: '',\n        docs: '/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: '',\n        docs: '/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: '',\n        docs: '/phones'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      {\n        name: 'sports',\n        npm: '',\n        docs: '/sports'\n      },\n      { name: 'vnltk', npm: 'vnapis', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = { query: '', apis, filterAPIs: apis };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages = [], query = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title, packages = []) {\n    return (\n      <Card className=\"shadow\">\n        <Card.Body>\n          <Form className=\"w-100 mb-3\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Query\"\n              value={this.state.value}\n              onChange={this.updateQuery}></Form.Control>\n          </Form>\n          <div className=\"table-responsive table-container h-60vh\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                {title} ({packages.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Package</th>\n                  <th>Docs</th>\n                </tr>\n              </thead>\n              <tbody>\n                {packages.length !== 0 &&\n                  packages.map((_package, index) => {\n                    const { name = '', npm = '', docs = '' } = _package;\n                    return (\n                      <tr key={index}>\n                        <td>{name}</td>\n                        <td>\n                          {npm && (\n                            <a\n                              href={`https://www.npmjs.com/package/${npm}`}\n                              rel=\"noreferrer\"\n                              target=\"_blank\">\n                              npm\n                            </a>\n                          )}\n                        </td>\n                        <td>\n                          {docs && (\n                            <Link className=\"ml-1\" to={docs}>\n                              Docs\n                            </Link>\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"HomePackages\">\n        <div className=\"mt-3\">{this.renderTable('APIs', filterAPIs)}</div>\n      </div>\n    );\n  }\n}\n\nexport default HomePackages;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsDistricts extends Component {\n  constructor() {\n    super();\n\n    this.state = { districts: [], loading: true };\n\n    this.getDistricts = this.getDistricts.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getDistricts();\n  }\n\n  async getDistricts() {\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts();\n    await this.setState({ districts, loading: false });\n  }\n\n  renderTable(loading, districts) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              Districts ({districts.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Level</th>\n                <th>Province</th>\n              </tr>\n            </thead>\n            <tbody>\n              {districts.length\n                ? districts.map((district, index) => {\n                    const { name = '', level = '', province = '' } = district;\n                    return (\n                      <tr key={index}>\n                        <td>{name}</td>\n                        <td>{level}</td>\n                        <td>{province}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { districts = [], loading = true } = this.state;\n    return (\n      <div id=\"MapsDistricts\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, districts)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsDistricts;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsDistricts extends Component {\n  constructor() {\n    super();\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  renderTable(loading, postalCodes) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              Postal Codes ({postalCodes.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Code</th>\n                <th>Province</th>\n              </tr>\n            </thead>\n            <tbody>\n              {postalCodes.length\n                ? postalCodes.map((district, index) => {\n                    const { code = '', province = '' } = district;\n                    return (\n                      <tr key={index}>\n                        <td>{code}</td>\n                        <td>{province}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    return (\n      <div id=\"MapsDistricts\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, postalCodes)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsDistricts;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsProvinces extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n  }\n\n  async getMapsProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getMapsProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  renderTable(loading, provinces) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              Provinces ({provinces.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Capital</th>\n                <th>Macro Region</th>\n                <th>Region</th>\n              </tr>\n            </thead>\n            <tbody>\n              {provinces.length\n                ? provinces.map((province, index) => {\n                    const { name = '', capital = '', region = '', macro_region = '' } = province;\n                    return (\n                      <tr key={index}>\n                        <td>{name}</td>\n                        <td>{capital}</td>\n                        <td>{macro_region}</td>\n                        <td>{region}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    return (\n      <div id=\"MapsProvinces\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, provinces)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsProvinces;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsWards extends Component {\n  constructor() {\n    super();\n\n    this.state = { wards: [], loading: true };\n\n    this.getWards = this.getWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWards();\n  }\n\n  async getWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    return (\n      <div id=\"MapsWards\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Wards ({wards.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsWards;\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { capitalize } from '../../helper';\n\nclass NewsFeed extends Component {\n  constructor() {\n    super();\n\n    this.state = { category: '', categories: [], source: '', sources: [], articles: [] };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.value}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.value}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default NewsFeed;\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass NewsSources extends Component {\n  constructor() {\n    super();\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading, sources) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-center text-white bg-danger\">\n              Sources ({sources.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Category</th>\n                <th>Categories</th>\n              </tr>\n            </thead>\n            <tbody>\n              {sources.length\n                ? sources.map((source, index) => {\n                    const { id = '', name = '', url = '', category = '', categories = [] } = source;\n                    return (\n                      <tr key={index}>\n                        <td>{id}</td>\n                        <td>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {name}\n                          </a>\n                        </td>\n                        <td>{category}</td>\n                        <td>\n                          {categories.map((category, index) => {\n                            return (\n                              <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                {category}\n                              </Badge>\n                            );\n                          })}\n                        </td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default NewsSources;\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass NewsTrends extends Component {\n  constructor() {\n    super();\n    this.state = { trends: [] };\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n    console.log('render', trends);\n    return (\n      <div id=\"NewsTrends\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default NewsTrends;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { Code } from '../globals';\nimport { apis } from '../../services';\n\nclass SportsClubs extends Component {\n  constructor() {\n    super();\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  renderTable(loading, clubs) {\n    return (\n      <div className=\"table-responsive table-container\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">Clubs ({clubs.length})</caption>\n            <thead>\n              <tr>\n                <th>Sport</th>\n                <th>Competition</th>\n                <th>City</th>\n                <th>Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {clubs.length\n                ? clubs.map((club, index) => {\n                    const { sport = '', name = '', competition = '', city = '' } = club;\n                    return (\n                      <tr key={index}>\n                        <td>{sport}</td>\n                        <td>{competition}</td>\n                        <td>{city}</td>\n                        <td>{name}</td>\n                      </tr>\n                    );\n                  })\n                : ''}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('clubs', clubs);\n\n    return (\n      <div id=\"SportsClubs\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Code method={'GET'} url={`sports/clubs`}></Code>\n              {this.renderTable(loading, clubs)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SportsClubs;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GiaoHangNhanh extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  renderTable(loading, provinces) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Provinces ({provinces.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Province ID</th>\n                  <th>Code</th>\n                </tr>\n              </thead>\n              <tbody>\n                {provinces.length\n                  ? provinces.map((province, index) => {\n                      const { name = '', province_id = 0, code = '' } = province;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{province_id}</td>\n                          <td>{code}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    return (\n      <div id=\"GiaoHangNhanh\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center mb-3\">Giao Hang Nhanh</Card.Title>\n              <Card.Subtitle className=\"text-center mb-3\">\n                <a\n                  href={`https://www.npmjs.com/package/giaohangnhanh`}\n                  rel=\"noreferrer\"\n                  target=\"_blank\">\n                  npm\n                </a>\n              </Card.Subtitle>\n              {this.renderTable(loading, provinces)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GiaoHangNhanh;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Code } from '../globals';\n\nclass List extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading, filterTechnologies) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                List ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"List\">\n        <main className=\"container\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>\n                <Code method={'GET'} url={`technologies`}></Code>\n                <Form className=\"mt-3 mb-3 w-100\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Type\"\n                    value={this.state.value}\n                    onChange={this.filter}></Form.Control>\n                </Form>\n                {this.renderTable(loading, filterTechnologies)}\n              </Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\nimport VietceteraClient from 'vietcetera';\n\nconst vietcetera = new VietceteraClient();\n\nclass Vietcetera extends Component {\n  constructor() {\n    super();\n    this.state = { articles: [], loading: false };\n    this.getArticles = this.getArticles.bind(this);\n    this.processArticles = this.processArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    this.setState({ articles });\n  }\n\n  processArticles(articles = []) {\n    return articles.map((article = {}) => {\n      const { title = '', slug = '', language = '', publishDate = '', excerpt = '' } = article;\n      const url =\n        language && slug ? `https://vietcetera.com/${language.toLowerCase()}/${slug}` : '';\n      const description = excerpt.replace('<p>', '').replace('</p>', '');\n      return { title, url, publishDate, description };\n    });\n  }\n\n  async getArticles(event) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\">\n        <main className=\"container\">\n          <Card className=\"shadow mt-3\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n              <Card.Subtitle className=\"text-center mb-3\">\n                <a\n                  href={`https://www.npmjs.com/package/vietcetera`}\n                  rel=\"noreferrer\"\n                  target=\"_blank\">\n                  vietcetera\n                </a>\n              </Card.Subtitle>\n              <Form className=\"mt-3 w-100\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"latest\"\n                    value={this.state.value}\n                    onChange={this.getArticles}>\n                    {options.map((option, index) => {\n                      const { text, value } = option;\n                      return (\n                        <option key={index} value={value}>\n                          {text}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article, index) => {\n                    const { title = '', url = '', publishDate = '', description = '' } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"small text-muted mb-1\">\n                          {publishDate}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Vietcetera;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { BanksForex, BanksHistory, BanksList } from '../components';\n\nclass Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"forex\" className=\"nav-justified\">\n            <Tab eventKey=\"forex\" title=\"Forex\">\n              <BanksForex></BanksForex>\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <BanksHistory></BanksHistory>\n            </Tab>\n            <Tab eventKey=\"list\" title=\"List\">\n              <BanksList></BanksList>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Banks;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nclass Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\">\n        <main className=\"container mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Calendar</Card.Title>\n            </Card.Body>\n          </Card>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nimport { Code } from '../components';\n\nclass EthnicMinorities extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', ethnicMinorities: [], filterEthnicMinorities: [], loading: true };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  renderTable(loading, filterEthnicMinorities) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Ethnic Minorities ({filterEthnicMinorities.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Type (EN)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterEthnicMinorities.length\n                  ? filterEthnicMinorities.map((ethnicMinority, index) => {\n                      const { name = '', type = '', type_en = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{type}</td>\n                          <td>{type_en}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    return (\n      <div id=\"EthnicMinorities\">\n        <main className=\"container mt-3\">\n          <Card className=\"shadow w-100\">\n            <Card.Body>\n              <Code method={'GET'} url={`ethnic-minorities`}></Code>\n              <Form className=\"mt-3 mb-3 w-100\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Type\"\n                  value={this.state.value}\n                  onChange={this.filter}></Form.Control>\n              </Form>\n              {this.renderTable(loading, filterEthnicMinorities)}\n            </Card.Body>\n          </Card>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default EthnicMinorities;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport {\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit\n} from '../components';\n\nclass Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"companies\" className=\"nav-justified\">\n            <Tab eventKey=\"companies\" title=\"Companies\">\n              <FinanceCompanies></FinanceCompanies>\n            </Tab>\n            <Tab eventKey=\"highlights\" title=\"Highlights\">\n              <FinanceHighlights></FinanceHighlights>\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <FinanceHistory></FinanceHistory>\n            </Tab>\n            <Tab eventKey=\"potentials\" title=\"Potentials\">\n              <FinancePotentials></FinancePotentials>\n            </Tab>\n            <Tab eventKey=\"profit\" title=\"Profit\">\n              <FinanceProfit></FinanceProfit>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Finance;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport {\n  GovernmentGeneralSecretaries,\n  GovernmentMinisters,\n  GovernmentMinistries,\n  GovernmentNationalAssemblyChairs,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters\n} from '../components';\n\nclass Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"generalSecretaries\" className=\"nav-justified\">\n            <Tab eventKey=\"generalSecretaries\" title=\"General Secretaries\">\n              <GovernmentGeneralSecretaries></GovernmentGeneralSecretaries>\n            </Tab>\n            <Tab eventKey=\"presidents\" title=\"Presidents\">\n              <GovernmentPresidents></GovernmentPresidents>\n            </Tab>\n            <Tab eventKey=\"primeMinisters\" title=\"Prime Ministers\">\n              <GovernmentPrimeMinisters></GovernmentPrimeMinisters>\n            </Tab>\n            <Tab eventKey=\"nationalAssemblyChairs\" title=\"National Assembly Chairs\">\n              <GovernmentNationalAssemblyChairs></GovernmentNationalAssemblyChairs>\n            </Tab>\n            <Tab eventKey=\"ministries\" title=\"Ministries\">\n              <GovernmentMinistries></GovernmentMinistries>\n            </Tab>\n            <Tab eventKey=\"ministers\" title=\"Ministers\">\n              <GovernmentMinisters></GovernmentMinisters>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Government;\n","import {\n  Banks,\n  Calendar,\n  EthnicMinorities,\n  Finance,\n  Government,\n  Home,\n  LicensePlates,\n  Maps,\n  News,\n  Phones,\n  Sports,\n  Technologies\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates\n  },\n  {\n    path: 'maps',\n    text: 'Maps',\n    component: Maps\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\n\nimport { HomePackages } from '../components';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div id=\"Home\">\n        <main className=\"container mt-3\">\n          <HomePackages></HomePackages>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nclass LicensePlates extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  renderTable(loading, filterLicensePlates) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-60vh\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                License Plates ({filterLicensePlates.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>License</th>\n                  <th>Definition</th>\n                  <th>Type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterLicensePlates.length\n                  ? filterLicensePlates.map((licensePlate, index) => {\n                      const { license = '', definition = '', type = '' } = licensePlate;\n                      return (\n                        <tr key={index}>\n                          <td>{license}</td>\n                          <td>{definition}</td>\n                          <td>{type}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n\n    return (\n      <div id=\"LicensePlates\">\n        <main className=\"container\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>\n                <Form className=\"mb-3 w-100\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"License\"\n                    value={this.state.value}\n                    onChange={this.filter}></Form.Control>\n                </Form>\n                {this.renderTable(loading, filterLicensePlates)}\n              </Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default LicensePlates;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { MapsDistricts, MapsPostalCodes, MapsProvinces, MapsWards } from '../components';\n\nclass Maps extends Component {\n  render() {\n    return (\n      <div id=\"Maps\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"provinces\" className=\"nav-justified\">\n            <Tab eventKey=\"postalCodes\" title=\"Postal Codes\">\n              <MapsPostalCodes></MapsPostalCodes>\n            </Tab>\n            <Tab eventKey=\"provinces\" title=\"Provinces\">\n              <MapsProvinces></MapsProvinces>\n            </Tab>\n            <Tab eventKey=\"districts\" title=\"Districts\">\n              <MapsDistricts></MapsDistricts>\n            </Tab>\n            <Tab eventKey=\"wards\" title=\"Wards\">\n              <MapsWards></MapsWards>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Maps;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { NewsFeed, NewsSources, NewsTrends } from '../components';\n\nclass News extends Component {\n  render() {\n    return (\n      <div id=\"News\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"feed\" className=\"nav-justified\">\n            <Tab eventKey=\"feed\" title=\"Feed\">\n              <NewsFeed></NewsFeed>\n            </Tab>\n            <Tab eventKey=\"sources\" title=\"Sources\">\n              <NewsSources></NewsSources>\n            </Tab>\n            <Tab eventKey=\"trends\" title=\"Trends\">\n              <NewsTrends></NewsTrends>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default News;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nclass Phones extends Component {\n  constructor() {\n    super();\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading, providers) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { name = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"Phones\">\n        <main className=\"container mt-3\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Phones;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { SportsClubs } from '../components';\n\nclass Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"clubs\" className=\"nav-justified\">\n            <Tab eventKey=\"clubs\" title=\"Clubs\">\n              <SportsClubs></SportsClubs>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Sports;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { List, GiaoHangNhanh, Vietcetera } from '../components';\n\nclass Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"list\" className=\"nav-justified\">\n            <Tab eventKey=\"list\" title=\"List\">\n              <List></List>\n            </Tab>\n            <Tab eventKey=\"giaoHangNhanh\" title=\"Giao Hang Nhanh\">\n              <GiaoHangNhanh></GiaoHangNhanh>\n            </Tab>\n            <Tab eventKey=\"vietcetera\" title=\"Vietcetera\">\n              <Vietcetera></Vietcetera>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Technologies;\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { HomeFooter, HomeNavigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"pb-5\">\n          <div className=\"pb-5\">\n            <HashRouter basename=\"/\">\n              <HomeNavigation></HomeNavigation>\n              {routes.map((route, index) => {\n                const { path, component } = route;\n                return <Route key={index} exact path={`/${path}`} component={component}></Route>;\n              })}\n              <HomeFooter></HomeFooter>\n            </HashRouter>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}