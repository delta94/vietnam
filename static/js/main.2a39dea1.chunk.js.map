{"version":3,"sources":["configs/urls.ts","configs/apis/administrative-divisions/get-postal-codes.ts","configs/apis/administrative-divisions/get-provinces.ts","configs/apis/administrative-divisions/get-districts.ts","configs/apis/administrative-divisions/get-wards.ts","configs/apis/administrative-divisions/get-total-wards.ts","configs/apis/administrative-divisions/index.ts","configs/apis/banks/index.ts","configs/apis/calendar/index.ts","configs/apis/ethnic-minorities/index.ts","configs/apis/finance/index.ts","configs/apis/government/index.ts","configs/apis/history/get-dynasties.ts","configs/apis/history/index.ts","configs/apis/license-plates/get-license-plates.ts","configs/apis/license-plates/index.ts","configs/apis/music/get-artists.ts","configs/apis/music/index.ts","configs/apis/news/get-trends.ts","configs/apis/news/get-sources.ts","configs/apis/news/get-categories.ts","configs/apis/news/get-articles.ts","configs/apis/news/index.ts","configs/apis/open-apis/index.ts","configs/apis/phones/index.ts","configs/apis/sports/index.ts","configs/apis/weather/index.ts","configs/apis/youtube/get-trending.ts","configs/apis/youtube/get-video-categories.ts","configs/apis/youtube/index.ts","configs/apis/index.ts","configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/storage.ts","services/index.ts","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/demo/history/Dynasties.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/music/Artists.tsx","pages/demo/open-apis/List.tsx","pages/demo/open-apis/ghn/Provinces.tsx","pages/demo/open-apis/ghn/Districts.tsx","pages/demo/open-apis/ghn/Wards.tsx","pages/demo/open-apis/Vietcetera.tsx","pages/docs/AdministrativeDivisions.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/History.tsx","pages/docs/LicensePlates.tsx","pages/docs/Music.tsx","pages/docs/News.tsx","pages/docs/OpenAPIs.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Weather.tsx","pages/docs/YouTube.tsx","pages/demo/administrative-divisions/Districts.tsx","pages/demo/administrative-divisions/PostalCodes.tsx","pages/demo/administrative-divisions/Provinces.tsx","pages/demo/administrative-divisions/Wards.tsx","pages/demo/banks/List.tsx","pages/demo/banks/forex/Rates.tsx","pages/demo/banks/forex/History.tsx","pages/demo/banks/forex/Sync.tsx","pages/demo/calendar/Converter.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/news/Trends.tsx","pages/demo/news/Feed.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/sports/Clubs.tsx","pages/demo/sports/VLeague.tsx","pages/demo/youtube/Trending.tsx","pages/demo/weather/AirVisual.tsx","pages/demo/weather/Current.tsx","routers/index.ts","redux/actions/theme.ts","components/Navigation.tsx","components/NavPills.tsx","components/SmallDoc.tsx","App.tsx","redux/reducers/theme.ts","redux/reducers/index.ts","redux/store.ts","serviceWorkerRegistration.js","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","getPostalCodes","id","name","public","method","path","url","demo","request","headers","key","value","query","type","required","description","body","response","200","schema","example","code","province","province_id","400","message","getProvinces","capital","level","level_en","macro_region","macro_region_en","region","region_en","getDistricts","getWards","ward","district","getTotalWards","total","administrativeDivisions","banks","getBanks","name_en","name_short","type_en","getForexBanks","getForexRates","currencies","data","syncForexRates","status","calendar","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","ethnicMinorities","getEthnicMinorities","finance","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHistory","history","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","calculateProfit","profit","government","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","percentage","getMinistries","short","getMinisters","getDynasties","temple_name","birth_name","birth","death","start_year","end_year","dynasty","getLicensePlates","license","definition","licensePlates","getArtists","music","getTrends","hour","categories","getSources","sources","getCategories","getArticles","source","sourceURL","publishedDate","news","openAPIs","getOpenAPIs","type_id","npm","getGHNProvinces","getGHNDistricts","district_id","support_type","getGHNWards","getVietceteraArticles","publishDate","phones","getPrefixes","prefix","provider","provider_id","getProviders","prefixes","sports","getSportsClubs","sport","sport_en","competition","city","getVLeague","matches","leagueTable","weather","getCurrentWeather","coord","base","main","visibility","wind","clouds","dt","sys","timezone","cod","getAirVisual","state","country","location","current","getAirVisualCities","getTrending","channelId","publishedAt","channelTitle","tags","categoryId","getVideoCategories","assignable","youtube","endpoints","periods","label","months","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","timeout","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","category","articles","buy","sell","volume","from","to","currency","skip","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","str","match","Storage","localStorage","setItem","getItem","apis","helper","storage","API","props","themeTextColor","api","className","onClick","copyToClipboard","Component","connect","_","get","CURL","bind","buildDataRaw","trim","dataRaw","header","index","lastFlag","Table","loading","caption","rows","rowConfigs","emptyRowsText","rowIndexEnabled","themeSpinnerVariant","themePrimaryBackgroundColor","themeBorder","Spinner","animation","variant","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","themeBorderTop","getFullYear","href","target","rel","List","filterEthnicMinorities","event","setState","ethnicMinority","typeFlag","toLowerCase","typeEnFlag","themeInput","Form","Control","placeholder","onChange","GeneralSecretaries","generalSecretaries","Ministers","ministries","ministers","updateMinistry","renderForm","Group","as","Ministries","Chairs","chairs","Members","members","Presidents","presidents","PrimeMinisters","primeMinisters","Dynasties","dynasties","Home","docs","sort","a","b","filterAPIs","renderTable","updateQuery","packages","_package","themeListItemBorderBottom","themeSecondaryBackgroundColor","ListGroup","Item","Label","htmlFor","filterLicensePlates","licensePlate","Artists","artists","technologies","filterTechnologies","technology","nameFlag","Provinces","provinces","Districts","districts","Wards","wards","Vietcetera","option","themeMutedTextColor","article","Card","Title","Subtitle","Text","AdministrativeDivisions","Banks","Calendar","Docs","renderSidebar","scrollIntoView","element","document","getElementById","behavior","colors","post","color","Accordion","camelize","capitalize","Toggle","Button","Collapse","groups","EthnicMinorities","Finance","Government","History","LicensePlates","Music","News","OpenAPIs","Phones","Sports","Weather","YouTube","updateProvince","PostalCodes","postalCodes","active","renderPagination","goToPage","updateActive","page","Math","floor","final","items","push","Pagination","size","Prev","Next","Rates","sortBy","sortDir","getBanksForexRates","updateCurrency","by","dir","bank","aItem","buyCash","bItem","sellCash","buyTransfer","sellTransfer","time","buyCashText","buyTransferText","sellCashText","sellTransferText","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","processRates","find","rates","rate","labels","minute","datasets","transfer","buyData","transferData","sellData","lines","deepClone","assign","Body","Sync","syncing","syncAll","addToSyncing","removeFromSyncing","log","indexOf","themeRevertSpinnerVariant","themeButtonVariant","syncingFlag","align","disabled","Converter","loadingText","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","split","controlId","pattern","Companies","companies","Highlights","highlights","updatePeriod","processPeriod","highlight","middle","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","timestamp","concat","array","Potentials","potentials","potential","Profit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","Trends","getGoogleTrends","themeBadge","trend","Badge","Feed","updateCategory","updateSource","renderArticles","startIndex","endIndex","substring","dangerouslySetInnerHTML","__html","Prefixes","Providers","providers","_provider","SportsClubs","clubs","SportsVLeague","YouTubeTrending","mapCategories","trending","getYouTubeTrending","getYouTubeVideoCategories","updateVideoCategory","renderCards","videoCategory","videos","video","channelUrl","AirVisual","cities","airVisual","updateCity","fallbackCity","aqius","Current","getCurrent","temp","feels_like","temp_min","temp_max","routes","component","navigation","AdministrativeDivisionsPostalCodes","AdministrativeDivisionsProvinces","AdministrativeDivisionsDistricts","AdministrativeDivisionsWards","BanksList","BanksForexRates","BanksForexHistory","BanksForexSync","CalendarConverter","EthnicMinoritiesList","FinanceCompanies","FinanceHistory","FinanceHighlights","FinancePotentials","FinanceProfit","GovernmentGeneralSecretaries","GovernmentPresidents","GovernmentPrimeMinisters","GovernmentMinistries","GovernmentMinisters","GovernmentNationalAssemblyChairs","GovernmentNationalAssemblyMembers","HistoryDynasties","LicensePlatesList","MusicArtists","NewsFeed","OpenAPIsList","GHNProvinces","GHNDistricts","GHNWards","PhonesPrefixes","PhonesProviders","WeatherAirVisual","updateTheme","theme","set","Navigation","newTheme","themeBorderBottom","Navbar","expand","Brand","aria-controls","Nav","pathname","inline","Dropdown","DropdownButton","menuAlign","route","Link","Check","checked","dispatch","themeActions","NavPills","themeLink","marginRight","SmallDoc","App","basename","exact","LIGHT_THEME","DARK_THEME","LIGHT_TEXT_COLOR","DARK_TEXT_COLOR","LIGHT_MUTED_TEXT_COLOR","DARK_MUTED_TEXT_COLOR","LIGHT_BORDER","DARK_BORDER","LIGHT_BORDER_TOP","DARK_BORDER_TOP","LIGHT_BORDER_BOTTOM","DARK_BORDER_BOTTOM","LIGHT_SPINNER_VARIANT","DARK_SPINNER_VARIANT","LIGHT_REVERT_SPINNER_VARIANT","DARK_REVERT_SPINNER_VARIANT","LIGHT_BUTTON_VARIANT","DARK_BUTTON_VARIANT","LIGHT_PRIMARY_BACKGROUND_COLOR","DARK_PRIMARY_BACKGROUND_COLOR","LIGHT_SECONDARY_BACKGROUND_COLOR","DARK_SECONDARY_BACKGROUND_COLOR","LIGHT_LIST_ITEM_BORDER_BOTTOM","DARK_LIST_ITEM_BORDER_BOTTOM","DARK_INPUT","LIGHT_BADGE","DARK_BADGE","LIGHT_LINK","DARK_LINK","initialState","textColor","mutedTextColor","spinnerVariant","revertSpinnerVariant","buttonVariant","border","borderTop","borderBottom","primaryBackgroundColor","secondaryBackgroundColor","listItemBorderBottom","badge","link","themeReducer","action","reducers","combineReducers","store","createStore","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2a39dea1.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n","import { baseAPI } from '../../urls';\n\nconst getPostalCodes = {\n  id: 'getPostalCodes',\n  name: 'Get Postal Codes',\n  public: true,\n  method: 'GET',\n  path: '/administrative-divisions/postal-codes',\n  url: `${baseAPI}/administrative-divisions/postal-codes`,\n  demo: 'administrative-divisions-postal-codes',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'code', type: 'string', description: '' },\n        { name: 'province', type: 'string', description: '' },\n        { name: 'province_id', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          code: '<string>',\n          province: '<string>',\n          province_id: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getPostalCodes;\n","import { baseAPI } from '../../urls';\n\nconst getProvinces = {\n  id: 'getProvinces',\n  name: 'Get Provinces',\n  public: true,\n  method: 'GET',\n  path: '/administrative-divisions/provinces',\n  url: `${baseAPI}/administrative-divisions/provinces`,\n  demo: 'administrative-divisions-provinces',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [\n      { name: 'level_en', type: 'string', required: false, description: '' },\n      { name: 'macro_region_en', type: 'string', required: false, description: '' }\n    ],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'province_id', type: 'string', description: '' },\n        { name: 'name', type: 'string', description: '' },\n        { name: 'capital', type: 'string', description: '' },\n        { name: 'level', type: 'string', description: '' },\n        { name: 'level_en', type: 'string', description: '' },\n        { name: 'macro_region', type: 'string', description: '' },\n        { name: 'macro_region_en', type: 'string', description: '' },\n        { name: 'region', type: 'string', description: '' },\n        { name: 'region_en', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          province_id: '<string>',\n          name: '<string>',\n          capital: '<string>',\n          level: '<string>',\n          level_en: '<string>',\n          macro_region: '<string>',\n          macro_region_en: '<string>',\n          region: '<string>',\n          region_en: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getProvinces;\n","import { baseAPI } from '../../urls';\n\nconst getDistricts = {\n  id: 'getDistricts',\n  name: 'Get Districts',\n  public: true,\n  method: 'GET',\n  path: '/administrative-divisions/districts',\n  url: `${baseAPI}/administrative-divisions/districts`,\n  demo: 'administrative-divisions-districts',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'name', type: 'string', description: '' },\n        { name: 'level', type: 'string', description: '' },\n        { name: 'level_en', type: 'string', description: '' },\n        { name: 'province', type: 'string', description: '' },\n        { name: 'province_id', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          name: '<string>',\n          level: '<string>',\n          level_en: '<string>',\n          province: '<string>',\n          province_id: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getDistricts;\n","import { baseAPI } from '../../urls';\n\nconst getWards = {\n  id: 'getWards',\n  name: 'Get Wards',\n  public: true,\n  method: 'GET',\n  path: '/administrative-divisions/wards',\n  url: `${baseAPI}/administrative-divisions/wards`,\n  demo: 'administrative-divisions-wards',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [\n      { name: 'skip', type: 'number', required: false, description: '' },\n      { name: 'limit', type: 'number', required: false, description: '' }\n    ],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'ward', type: 'string', description: '' },\n        { name: 'district', type: 'string', description: '' },\n        { name: 'province', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          ward: '<string>',\n          district: '<string>',\n          province: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getWards;\n","import { baseAPI } from '../../urls';\n\nconst getTotalWards = {\n  id: 'getTotalWards',\n  name: 'Get Total Wards',\n  public: false,\n  method: 'GET',\n  path: '/administrative-divisions/wards/total',\n  url: `${baseAPI}/administrative-divisions/wards/total`,\n  demo: 'administrative-divisions-wards',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [{ name: 'total', type: 'number', description: '' }],\n      example: { total: '<number>' }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getTotalWards;\n","import { IAdministrativeDivisionsEndpoints } from '../../interfaces';\n\nimport getPostalCodes from './get-postal-codes';\nimport getProvinces from './get-provinces';\nimport getDistricts from './get-districts';\nimport getWards from './get-wards';\nimport getTotalWards from './get-total-wards';\n\nconst administrativeDivisions: IAdministrativeDivisionsEndpoints = {\n  getPostalCodes,\n  getProvinces,\n  getDistricts,\n  getWards,\n  getTotalWards\n};\n\nexport default administrativeDivisions;\n","import { baseAPI } from '../../urls';\nimport { IBanksEndpoints } from '../../interfaces';\n\nconst banks: IBanksEndpoints = {\n  getBanks: {\n    id: 'getBanks',\n    name: 'Get Banks',\n    public: true,\n    path: '/banks',\n    url: `${baseAPI}/banks`,\n    demo: 'banks-list',\n    method: 'GET',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'code', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'name_en', type: 'string', description: '' },\n          { name: 'name_short', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_en', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            code: '<string>',\n            name: '<string>',\n            name_en: '<string>',\n            name_short: '<string>',\n            type: '<string>',\n            type_en: '<string>',\n            url: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getForexBanks: {\n    id: 'getForexBanks',\n    name: 'Get Forex Banks',\n    public: true,\n    path: '/banks/forex/banks',\n    url: `${baseAPI}/banks/forex/banks`,\n    demo: 'banks-forex-sync',\n    method: 'GET',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'banks', type: 'Array<string>', description: '' }\n        ],\n        example: [{ total: '<number>', banks: '<Array<string>>' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getForexRates: {\n    id: 'getForexRates',\n    name: 'Get Forex Rates',\n    public: true,\n    method: 'GET',\n    path: '/banks/forex/rates',\n    url: `${baseAPI}/banks/forex/rates`,\n    demo: 'banks-forex-rates',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'currencies', type: 'Array<string>', description: '' },\n          { name: 'data', type: 'Array<Rates>', description: '' }\n        ],\n        example: {\n          currencies: '<Array<string>>',\n          data: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  syncForexRates: {\n    id: 'syncForexRates',\n    name: 'Sync Forex Rates',\n    public: true,\n    method: 'POST',\n    path: '/banks/forex/sync',\n    url: `${baseAPI}/banks/forex/sync`,\n    demo: 'banks-forex-sync',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'id', required: true, type: 'string', description: '' }]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'status', type: 'string', description: '' }],\n        example: { status: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default banks;\n","import { baseAPI } from '../../urls';\nimport { ICalendarEndpoints } from '../../interfaces';\n\nconst calendar: ICalendarEndpoints = {\n  convertLunarToSolar: {\n    id: 'convertLunarToSolar',\n    name: 'Convert Lunar Date to Solar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar2solar',\n    url: `${baseAPI}/calendar/lunar2solar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  convertSolarToLunar: {\n    id: 'convertSolarToLunar',\n    name: 'Convert Solar Date to Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/solar2lunar',\n    url: `${baseAPI}/calendar/solar2lunar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCanChi: {\n    id: 'getCanChi',\n    name: 'Get Can Chi of Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar/can-chi',\n    url: `${baseAPI}/calendar/lunar/can-chi`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'canChi', type: 'string', description: '' }],\n        example: { canChi: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default calendar;\n","import { baseAPI } from '../../urls';\nimport { IEthnicMinoritiesEndpoints } from '../../interfaces';\n\nconst ethnicMinorities: IEthnicMinoritiesEndpoints = {\n  getEthnicMinorities: {\n    id: 'getEthnicMinorities',\n    name: 'Get Ethnic Minorities',\n    public: true,\n    method: 'GET',\n    path: '/ethnic-minorities',\n    url: `${baseAPI}/ethnic-minorities`,\n    demo: 'ethnic-minorities-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_en', type: 'string', description: '' }\n        ],\n        example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default ethnicMinorities;\n","import { baseAPI } from '../../urls';\nimport { IFinanceEndpoints } from '../../interfaces';\n\nconst finance: IFinanceEndpoints = {\n  getStockCompanies: {\n    id: 'getStockCompanies',\n    name: 'Get Listed Companies',\n    public: true,\n    method: 'GET',\n    path: '/finance/companies',\n    url: `${baseAPI}/finance/companies`,\n    demo: 'finance-companies',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'market', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'supersector', type: 'string', description: '' },\n          { name: 'sector', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'listingDate', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            market: '<string>',\n            group: '<string>',\n            symbol: '<string>',\n            name: '<string>',\n            industry: '<string>',\n            supersector: '<string>',\n            sector: '<string>',\n            subsector: '<string>',\n            listingDate: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHistory: {\n    id: 'getStockHistory',\n    name: 'Get Stock History',\n    public: true,\n    method: 'GET',\n    path: '/finance/history',\n    url: `${baseAPI}/finance/history`,\n    demo: 'finance-history',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'symbol', type: 'string', required: true, description: '' },\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'history', type: 'Array<Date>', description: '' }\n        ],\n        example: {\n          symbol: '<string>',\n          name: '<string>',\n          group: '<string>',\n          industry: '<string>',\n          subsector: '<string>',\n          history: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHighlights: {\n    id: 'getStockHighlights',\n    name: 'Get Stock Highlights',\n    public: false,\n    method: 'POST',\n    path: '/finance/highlights',\n    url: `${baseAPI}/finance/highlights`,\n    demo: 'finance-highlights',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockPotentials: {\n    id: 'getStockPotentials',\n    name: 'Get Stock Potentials',\n    public: false,\n    method: 'POST',\n    path: '/finance/potentials',\n    url: `${baseAPI}/finance/potentials`,\n    demo: 'finance-potentials',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  calculateProfit: {\n    id: 'calculateProfit',\n    name: 'Calculate Profit',\n    public: false,\n    method: 'POST',\n    path: '/finance/profit',\n    url: `${baseAPI}/finance/profit`,\n    demo: 'finance-profit',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'buy', type: 'number', required: true, description: '' },\n        { name: 'sell', type: 'number', required: true, description: '' },\n        { name: 'volume', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'profit', type: 'number', description: '' }],\n        example: { profit: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default finance;\n","import { baseAPI } from '../../urls';\nimport { IGovernmentEndpoints } from '../../interfaces';\n\nconst government: IGovernmentEndpoints = {\n  getGeneralSecretaries: {\n    id: 'getGeneralSecretaries',\n    name: 'Get General Secretaries',\n    public: true,\n    method: 'GET',\n    path: '/government/general-secretaries',\n    url: `${baseAPI}/government/general-secretaries`,\n    demo: 'government-general-secretaries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'string', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPresidents: {\n    id: 'getPresidents',\n    name: 'Get Presidents',\n    public: true,\n    method: 'GET',\n    path: '/government/presidents',\n    url: `${baseAPI}/government/presidents`,\n    demo: 'government-presidents',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPrimeMinisters: {\n    id: 'getPrimeMinisters',\n    name: 'Get Prime Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/prime-ministers',\n    url: `${baseAPI}/government/prime-ministers`,\n    demo: 'government-prime-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyChairs: {\n    id: 'getNationalAssemblyChairs',\n    name: 'Get National Assembly Chairs',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/chairs',\n    url: `${baseAPI}/government/national-assembly/chairs`,\n    demo: 'government-national-assembly-chairs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyMembers: {\n    id: 'getNationalAssemblyMembers',\n    name: 'Get National Assembly Members',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/members',\n    url: `${baseAPI}/government/national-assembly/members`,\n    demo: 'government-national-assembly-members',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'no', type: 'number', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'no', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'date_of_birth', type: 'string', description: '' },\n          { name: 'city_of_birth', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'degree', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'percentage', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            no: '<number>',\n            name: '<string>',\n            date_of_birth: '<string>',\n            city_of_birth: '<string>',\n            gender: '<string>',\n            degree: '<string>',\n            province: '<string>',\n            district: '<string>',\n            percentage: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinistries: {\n    id: 'getMinistries',\n    name: 'Get Ministries',\n    public: true,\n    method: 'GET',\n    path: '/government/ministries',\n    url: `${baseAPI}/government/ministries`,\n    demo: 'government-ministries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'name_en', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            short: '<string>',\n            name: '<string>',\n            name_en: '<string>',\n            level: '<string>',\n            level_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinisters: {\n    id: 'getMinisters',\n    name: 'Get Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/ministers',\n    url: `${baseAPI}/government/ministers`,\n    demo: 'government-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default government;\n","import { baseAPI } from '../../urls';\n\nconst getDynasties = {\n  id: 'getDynasties',\n  name: 'Get Dynasties',\n  public: true,\n  method: 'GET',\n  path: '/history/dynasties',\n  url: `${baseAPI}/history/dynasties`,\n  demo: 'history-dynasties',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'temple_name', type: 'string', description: '' },\n        { name: 'birth_name', type: 'string', description: '' },\n        { name: 'birth', type: 'number', description: '' },\n        { name: 'death', type: 'number', description: '' },\n        { name: 'start_year', type: 'number', description: '' },\n        { name: 'end_year', type: 'number', description: '' },\n        { name: 'dynasty', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          temple_name: '<string>',\n          birth_name: '<string>',\n          birth: '<number>',\n          death: '<number>',\n          start_year: '<number>',\n          end_year: '<number>',\n          dynasty: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getDynasties;\n","import { IHistoryEndpoints } from '../../interfaces';\nimport getDynasties from './get-dynasties';\n\nconst history: IHistoryEndpoints = {\n  getDynasties\n};\n\nexport default history;\n","import { baseAPI } from '../../urls';\n\nconst getLicensePlates = {\n  id: 'getLicensePlates',\n  name: 'Get License Plates',\n  public: true,\n  method: 'GET',\n  path: '/license-plates',\n  url: `${baseAPI}/license-plates`,\n  demo: 'license-plates-list',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'license', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'license', type: 'string', description: '' },\n        { name: 'definition', type: 'string', description: '' },\n        { name: 'type', type: 'string', description: '' }\n      ],\n      example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getLicensePlates;\n","import { ILicensePlatesEndpoints } from '../../interfaces';\n\nimport getLicensePlates from './get-license-plates';\n\nconst licensePlates: ILicensePlatesEndpoints = { getLicensePlates };\n\nexport default licensePlates;\n","import { baseAPI } from '../../urls';\n\nconst getArtists = {\n  id: 'getArtists',\n  name: 'Get Artists',\n  public: true,\n  method: 'GET',\n  path: '/music/artists',\n  url: `${baseAPI}/music/artists`,\n  demo: 'music-artists',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [{ name: 'name', type: 'string', description: '' }],\n      example: [\n        {\n          name: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getArtists;\n","import { IMusicEndpoints } from '../../interfaces';\n\nimport getArtists from './get-artists';\n\nconst music: IMusicEndpoints = {\n  getArtists\n};\n\nexport default music;\n","import { baseAPI } from '../../urls';\n\nconst getTrends = {\n  id: 'getTrends',\n  name: 'Get (Google) Trends',\n  public: true,\n  method: 'GET',\n  path: '/news/trends',\n  url: `${baseAPI}/news/trends`,\n  demo: 'news-feed',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'year', type: 'number', description: '' },\n        { name: 'month', type: 'number', description: '' },\n        { name: 'date', type: 'number', description: '' },\n        { name: 'hour', type: 'number', description: '' },\n        { name: 'trends', type: 'Array<string>', description: '' }\n      ],\n      example: {\n        year: '<number>',\n        month: '<number>',\n        date: '<number>',\n        hour: '<number>',\n        categories: '<Array<string>>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getTrends;\n","import { baseAPI } from '../../urls';\n\nconst getSources = {\n  id: 'getSources',\n  name: 'Get Sources',\n  public: true,\n  method: 'GET',\n  path: '/news/sources',\n  url: `${baseAPI}/news/sources`,\n  demo: 'news-feed',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'total', type: 'number', description: '' },\n        { name: 'sources', type: 'Array<string>', description: '' }\n      ],\n      example: {\n        total: '<number>',\n        sources: '<Array<string>>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getSources;\n","import { baseAPI } from '../../urls';\n\nconst getCategories = {\n  id: 'getCategories',\n  name: 'Get Categories',\n  public: true,\n  method: 'GET',\n  path: '/news/categories',\n  url: `${baseAPI}/news/categories`,\n  demo: 'news-feed',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'source', type: 'string', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'total', type: 'number', description: '' },\n        { name: 'categories', type: 'Array<string>', description: '' }\n      ],\n      example: {\n        total: '<number>',\n        categories: '<Array<string>>'\n      }\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getCategories;\n","import { baseAPI } from '../../urls';\n\nconst getArticles = {\n  id: 'getArticles',\n  name: 'Get Articles',\n  public: true,\n  method: 'GET',\n  path: '/news/articles',\n  url: `${baseAPI}/news/articles`,\n  demo: 'news-feed',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [\n      { name: 'source', type: 'string', required: false, description: '' },\n      { name: 'category', type: 'string', required: false, description: '' }\n    ],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'title', type: 'string', description: '' },\n        { name: 'url', type: 'string', description: '' },\n        { name: 'source', type: 'string', description: '' },\n        { name: 'description', type: 'string', description: '' },\n        { name: 'publishedDate', type: 'string', description: '' },\n        { name: 'sourceURL', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          title: '<string>',\n          url: '<string>',\n          source: '<string>',\n          sourceURL: '<string>',\n          description: '<string>',\n          publishedDate: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getArticles;\n","import { INewsEndpoints } from '../../interfaces';\n\nimport getTrends from './get-trends';\nimport getSources from './get-sources';\nimport getCategories from './get-categories';\nimport getArticles from './get-articles';\n\nconst news: INewsEndpoints = { getTrends, getSources, getCategories, getArticles };\n\nexport default news;\n","import { baseAPI } from '../../urls';\nimport { IOpenAPIsEndpoints } from '../../interfaces';\n\nconst openAPIs: IOpenAPIsEndpoints = {\n  getOpenAPIs: {\n    id: 'getOpenAPIs',\n    name: 'Get Open APIs',\n    public: true,\n    method: 'GET',\n    path: '/open-apis',\n    url: `${baseAPI}/open-apis`,\n    demo: 'open-apis-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_id', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'npm', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            type: '<string>',\n            type_id: '<string>',\n            url: '<string>',\n            npm: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNProvinces: {\n    id: 'getGHNProvinces',\n    name: 'GHN - Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/provinces',\n    url: `${baseAPI}/open-apis/giaohangnhanh/provinces`,\n    demo: 'open-apis-ghn-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNDistricts: {\n    id: 'getGHNDistricts',\n    name: 'GHN - Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/districts',\n    url: `${baseAPI}/open-apis/giaohangnhanh/districts`,\n    demo: 'open-apis-ghn-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' },\n          { name: 'type', type: 'number', description: '' },\n          { name: 'support_type', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>',\n            type: '<number>',\n            support_type: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNWards: {\n    id: 'getGHNWards',\n    name: 'GHN - Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/wards',\n    url: `${baseAPI}/open-apis/giaohangnhanh/wards`,\n    demo: 'open-apis-ghn-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'district_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVietceteraArticles: {\n    id: 'getVietceteraArticles',\n    name: 'Get Vietcetera Articles',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/vietcetera',\n    url: `${baseAPI}/open-apis/vietcetera`,\n    demo: 'open-apis-vietcetera',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'publishDate', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            publishDate: '<string>',\n            description: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default openAPIs;\n","import { baseAPI } from '../../urls';\nimport { IPhonesEndpoints } from '../../interfaces';\n\nconst phones: IPhonesEndpoints = {\n  getPrefixes: {\n    id: 'getPrefixes',\n    name: 'Get Prefixes',\n    public: true,\n    method: 'GET',\n    path: '/phones/prefixes',\n    url: `${baseAPI}/phones/prefixes`,\n    demo: 'phones-prefixes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'prefix', type: 'string', description: '' },\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'provider_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            prefix: '<string>',\n            provider: '<string>',\n            provider_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getProviders: {\n    id: 'getProviders',\n    name: 'Get Providers',\n    public: true,\n    method: 'GET',\n    path: '/phones/providers',\n    url: `${baseAPI}/phones/providers`,\n    demo: 'phones-providers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'prefixes', type: 'Array<string>', description: '' }\n        ],\n        example: [\n          {\n            provider: '<string>',\n            prefixes: '<Array<string>>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default phones;\n","import { baseAPI } from '../../urls';\nimport { ISportsEndpoints } from '../../interfaces';\n\nconst sports: ISportsEndpoints = {\n  getSportsClubs: {\n    id: 'getSportsClubs',\n    name: 'Get Sports Clubs',\n    public: true,\n    method: 'GET',\n    path: '/sports/clubs',\n    url: `${baseAPI}/sports/clubs`,\n    demo: 'sports-clubs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'sport', type: 'string', description: '' },\n          { name: 'sport_en', type: 'string', description: '' },\n          { name: 'competition', type: 'string', description: '' },\n          { name: 'city', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            sport: '<string>',\n            sport_en: '<string>',\n            competition: '<string>',\n            city: '<string>',\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVLeague: {\n    id: 'getVLeague',\n    name: 'Get VLeague',\n    public: true,\n    method: 'GET',\n    path: '/sports/vleague',\n    url: `${baseAPI}/sports/vleague`,\n    demo: 'sports-vleague',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'matches', type: 'Array<any>', description: '' },\n          { name: 'leagueTable', type: 'Array<any>', description: '' }\n        ],\n        example: {\n          matches: '<Array<any>>',\n          leagueTable: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default sports;\n","import { baseAPI } from '../../urls';\nimport { IWeatherEndpoints } from '../../interfaces';\n\nconst weather: IWeatherEndpoints = {\n  getCurrentWeather: {\n    id: 'getCurrentWeather',\n    name: 'Get Current Weather',\n    public: true,\n    method: 'GET',\n    path: '/weather',\n    url: `${baseAPI}/weather`,\n    demo: 'weather-current',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'city', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'coord', type: 'object', description: '' },\n          { name: 'weather', type: 'Array<object>', description: '' },\n          { name: 'base', type: 'string', description: '' },\n          { name: 'main', type: 'object', description: '' },\n          { name: 'visibility', type: 'number', description: '' },\n          { name: 'wind', type: 'object', description: '' },\n          { name: 'clouds', type: 'object', description: '' },\n          { name: 'dt', type: 'number', description: '' },\n          { name: 'sys', type: 'number', description: '' },\n          { name: 'timezone', type: 'number', description: '' },\n          { name: 'id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'cod', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            coord: '<object>',\n            weather: '<Array<object>>',\n            base: '<string>',\n            main: '<object>',\n            visibility: '<number>',\n            wind: '<object>',\n            clouds: '<object>',\n            dt: '<number>',\n            sys: '<number>',\n            timezone: '<number>',\n            id: '<number>',\n            name: '<string>',\n            cod: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getAirVisual: {\n    id: 'getAirVisual',\n    name: 'Get Air Visual',\n    public: true,\n    method: 'GET',\n    path: '/weather/air-visual',\n    url: `${baseAPI}/weather/air-visual`,\n    demo: 'weather-air-visual',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'city', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'city', type: 'string', description: '' },\n          { name: 'state', type: 'string', description: '' },\n          { name: 'country', type: 'string', description: '' },\n          { name: 'location', type: 'object', description: '' },\n          { name: 'current', type: 'object', description: '' }\n        ],\n        example: [\n          {\n            city: '<string>',\n            state: '<string>',\n            country: '<string>',\n            location: '<object>',\n            current: '<object>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getAirVisualCities: {\n    id: 'getAirVisualCities',\n    name: 'Get Air Visual Cities',\n    public: true,\n    method: 'GET',\n    path: '/weather/air-visual/cities',\n    url: `${baseAPI}/weather/air-visual/cities`,\n    demo: 'weather-air-visual',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'city', type: 'string', description: '' },\n          { name: 'state', type: 'string', description: '' },\n          { name: 'country', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            city: '<string>',\n            state: '<string>',\n            country: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default weather;\n","import { baseAPI } from '../../urls';\n\nconst getTrending = {\n  id: 'getTrending',\n  name: 'Get Trending',\n  public: true,\n  method: 'GET',\n  path: '/youtube/trending',\n  url: `${baseAPI}/youtube/trending`,\n  demo: 'youtube-trending',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [{ name: 'categoryId', type: 'number', required: false, description: '' }],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'id', type: 'string', description: '' },\n        { name: 'channelId', type: 'string', description: '' },\n        { name: 'title', type: 'string', description: '' },\n        { name: 'publishedAt', type: 'string', description: '' },\n        { name: 'description', type: 'string', description: '' },\n        { name: 'channelTitle', type: 'string', description: '' },\n        { name: 'tags', type: 'Array<string>', description: '' },\n        { name: 'categoryId', type: 'string', description: '' },\n        { name: 'url', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          id: '<string>',\n          channelId: '<string>',\n          title: '<string>',\n          publishedAt: '<string>',\n          description: '<string>',\n          channelTitle: '<string>',\n          tags: '<Array<string>>',\n          categoryId: '<string>',\n          url: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getTrending;\n","import { baseAPI } from '../../urls';\n\nconst getVideoCategories = {\n  id: 'getVideoCategories',\n  name: 'Get Video Categories',\n  public: true,\n  method: 'GET',\n  path: '/youtube/video-categories',\n  url: `${baseAPI}/youtube/video-categories`,\n  demo: 'youtube-trending',\n  request: {\n    headers: [{ key: 'Content-Type', value: 'application/json' }],\n    query: [],\n    body: []\n  },\n  response: {\n    200: {\n      schema: [\n        { name: 'id', type: 'string', description: '' },\n        { name: 'title', type: 'string', description: '' },\n        { name: 'assignable', type: 'boolean', description: '' },\n        { name: 'channelId', type: 'string', description: '' }\n      ],\n      example: [\n        {\n          id: '<string>',\n          title: '<string>',\n          assignable: '<string>',\n          channelId: '<string>'\n        }\n      ]\n    },\n    400: {\n      schema: [{ name: 'message', type: 'string', description: '' }],\n      example: { message: '<string>' }\n    }\n  }\n};\n\nexport default getVideoCategories;\n","import { IYouTubeEndpoints } from '../../interfaces';\n\nimport getTrending from './get-trending';\nimport getVideoCategories from './get-video-categories';\n\nconst youtube: IYouTubeEndpoints = { getTrending, getVideoCategories };\n\nexport default youtube;\n","import { IEndpoints } from '../interfaces';\n\nimport administrativeDivisions from './administrative-divisions';\nimport banks from './banks';\nimport calendar from './calendar';\nimport ethnicMinorities from './ethnic-minorities';\nimport finance from './finance';\nimport government from './government';\nimport history from './history';\nimport licensePlates from './license-plates';\nimport music from './music';\nimport news from './news';\nimport openAPIs from './open-apis';\nimport phones from './phones';\nimport sports from './sports';\nimport weather from './weather';\nimport youtube from './youtube';\n\nconst endpoints: IEndpoints = {\n  administrativeDivisions,\n  banks,\n  calendar,\n  ethnicMinorities,\n  finance,\n  government,\n  history,\n  licensePlates,\n  music,\n  news,\n  openAPIs,\n  phones,\n  sports,\n  weather,\n  youtube\n};\n\nexport default endpoints;\n","import { baseAPI, baseGraphQL } from './urls';\nimport { IPeriod, IMonth } from './interfaces';\nimport endpoints from './apis';\n\nexport { baseAPI, baseGraphQL, endpoints };\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'administrativeDivisions'\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'music'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n","import { endpoints } from '../configs';\nimport { IEndpoint } from '../configs/interfaces';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}): string {\n    const keys: Array<string> = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map((key: string) => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString: string = this.buildQueryString(query);\n    const input: string = queryString ? `${url}?${queryString}` : url;\n    const timeout: number = 1000 * 60 * 6;\n    const headers = { 'Content-Type': 'application/json' };\n    const options =\n      method === 'GET'\n        ? { method, timeout, headers }\n        : { method, timeout, headers, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res: any = {}) => {\n          resolve(res);\n        })\n        .catch((error: Error) => {\n          console.error('fetch', error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    const { sources = [] } = await this.fetch(endpoint);\n    return sources;\n  }\n\n  public async getCategories(source: string): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint, { query: { source }, body: {} });\n    return categories;\n  }\n\n  public async getArticles(source: string, category: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number): Promise<number> {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: {}, query: { symbol, from, to } });\n  }\n\n  public async getBanks(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.banks.getBanks;\n    return await this.fetch(endpoint);\n  }\n\n  public async getBanksForexRates(): Promise<any> {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks(): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const { banks = [] } = (await this.fetch(endpoint)) || {};\n    return banks;\n  }\n\n  public async syncForexRates(id: string): Promise<string> {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = 'ERROR' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getPostalCodes(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProvinces(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDistricts(province_id: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getWards(skip: number): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getWards;\n    return await this.fetch(endpoint, { query: { skip }, body: {} });\n  }\n\n  public async getTotalWards(): Promise<number> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getTotalWards;\n    const { total = 0 } = await this.fetch(endpoint);\n    return total;\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getVLeague(): Promise<any> {\n    const endpoint: IEndpoint = endpoints.sports.getVLeague;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getOpenAPIs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getOpenAPIs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProviders(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.phones.getProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrefixes(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.phones.getPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number): Promise<any> {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number): Promise<any> {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number): Promise<string> {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n\n  public async getGHNProvinces(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNDistricts(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNWards(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getArtists(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.music.getArtists;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDynasties(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.history.getDynasties;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCurrentWeather(city: string): Promise<any> {\n    const endpoint: IEndpoint = endpoints.weather.getCurrentWeather;\n    return await this.fetch(endpoint, { query: { city }, body: {} });\n  }\n\n  public async getAirVisual(city: string): Promise<any> {\n    const endpoint: IEndpoint = endpoints.weather.getAirVisual;\n    return await this.fetch(endpoint, { query: { city }, body: {} });\n  }\n\n  public async getAirVisualCities(): Promise<any> {\n    const endpoint: IEndpoint = endpoints.weather.getAirVisualCities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getYouTubeTrending(categoryId: number = 0): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.youtube.getTrending;\n    return await this.fetch(endpoint, { query: { categoryId }, body: {} });\n  }\n\n  public async getYouTubeVideoCategories(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.youtube.getVideoCategories;\n    return await this.fetch(endpoint);\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n\n  public camelize(str: string = ''): string {\n    return (str.match(/[A-Z]+(?![a-z])|[A-Z]?[a-z]+|\\d+/g) || []).join(' ');\n  }\n}\n","export default class Storage {\n  public set(key: string, value: any): void {\n    if (typeof value === 'string') {\n      localStorage.setItem(key, value);\n    } else {\n      localStorage.setItem(key, value.toString());\n    }\n  }\n\n  public get(key: string): any {\n    return localStorage.getItem(key) || '';\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\nimport Storage from './storage';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\nconst storage: Storage = new Storage();\n\nexport { apis, graphql, helper, storage };\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n  themeTextColor: string;\n}\n\nclass API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '', themeTextColor = '' } = this.props;\n\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className={`${themeTextColor} d-inline m-0 cursor-pointer`}>\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeTextColor };\n};\n\nexport default connect(mapStateToProps)(API);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nclass CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(CURL);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n  rowIndexEnabled?: boolean;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themePrimaryBackgroundColor: string;\n  themeBorder: string;\n}\n\nclass Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data',\n      rowIndexEnabled = false,\n      themeTextColor = '',\n      themeSpinnerVariant = '',\n      themePrimaryBackgroundColor = '',\n      themeBorder = ''\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5 className={`${themeTextColor}`}>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className={`table-responsive table-container rounded-lg border ${themeBorder}`}>\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className={`${themePrimaryBackgroundColor} text-center text-white`}>\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowIndexEnabled && <th className={`${themeTextColor}`}>#</th>}\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return (\n                        <th key={headerIndex} className={`${themeTextColor}`}>\n                          {header}\n                        </th>\n                      );\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowIndexEnabled && <td className={`${themeTextColor}`}>{rowIndex + 1}</td>}\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          let cell = '';\n                          if (typeof row[key] === 'boolean') {\n                            cell = row[key].toString();\n                          } else if (typeof row[key] === 'string') {\n                            cell = (row[key] || '').toString();\n                          } else {\n                            cell = row[key];\n                          }\n                          return (\n                            <td key={cellIndex} className={`${className} ${themeTextColor}`}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  return { themeTextColor, themeSpinnerVariant, themePrimaryBackgroundColor, themeBorder };\n};\n\nexport default connect(mapStateToProps)(Table);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n  themeTextColor: string;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\nclass Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { themeTextColor = '' } = this.props;\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p className={`${themeTextColor}`}>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const { themeTextColor = '' } = this.props;\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5 className={`${themeTextColor}`}>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-3\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p className={`${themeTextColor}`}>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    const { themeTextColor = '' } = this.props;\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className={`${themeTextColor} mb-3`}>{name}</h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo} className={themeTextColor}>\n                        <u>Demo</u>\n                      </Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group, themeTextColor } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className={`${themeTextColor} mb-3`}>{header}</h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeTextColor };\n};\n\nexport default connect(mapStateToProps)(Doc);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\ninterface IFooterProps {\n  themeBorderTop: string;\n  themePrimaryBackgroundColor: string;\n}\n\nclass Footer extends Component<IFooterProps> {\n  render() {\n    const { themeBorderTop, themePrimaryBackgroundColor } = this.props;\n\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <footer\n        id=\"Footer\"\n        className={`${themePrimaryBackgroundColor} ${themeBorderTop} pt-3 pb-3 text-white text-center`}>\n        &copy;{' '}\n        <a\n          href=\"https://www.linkedin.com/in/hieudoanm/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"text-white\">\n          HIEU DOAN\n        </a>{' '}\n        {year}\n      </footer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBorderTop: string = _.get(state, 'theme.borderTop', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return { themeBorderTop, themePrimaryBackgroundColor };\n};\n\nexport default connect(mapStateToProps)(Footer);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IListProps {\n  themeInput: string;\n}\n\ninterface IListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<IListProps, IListState> {\n  constructor(props: IListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true, query = '' } = this.state;\n    const { themeInput } = this.props;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        <Form className=\"mb-3\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Query\"\n            className={`${themeInput}`}\n            value={query}\n            onChange={this.filter}></Form.Control>\n        </Form>\n        <Table\n          loading={loading}\n          caption={'Ethnic Minorities'}\n          rows={filterEthnicMinorities}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IGeneralSecretariesProps {}\n\ninterface IGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nclass GeneralSecretaries extends Component<IGeneralSecretariesProps, IGeneralSecretariesState> {\n  constructor(props: IGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GeneralSecretaries\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'General Secretaries'}\n          rows={generalSecretaries}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(GeneralSecretaries);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IMinistersProps {\n  themeInput: string;\n}\n\ninterface IMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nclass Ministers extends Component<IMinistersProps, IMinistersState> {\n  constructor(props: IMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  renderForm() {\n    const { ministries = [], ministry = '' } = this.state;\n    const { themeInput } = this.props;\n    return (\n      ministries.length > 0 && (\n        <Form>\n          <Form.Group>\n            <Form.Control\n              as=\"select\"\n              className={themeInput}\n              value={ministry}\n              onChange={this.updateMinistry}>\n              {ministries.map((ministry, index) => {\n                const { short, name } = ministry;\n                return (\n                  <option key={index} value={short}>\n                    {name}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      )\n    );\n  }\n\n  render() {\n    const { ministers = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"Ministers\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        {this.renderForm()}\n        <Table\n          loading={loading}\n          caption={'Ministers'}\n          rows={ministers}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(Ministers);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IMinistriesProps {}\n\ninterface IMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nclass Ministries extends Component<IMinistriesProps, IMinistriesState> {\n  constructor(props: IMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"Ministries\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Ministries'}\n          rows={ministries}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Ministries);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IChairsProps {}\n\ninterface IChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nclass Chairs extends Component<IChairsProps, IChairsState> {\n  constructor(props: IChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"Chairs\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'National Assembly Chairs'}\n          rows={chairs}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Chairs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IMembersProps {}\n\ninterface IMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\n\nclass Members extends Component<IMembersProps, IMembersState> {\n  constructor(props: IMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"Members\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table loading={loading} caption={'Members'} rows={members} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Members);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IPresidentsProps {}\n\ninterface IPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nclass Presidents extends Component<IPresidentsProps, IPresidentsState> {\n  constructor(props: IPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"Presidents\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Presidents'}\n          rows={presidents}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Presidents);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IPrimeMinistersProps {}\n\ninterface IPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nclass PrimeMinisters extends Component<IPrimeMinistersProps, IPrimeMinistersState> {\n  constructor(props: IPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"PrimeMinisters\" className=\"container-fluid\">\n        <NavPills group={'government'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Prime Ministers'}\n          rows={primeMinisters}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(PrimeMinisters);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IDynastiesProps {}\n\ninterface IDynastiesState {\n  dynasties: Array<any>;\n  loading: boolean;\n}\n\nclass Dynasties extends Component<IDynastiesProps, IDynastiesState> {\n  constructor(props: IDynastiesProps) {\n    super(props);\n\n    this.state = { dynasties: [], loading: true };\n\n    this.getDynasties = this.getDynasties.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getDynasties();\n  }\n\n  async getDynasties() {\n    this.setState({ loading: true });\n    const dynasties: Array<any> = await apis.getDynasties();\n    this.setState({ dynasties, loading: false });\n  }\n\n  render() {\n    const { dynasties = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Temple Name', key: 'temple_name' },\n      { header: 'Birth Name', key: 'birth_name' },\n      { header: 'Start', key: 'start_year' },\n      { header: 'End', key: 'end_year' },\n      { header: 'Dynasty', key: 'dynasty' }\n    ];\n\n    return (\n      <div id=\"Dynasties\" className=\"container-fluid\">\n        <Table\n          loading={loading}\n          caption={'Dynasties'}\n          rows={dynasties}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Dynasties);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, ListGroup } from 'react-bootstrap';\n\ninterface IHomeProps {\n  themeInput: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeListItemBorderBottom: string;\n  themeSecondaryBackgroundColor: string;\n}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n}\n\ninterface IAPI {\n  name: string;\n  docs: string;\n}\n\nclass Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis: Array<IAPI> = [\n      { name: 'administrative-divisions', docs: '/administrative-divisions' },\n      { name: 'banks', docs: '/banks' },\n      { name: 'calendar', docs: '/calendar' },\n      { name: 'ethnic-minorities', docs: '/ethnic-minorities' },\n      { name: 'finance', docs: '/finance' },\n      { name: 'government', docs: '/government' },\n      { name: 'license-plates', docs: '/license-plates' },\n      { name: 'music', docs: '/music' },\n      { name: 'news', docs: '/news' },\n      { name: 'open-apis', docs: '/open-apis' },\n      { name: 'phones', docs: '/phones' },\n      { name: 'sports', docs: '/sports' },\n      { name: 'vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis\n    };\n\n    this.filter = this.filter.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [] } = this.state;\n    const filterAPIs = this.filter(apis, query);\n\n    await this.setState({ filterAPIs });\n  }\n\n  filter(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable() {\n    const { filterAPIs = [] } = this.state;\n    const {\n      themeTextColor = '',\n      themeBorder = '',\n      themeListItemBorderBottom = '',\n      themeSecondaryBackgroundColor = ''\n    } = this.props;\n\n    return (\n      <ListGroup className={`${themeBorder} list-group-flush rounded-lg`}>\n        {filterAPIs.length !== 0 &&\n          filterAPIs.map((_package, index) => {\n            const { name = '', docs = '' } = _package;\n            return (\n              <ListGroup.Item\n                key={index}\n                className={`${themeSecondaryBackgroundColor} ${themeTextColor} ${themeListItemBorderBottom} d-flex justify-content-between align-items-center`}>\n                {name}\n                <span>\n                  {docs && (\n                    <Link className={`${themeTextColor} ml-1`} to={docs}>\n                      <u>Docs</u>\n                    </Link>\n                  )}\n                </span>\n              </ListGroup.Item>\n            );\n          })}\n      </ListGroup>\n    );\n  }\n\n  render() {\n    const { query } = this.state;\n    const { themeTextColor, themeInput } = this.props;\n    return (\n      <div id=\"Home\" className=\"container-fluid\">\n        <Form className=\"mb-3\">\n          <Form.Label className={`${themeTextColor}`} htmlFor=\"query\">\n            Query\n          </Form.Label>\n          <Form.Control\n            id=\"query\"\n            type=\"text\"\n            placeholder=\"Query\"\n            className={`${themeInput}`}\n            value={query}\n            onChange={this.updateQuery}></Form.Control>\n        </Form>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeListItemBorderBottom: string = _.get(state, 'theme.listItemBorderBottom', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return {\n    themeTextColor,\n    themeBorder,\n    themeListItemBorderBottom,\n    themeSecondaryBackgroundColor,\n    themeInput\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface ListProps {\n  themeInput: string;\n}\n\ninterface ListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<ListProps, ListState> {\n  constructor(props: ListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      let { license = '' } = licensePlate;\n      license = license.toString();\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    await this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true, query = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        <Form className=\"mb-3\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"License\"\n            value={query}\n            className={`${themeInput}`}\n            onChange={this.filter}></Form.Control>\n        </Form>\n        <Table\n          loading={loading}\n          caption={'License Plates'}\n          rows={filterLicensePlates}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IArtistsProps {}\n\ninterface IArtistsState {\n  artists: Array<any>;\n  loading: boolean;\n}\n\nclass Artists extends Component<IArtistsProps, IArtistsState> {\n  constructor(props: IArtistsProps) {\n    super(props);\n\n    this.state = { artists: [], loading: true };\n\n    this.getArtists = this.getArtists.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getArtists();\n  }\n\n  async getArtists() {\n    this.setState({ loading: true });\n    const artists: Array<any> = await apis.getArtists();\n    this.setState({ artists, loading: false });\n  }\n\n  render() {\n    const { artists = [], loading = false } = this.state;\n\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n\n    return (\n      <div id=\"Artists\" className=\"container-fluid\">\n        <Table loading={loading} caption={'Artists'} rows={artists} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Artists);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { NavPills } from '../../../components';\n\ninterface IListProps {\n  themeInput: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themePrimaryBackgroundColor: string;\n}\n\ninterface IListState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<IListProps, IListState> {\n  constructor(props: IListProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getOpenAPIs = this.getOpenAPIs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getOpenAPIs();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getOpenAPIs() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getOpenAPIs();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable() {\n    const { filterTechnologies = [], loading = true } = this.state;\n    const {\n      themeBorder = '',\n      themeTextColor = '',\n      themeSpinnerVariant = '',\n      themePrimaryBackgroundColor = ''\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${themeBorder}`}>\n            <table className=\"table\">\n              <caption className={`${themePrimaryBackgroundColor} text-center text-white`}>\n                Open APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th className={`${themeTextColor}`}>Name</th>\n                  <th className={`${themeTextColor}`}>Type</th>\n                  <th className={`${themeTextColor}`}>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td className={`${themeTextColor}`}>\n                            <a\n                              href={url}\n                              rel=\"noreferrer\"\n                              target=\"_blank\"\n                              className={`${themeTextColor}`}>\n                              <b>\n                                <u>{name}</u>\n                              </b>\n                            </a>\n                          </td>\n                          <td className={`${themeTextColor}`}>{type}</td>\n                          <td className={`${themeTextColor}`}>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\"\n                                className={`${themeTextColor}`}>\n                                <b>\n                                  <u>npm</u>\n                                </b>\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { query } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <Form className=\"mb-3\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type\"\n            className={`${themeInput}`}\n            value={query}\n            onChange={this.filter}></Form.Control>\n        </Form>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return {\n    themeInput,\n    themeBorder,\n    themeTextColor,\n    themeSpinnerVariant,\n    themePrimaryBackgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nclass Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Provinces\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table\n          loading={loading}\n          caption={'GHN Provinces'}\n          rows={provinces}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Provinces);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IDistrictsProps {}\n\ninterface IDistrictsState {\n  districts: Array<any>;\n  loading: boolean;\n}\n\nclass Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { districts: [], loading: true };\n\n    this.getGHNDistricts = this.getGHNDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNDistricts();\n  }\n\n  async getGHNDistricts() {\n    this.setState({ loading: true });\n    const districts = await apis.getGHNDistricts();\n    this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' },\n      { header: 'Type', key: 'type' },\n      { header: 'Support Type', key: 'support_type' }\n    ];\n\n    return (\n      <div id=\"Districts\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table\n          loading={loading}\n          caption={'GHN Districts'}\n          rows={districts}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Districts);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../../services';\nimport { Table, NavPills } from '../../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nclass Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getGHNWards = this.getGHNWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNWards();\n  }\n\n  async getGHNWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getGHNWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Wards\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/giaohangnhanh`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <Table loading={loading} caption={'GHN Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Wards);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { NavPills } from '../../../components';\n\ninterface IVietceteraProps {\n  themeInput: string;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themeListItemBorderBottom: string;\n  themeSecondaryBackgroundColor: string;\n  themeMutedTextColor: string;\n}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nclass Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  renderForm() {\n    const { type } = this.state;\n    const { themeInput } = this.props;\n    const options = [\n      { value: 'latest', text: 'Latest' },\n      { value: 'popular', text: 'Popular' },\n      { value: 'editor-pick', text: 'Editor Pick' }\n    ];\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control as=\"select\" className={themeInput} value={type} onChange={this.getArticles}>\n            {options.map((option, index) => {\n              const { text, value } = option;\n              return (\n                <option key={index} value={value}>\n                  {text}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n    const {\n      themeTextColor = '',\n      themeSpinnerVariant = '',\n      themeListItemBorderBottom = '',\n      themeSecondaryBackgroundColor = '',\n      themeMutedTextColor = ''\n    } = this.props;\n    return (\n      <div id=\"Vietcetera\" className=\"container-fluid\">\n        <NavPills group={'open-apis'}></NavPills>\n        <div className=\"text-center mb-3\">\n          <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n            npm\n          </a>\n        </div>\n        <h3 className={`${themeTextColor} text-center`}>Vietcetera ({articles.length})</h3>\n        {this.renderForm()}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && articles.length !== 0 && (\n          <ListGroup>\n            {articles.map((article, index) => {\n              const { title = '', url = '', publishDate = '', description = '' } = article;\n              return (\n                <ListGroup.Item\n                  key={index}\n                  className={`${themeSecondaryBackgroundColor} ${themeListItemBorderBottom}`}>\n                  <Card.Title>\n                    <a href={url} target=\"_blank\" rel=\"noreferrer\" className={`${themeTextColor}`}>\n                      {title}\n                    </a>\n                  </Card.Title>\n                  <Card.Subtitle className={`${themeMutedTextColor} mb-1`}>\n                    <small>{publishDate}</small>\n                  </Card.Subtitle>\n                  <Card.Text className={themeTextColor}>{description}</Card.Text>\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeListItemBorderBottom: string = _.get(state, 'theme.listItemBorderBottom', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  const themeMutedTextColor: string = _.get(state, 'theme.mutedTextColor', '');\n  return {\n    themeInput,\n    themeTextColor,\n    themeSpinnerVariant,\n    themeListItemBorderBottom,\n    themeSecondaryBackgroundColor,\n    themeMutedTextColor\n  };\n};\n\nexport default connect(mapStateToProps)(Vietcetera);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass AdministrativeDivisions extends Component {\n  render() {\n    return (\n      <div id=\"AdministrativeDivisions\" className=\"container-fluid\">\n        <SmallDoc group={'administrativeDivisions'} header={'Administrative Divisions'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(AdministrativeDivisions);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container-fluid\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Banks);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container-fluid\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Calendar);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {\n  themeTextColor: string;\n}\n\ninterface IDocsState {\n  endpoints: any;\n}\n\nclass Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const { themeTextColor = '' } = this.props;\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small className={`${themeTextColor}`}>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar() {\n    const { endpoints } = this.state;\n    const { themeTextColor = '' } = this.props;\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n      return { group, apis };\n    });\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.camelize(helper.capitalize(group));\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className={`${themeTextColor} m-0 p-0`}\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container-fluid\">\n        <div className=\"h-100\">\n          <div className=\"row\">\n            <div className=\"col-md-3 d-none d-md-block\">\n              <div className=\"content-height overflow-auto\">{this.renderSidebar()}</div>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"content-height overflow-auto\">\n                {groups.length > 0 &&\n                  groups.map((group: string, index: number) => {\n                    return (\n                      <Doc\n                        key={index}\n                        group={group}\n                        header={helper.camelize(helper.capitalize(group))}></Doc>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeTextColor };\n};\n\nexport default connect(mapStateToProps)(Docs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container-fluid\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(EthnicMinorities);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container-fluid\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Finance);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container-fluid\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Government);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass History extends Component {\n  render() {\n    return (\n      <div id=\"History\" className=\"container-fluid\">\n        <SmallDoc group={'history'} header={'History'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(History);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container-fluid\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(LicensePlates);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Music extends Component {\n  render() {\n    return (\n      <div id=\"Music\" className=\"container-fluid\">\n        <SmallDoc group={'music'} header={'Music'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Music);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container-fluid\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(News);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass OpenAPIs extends Component {\n  render() {\n    return (\n      <div id=\"OpenAPIs\" className=\"container-fluid\">\n        <SmallDoc group={'openAPIs'} header={'OpenAPIs'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(OpenAPIs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container-fluid\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Phones);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container-fluid\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Sports);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass Weather extends Component {\n  render() {\n    return (\n      <div id=\"Weather\" className=\"container-fluid\">\n        <SmallDoc group={'weather'} header={'Weather'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Weather);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SmallDoc } from '../../components';\n\nclass YouTube extends Component {\n  render() {\n    return (\n      <div id=\"YouTube\" className=\"container-fluid\">\n        <SmallDoc group={'youtube'} header={'YouTube'}></SmallDoc>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(YouTube);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IDistrictsProps {\n  themeInput: string;\n}\n\ninterface IDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nclass Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.getDistricts = this.getDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  async getProvinces() {\n    const provinces = await apis.getProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  renderForm() {\n    const { provinces = [], province_id = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            className={themeInput}\n            value={province_id}\n            onChange={this.updateProvince}>\n            <option value={''}>Province</option>\n            {provinces.map((province, index) => {\n              return (\n                <option key={index} value={province.province_id}>\n                  {province.name}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"Districts\" className=\"container-fluid\">\n        <NavPills group={'administrative-divisions'}></NavPills>\n        {this.renderForm()}\n        <Table\n          loading={loading}\n          caption={'Districts'}\n          rows={districts}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  return { themeInput };\n};\n\nexport default connect(mapStateToProps)(Districts);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IPostalCodesProps {}\n\ninterface IPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nclass PostalCodes extends Component<IPostalCodesProps, IPostalCodesState> {\n  constructor(props: IPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"PostalCodes\" className=\"container-fluid\">\n        <NavPills group={'administrative-divisions'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Postal Codes'}\n          rows={postalCodes}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(PostalCodes);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nclass Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"Provinces\" className=\"container-fluid\">\n        <NavPills group={'administrative-divisions'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Provinces'}\n          rows={provinces}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Provinces);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Pagination } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n  total: number;\n  active: number;\n}\n\nclass Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true, total: 0, active: 1 };\n\n    this.getWards = this.getWards.bind(this);\n    this.getTotalWards = this.getTotalWards.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n    this.updateActive = this.updateActive.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTotalWards();\n    await this.getWards();\n  }\n\n  async getWards(page: number = 0) {\n    this.setState({ loading: true });\n    const skip: number = page * 100;\n    const wards = await apis.getWards(skip);\n    this.setState({ wards, loading: false });\n  }\n\n  async getTotalWards() {\n    const total: number = await apis.getTotalWards();\n    this.setState({ total });\n  }\n\n  async goToPage(page: number) {\n    await this.setState({ active: page });\n    await this.getWards(page - 1);\n  }\n\n  async updateActive(value: number) {\n    let { active } = this.state;\n    active += value;\n    await this.setState({ active });\n    await this.getWards(active - 1);\n  }\n\n  renderPagination() {\n    const { total, active } = this.state;\n\n    if (!total) return '';\n\n    const max: number = Math.floor(total / 100);\n\n    const final: number = active + 10 < max ? active + 10 : max;\n    const start: number = final === max ? max - 10 : active;\n    const items: Array<any> = [];\n    for (let page = start; page <= final; page++) {\n      items.push(\n        <Pagination.Item key={page} active={page === active} onClick={() => this.goToPage(page)}>\n          {page}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination size=\"sm\" className=\"justify-content-center\">\n        {active !== 1 && (\n          <Pagination.Item key={1} onClick={() => this.goToPage(1)}>\n            1\n          </Pagination.Item>\n        )}\n        {active !== 1 && <Pagination.Prev onClick={() => this.updateActive(1)} />}\n        {items}\n        {final !== max && <Pagination.Next onClick={() => this.updateActive(1)} />}\n        {final !== max && (\n          <Pagination.Item key={max} onClick={() => this.goToPage(max)}>\n            {max}\n          </Pagination.Item>\n        )}\n      </Pagination>\n    );\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    const rowConfigs: Array<any> = [\n      { header: 'Ward', key: 'ward' },\n      { header: 'District', key: 'district' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"Wards\" className=\"container-fluid\">\n        <NavPills group={'administrative-divisions'}></NavPills>\n        {this.renderPagination()}\n        <div className=\"mb-3\">\n          <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n        </div>\n        {this.renderPagination()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Wards);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IListProps {}\n\ninterface IListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nclass List extends Component<IListProps, IListState> {\n  constructor(props: IListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getBanks = this.getBanks.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanks();\n  }\n\n  async getBanks() {\n    this.setState({ loading: true });\n    const banks = await apis.getBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' },\n      { header: 'Name (Short)', key: 'name_short' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n    return (\n      <div id=\"List\" className=\"container-fluid\">\n        <NavPills group={'banks'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Banks'}\n          rows={banks}\n          rowConfigs={rowConfigs}\n          rowIndexEnabled={true}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(List);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { NavPills } from '../../../../components';\n\ninterface IRatesProps {\n  themeInput: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themePrimaryBackgroundColor: string;\n}\n\ninterface IRatesState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nclass Rates extends Component<IRatesProps, IRatesState> {\n  constructor(props: IRatesProps) {\n    super(props);\n\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateCurrency = this.updateCurrency.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buyCash') {\n      data.sort((a, b) => {\n        const aItem = a.buyCash[currency] || 0;\n        const bItem = b.buyCash[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'sellCash') {\n      data.sort((a, b) => {\n        const aItem = a.sellCash[currency] || 0;\n        const bItem = b.sellCash[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'buyTransfer') {\n      data.sort((a, b) => {\n        const aItem = a.buyTransfer[currency] || 0;\n        const bItem = b.buyTransfer[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'sellTransfer') {\n      data.sort((a, b) => {\n        const aItem = a.sellTransfer[currency] || 0;\n        const bItem = b.sellTransfer[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    }\n\n    await this.setState({ data });\n  }\n\n  async updateCurrency(event: any) {\n    const { value: currency } = event.target;\n    await this.setState({ currency });\n  }\n\n  renderForm() {\n    const { currencies = [], currency = '' } = this.state;\n    const { themeInput } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            className={themeInput}\n            value={currency}\n            onChange={this.updateCurrency}>\n            <option value={''}>Currency</option>\n            {currencies.map((currency, index) => {\n              return (\n                <option key={index} value={currency}>\n                  {currency.toUpperCase()}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  renderTable() {\n    const { data = [], currency = '', loading } = this.state;\n    const {\n      themeBorder = '',\n      themeTextColor = '',\n      themeSpinnerVariant = '',\n      themePrimaryBackgroundColor = ''\n    } = this.props;\n\n    return (\n      <div>\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${themeBorder}`}>\n            {data.length > 0 && (\n              <table className=\"table\">\n                <caption className={`${themePrimaryBackgroundColor} text-white text-center`}>\n                  Forex Rates {currency && <span>({currency.toUpperCase()})</span>}\n                </caption>\n                <thead>\n                  <tr>\n                    <th className={themeTextColor}>#</th>\n                    <th className={themeTextColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                        Bank\n                      </span>\n                    </th>\n                    <th className={themeTextColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('buyCash')}>\n                        Buy (Cash)\n                      </span>\n                    </th>\n                    <th className={themeTextColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('buyTransfer')}>\n                        Buy (Transfer)\n                      </span>\n                    </th>\n                    <th className={themeTextColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('sellCash')}>\n                        Sell (Cash)\n                      </span>\n                    </th>\n                    <th className={themeTextColor}>\n                      <span className=\"cursor-pointer\" onClick={() => this.sort('sellTransfer')}>\n                        Sell (Transfer)\n                      </span>\n                    </th>\n                    <th className={themeTextColor}>Last Updated At</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map((item, index) => {\n                    const {\n                      bank = '',\n                      time = '',\n                      buyCash = {},\n                      buyTransfer = {},\n                      sellCash = {},\n                      sellTransfer = {}\n                    } = item;\n                    const buyCashText: string = buyCash[currency] || '';\n                    const buyTransferText: string = buyTransfer[currency] || '';\n                    const sellCashText: string = sellCash[currency] || '';\n                    const sellTransferText: string = sellTransfer[currency] || '';\n\n                    return (\n                      <tr key={index}>\n                        <td className={themeTextColor}>{index + 1}</td>\n                        <td className={themeTextColor}>{bank}</td>\n                        <td className={themeTextColor}>{buyCashText}</td>\n                        <td className={themeTextColor}>{buyTransferText}</td>\n                        <td className={themeTextColor}>{sellCashText}</td>\n                        <td className={themeTextColor}>{sellTransferText}</td>\n                        <td className={themeTextColor}>{time}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false } = this.state;\n\n    return (\n      <div id=\"Rates\" className=\"container-fluid\">\n        <NavPills group={'banks'}></NavPills>\n        {!loading && this.renderForm()}\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return {\n    themeInput,\n    themeBorder,\n    themeTextColor,\n    themeSpinnerVariant,\n    themePrimaryBackgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(Rates);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IHistoryProps {}\n\ninterface IHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nclass History extends Component<IHistoryProps, IHistoryState> {\n  constructor(props: IHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getForexRates = this.getForexRates.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getForexRates();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    const bank: string = banks[0] || '';\n    await this.setState({ bank, banks, loading: false });\n  }\n\n  async getForexRates() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    await this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"History\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" value={bank}>\n                    <option value={''}>Bank</option>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank}>\n                          {bank}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" value={currency}>\n                    <option value={''}>Currency</option>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(History);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { NavPills } from '../../../../components';\n\ninterface ISyncProps {\n  themeBorder: string;\n  themeTextColor: string;\n  themeSpinnerVariant: string;\n  themeRevertSpinnerVariant: string;\n  themePrimaryBackgroundColor: string;\n  themeButtonVariant: string;\n}\n\ninterface ISyncState {\n  banks: Array<string>;\n  loading: boolean;\n  syncing: Array<string>;\n}\n\nclass Sync extends Component<ISyncProps, ISyncState> {\n  constructor(props: ISyncProps) {\n    super(props);\n\n    this.state = { banks: [], syncing: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n    this.syncAll = this.syncAll.bind(this);\n    this.addToSyncing = this.addToSyncing.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    await this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string, index: number = 0) {\n    await this.addToSyncing(id);\n    const message: string = await apis.syncForexRates(id);\n    await this.removeFromSyncing(id);\n    console.log(index, id, message);\n  }\n\n  async addToSyncing(id: string) {\n    const { syncing = [] } = this.state;\n    const index = syncing.indexOf(id);\n    if (index !== -1) return;\n    syncing.push(id);\n    console.log('addToSyncing', syncing);\n    await this.setState({ syncing });\n  }\n\n  async removeFromSyncing(id: string) {\n    let { syncing = [] } = this.state;\n    syncing = syncing.filter(item => item !== id);\n    console.log('removeFromSyncing', syncing);\n    await this.setState({ syncing });\n  }\n\n  async syncAll() {\n    const { banks = [] } = this.state;\n    let index: number = 0;\n    for (const id of banks) {\n      index++;\n      await this.syncForexRates(id, index);\n    }\n  }\n\n  renderTable() {\n    const { banks = [], loading = false, syncing = [] } = this.state;\n    const {\n      themeBorder = '',\n      themeTextColor = '',\n      themeSpinnerVariant = '',\n      themePrimaryBackgroundColor = '',\n      themeRevertSpinnerVariant = '',\n      themeButtonVariant = ''\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${themeBorder}`}>\n            {banks.length ? (\n              <table className=\"table\">\n                <caption className={`${themePrimaryBackgroundColor} text-white text-center`}>\n                  Banks ({banks.length})\n                </caption>\n                <thead>\n                  <tr>\n                    <th className={`${themeTextColor}`}>#</th>\n                    <th className={`${themeTextColor}`}>ID</th>\n                    <th className=\"text-right\">\n                      <Button variant={themeButtonVariant} onClick={() => this.syncAll()}>\n                        SYNC ALL\n                      </Button>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {banks.map((bank, index) => {\n                    const syncingFlag: boolean = syncing.includes(bank);\n                    return (\n                      <tr key={index}>\n                        <td className={`${themeTextColor}`}>{index + 1}</td>\n                        <td className={`${themeTextColor}`}>{bank}</td>\n                        <td align=\"right\">\n                          <Button\n                            disabled={syncingFlag}\n                            variant={themeButtonVariant}\n                            onClick={() => this.syncForexRates(bank)}>\n                            {syncingFlag ? (\n                              <Spinner\n                                animation=\"border\"\n                                variant={themeRevertSpinnerVariant}></Spinner>\n                            ) : (\n                              'SYNC'\n                            )}\n                          </Button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            ) : (\n              ''\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"Sync\" className=\"container-fluid\">\n        <NavPills group={'banks'}></NavPills>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeRevertSpinnerVariant: string = _.get(state, 'theme.revertSpinnerVariant', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  const themeButtonVariant: string = _.get(state, 'theme.buttonVariant', '');\n  return {\n    themeBorder,\n    themeTextColor,\n    themeSpinnerVariant,\n    themeRevertSpinnerVariant,\n    themePrimaryBackgroundColor,\n    themeButtonVariant\n  };\n};\n\nexport default connect(mapStateToProps)(Sync);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IConverterProps {\n  themeInput: string;\n  themeTextColor: string;\n}\n\ninterface IConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nclass Converter extends Component<IConverterProps, IConverterState> {\n  private loadingText: string = 'LOADING ...';\n\n  constructor(props: IConverterProps) {\n    super(props);\n\n    this.state = {\n      solarDate: '',\n      solarString: this.loadingText,\n      lunarDate: '',\n      lunarString: this.loadingText\n    };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    await this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    const canChi: string = await apis.getCanChi(year, month, date);\n    return helper.capitalize(canChi);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString, lunarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString, solarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n    const { themeInput = '', themeTextColor = '' } = this.props;\n\n    return (\n      <div id=\"Converter\" className=\"container-fluid\">\n        <h3 className={`${themeTextColor} text-center`}>Calendar</h3>\n        <Form className=\"row\">\n          <div className=\"col-sm-6\">\n            <Form.Group controlId=\"SolarDate\">\n              <Form.Label className={themeTextColor}>Solar Date: {solarString}</Form.Label>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"Solar Date\"\n                pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                className={`${themeInput}`}\n                value={solarDate}\n                onChange={this.updateSolarDate}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"col-sm-6\">\n            <Form.Group controlId=\"LunarDate\">\n              <Form.Label className={themeTextColor}>Lunar Date: {lunarString}</Form.Label>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"Lunar Date\"\n                pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                className={`${themeInput}`}\n                value={lunarDate}\n                onChange={this.updateLunarDate}\n              />\n            </Form.Group>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeInput, themeTextColor };\n};\n\nexport default connect(mapStateToProps)(Converter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface ICompaniesProps {}\n\ninterface ICompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nclass Companies extends Component<ICompaniesProps, ICompaniesState> {\n  constructor(props: ICompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"Companies\" className=\"container-fluid\">\n        <NavPills group={'finance'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Companies'}\n          rows={companies}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Companies);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IHighlightsProps {}\n\ninterface IHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nclass Highlights extends Component<IHighlightsProps, IHighlightsState> {\n  constructor(props: IHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  renderForm() {\n    const { period = '' } = this.state;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control as=\"select\" value={period} onChange={this.updatePeriod}>\n            {periods.map((period, index) => {\n              const { label, value } = period;\n              return (\n                <option key={index} value={value}>\n                  {label}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"Highlights\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            {this.renderForm()}\n            {this.renderTable()}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Highlights);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { NavPills } from '../../../components';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IHistoryProps {\n  themeInput: string;\n  themeTextColor: string;\n}\n\ninterface IHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  periods: Array<any>;\n  period: string;\n}\nclass History extends Component<IHistoryProps, IHistoryState> {\n  constructor(props: IHistoryProps) {\n    super(props);\n\n    this.state = {\n      periods: periods,\n      loading: false,\n      data: {},\n      symbols: [],\n      symbol: '',\n      from: 0,\n      to: 0,\n      period: ''\n    };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    await this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  renderForm() {\n    const { periods = [], period = '', symbols = [], symbol = '' } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form className=\"row\">\n        <div className=\"col-sm-6\">\n          <Form.Group>\n            <Form.Control\n              as=\"select\"\n              className={themeInput}\n              value={period}\n              onChange={this.updatePeriod}>\n              {periods.map((item: any, index: number) => {\n                const { label, value } = item;\n                return (\n                  <option key={index} value={value}>\n                    {label}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </div>\n        <div className=\"col-sm-6\">\n          <Form.Group>\n            <Form.Control\n              as=\"select\"\n              className={themeInput}\n              value={symbol}\n              onChange={this.updateSymbol}>\n              {symbols.map((item, index) => {\n                return (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n        </div>\n      </Form>\n    );\n  }\n\n  render() {\n    const { loading = false, data = {}, symbol = '' } = this.state;\n    const { themeTextColor = '' } = this.props;\n    return (\n      <div id=\"History\" className=\"container-fluid\">\n        <NavPills group={'finance'}></NavPills>\n        <h3 className={`${themeTextColor} text-center`}>History ({symbol})</h3>\n        {this.renderForm()}\n        <Card>\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeInput, themeTextColor };\n};\n\nexport default connect(mapStateToProps)(History);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IPotentialsProps {}\n\ninterface IPotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nclass Potentials extends Component<IPotentialsProps, IPotentialsState> {\n  constructor(props: IPotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { period } = this.state;\n    return (\n      <div id=\"Potentials\" className=\"container-fluid\">\n        <Card>\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control as=\"select\" value={period} onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable()}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Potentials);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IProfitProps {\n  themeInput: string;\n  themeTextColor: string;\n  themeButtonVariant: string;\n}\n\ninterface IProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nclass Profit extends Component<IProfitProps, IProfitState> {\n  constructor(props: IProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    const { themeButtonVariant = '', themeTextColor = '', themeInput = '' } = this.props;\n    return (\n      <div id=\"Profit\" className=\"container-fluid\">\n        <div className=\"rounded p-3 border\">\n          <Form onSubmit={this.calculateProfit} className=\"row\">\n            <div className=\"col-sm-4\">\n              <Form.Group>\n                <Form.Label className={themeTextColor}>\n                  Buy: {helper.numberFormatter(buy * volume)}\n                </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Buy\"\n                  className={`${themeInput} text-center`}\n                  value={buy}\n                  onChange={this.updateBuy}></Form.Control>\n              </Form.Group>\n            </div>\n            <div className=\"col-sm-4\">\n              <Form.Group>\n                <Form.Label className={themeTextColor}>\n                  Sell: {helper.numberFormatter(sell * volume)}\n                </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Sell\"\n                  className={`${themeInput} text-center`}\n                  value={sell}\n                  onChange={this.updateSell}></Form.Control>\n              </Form.Group>\n            </div>\n            <div className=\"col-sm-4\">\n              <Form.Group>\n                <Form.Label className={themeTextColor}>\n                  Volume - Profit: {helper.numberFormatter(profit)}\n                </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Volume\"\n                  className={`${themeInput} text-center`}\n                  value={volume}\n                  onChange={this.updateVolume}></Form.Control>\n              </Form.Group>\n            </div>\n            <div className=\"col-sm-12\">\n              <Button variant={themeButtonVariant} type=\"submit\" className=\"form-control\">\n                Calculate\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeButtonVariant: string = _.get(state, 'theme.buttonVariant', '');\n  return { themeInput, themeTextColor, themeButtonVariant };\n};\n\nexport default connect(mapStateToProps)(Profit);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface ITrendsProps {\n  themeBadge: string;\n  themeSpinnerVariant: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeSecondaryBackgroundColor: string;\n}\n\ninterface ITrendsState {\n  trends: Array<any>;\n  loading: boolean;\n}\n\nclass Trends extends Component<ITrendsProps, ITrendsState> {\n  constructor(props: ITrendsProps) {\n    super(props);\n\n    this.state = { trends: [], loading: true };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    await this.setState({ loading: true });\n    const trends = await apis.getGoogleTrends();\n    await this.setState({ trends, loading: false });\n  }\n\n  render() {\n    const { trends = [], loading = true } = this.state;\n    const {\n      themeBorder = '',\n      themeTextColor = '',\n      themeSecondaryBackgroundColor = '',\n      themeSpinnerVariant = '',\n      themeBadge = ''\n    } = this.props;\n\n    return (\n      <Card id=\"Trends\" className={`${themeSecondaryBackgroundColor} ${themeBorder}`}>\n        <Card.Body>\n          <Card.Title className={`${themeTextColor} text-center`}>\n            Trends ({trends.length})\n          </Card.Title>\n          {loading && (\n            <div className=\"text-center\">\n              <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n            </div>\n          )}\n          {trends.length !== 0 &&\n            trends.map((trend, index) => {\n              const { text, url } = trend;\n              return (\n                <Badge key={index} variant={themeBadge} className=\"mr-1\">\n                  <a key={index} href={url} target=\"_blank\" rel=\"noreferrer\" className=\"text-white\">\n                    {text}\n                  </a>\n                </Badge>\n              );\n            })}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBadge: string = _.get(state, 'theme.badge', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  return {\n    themeBadge,\n    themeSpinnerVariant,\n    themeBorder,\n    themeTextColor,\n    themeSecondaryBackgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(Trends);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\nimport Trends from './Trends';\n\ninterface IFeedProps {\n  themeInput: string;\n  themeTextColor: string;\n  themeMutedTextColor: string;\n  themeBorder: string;\n  themeSpinnerVariant: string;\n  themeListItemBorderBottom: string;\n  themePrimaryBackgroundColor: string;\n  themeSecondaryBackgroundColor: string;\n}\n\ninterface IFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nclass Feed extends Component<IFeedProps, IFeedState> {\n  constructor(props: IFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n    this.renderArticles = this.renderArticles.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n    await this.getCategories();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const { source } = this.state;\n    const categories = await apis.getCategories(source);\n    await this.setState({ categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    await this.setState({ sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    await this.setState({ source });\n    await this.getCategories();\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles(source, category);\n    this.setState({ articles, loading: false });\n  }\n\n  renderForm() {\n    const { categories = [], sources = [], source = '', category = '' } = this.state;\n    const { themeInput } = this.props;\n    return (\n      <Form>\n        <div className=\"row\">\n          {sources.length > 0 && (\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  className={themeInput}\n                  value={source}\n                  onChange={this.updateSource}>\n                  <option value={''}>Source</option>\n                  {sources.map((source, index) => {\n                    return (\n                      <option key={index} value={source}>\n                        {helper.capitalize(source)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          )}\n          {categories.length > 0 && (\n            <div className=\"col-sm-6\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  className={themeInput}\n                  value={category}\n                  onChange={this.updateCategory}>\n                  <option value={''}>Category</option>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category}>\n                        {helper.capitalize(category)}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </div>\n          )}\n        </div>\n      </Form>\n    );\n  }\n\n  renderArticles() {\n    const { articles } = this.state;\n    const {\n      themePrimaryBackgroundColor = '',\n      themeTextColor = '',\n      themeSecondaryBackgroundColor = '',\n      themeListItemBorderBottom = '',\n      themeMutedTextColor = ''\n    } = this.props;\n    return (\n      <div>\n        {articles.length === 0 && (\n          <div className=\"p-3 text-center text-uppercase rounded border\">NO VIDEOS</div>\n        )}\n        {articles.length !== 0 && (\n          <ListGroup>\n            <ListGroup.Item\n              className={`${themePrimaryBackgroundColor} ${themeListItemBorderBottom} text-white text-center`}>\n              Articles ({articles.length})\n            </ListGroup.Item>\n            {articles.map((article = {}, index) => {\n              const { title = '', url = '', source = '', publishedDate = '' } = article;\n              let { description = '' } = article;\n              console.log(description);\n              description = description.toString() || '';\n              const startIndex: number = description.indexOf('<img');\n              const endIndex: number = description.indexOf('/>');\n              let short = '';\n              if (startIndex > -1 && endIndex > startIndex) {\n                short = `${description.substring(0, startIndex)}${description.substring(\n                  endIndex + 2,\n                  description.length\n                )}`;\n              }\n              return (\n                <ListGroup.Item\n                  key={index}\n                  className={`${themeSecondaryBackgroundColor} ${themeListItemBorderBottom}`}>\n                  <Card.Title>\n                    <a href={url} target=\"_blank\" rel=\"noreferrer\" className={`${themeTextColor}`}>\n                      <u>{title}</u>\n                    </a>\n                  </Card.Title>\n                  <Card.Subtitle className={`${themeMutedTextColor} mb-1`}>\n                    {source && <small>{source}</small>} -{' '}\n                    {publishedDate && <small>({publishedDate})</small>}\n                  </Card.Subtitle>\n                  <Card.Text className={`${themeTextColor}`}>\n                    <span dangerouslySetInnerHTML={{ __html: short }}></span>\n                  </Card.Text>\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = true } = this.state;\n    const { themeSpinnerVariant = '' } = this.props;\n    return (\n      <div id=\"Feed\" className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n            <div className=\"mb-3\">\n              <Trends></Trends>\n            </div>\n          </div>\n          <div className=\"col-sm-9\">\n            {this.renderForm()}\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n              </div>\n            )}\n            {!loading && this.renderArticles()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeListItemBorderBottom: string = _.get(state, 'theme.listItemBorderBottom', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  const themeMutedTextColor: string = _.get(state, 'theme.mutedTextColor', '');\n  return {\n    themeInput,\n    themeMutedTextColor,\n    themeTextColor,\n    themeBorder,\n    themeListItemBorderBottom,\n    themePrimaryBackgroundColor,\n    themeSpinnerVariant,\n    themeSecondaryBackgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(Feed);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { apis } from '../../../services';\nimport { Table, NavPills } from '../../../components';\n\ninterface IPrefixesProps {}\n\ninterface IPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nclass Prefixes extends Component<IPrefixesProps, IPrefixesState> {\n  constructor(props: IPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPrefixes = this.getPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrefixes();\n  }\n\n  async getPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"Prefixes\" className=\"container-fluid\">\n        <NavPills group={'phones'}></NavPills>\n        <Table\n          loading={loading}\n          caption={'Phone Prefixes'}\n          rows={prefixes}\n          rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Prefixes);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { NavPills } from '../../../components';\n\ninterface IProvidersProps {\n  themeBorder: string;\n  themeTextColor: string;\n  themePrimaryBackgroundColor: string;\n}\n\ninterface IProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nclass Providers extends Component<IProvidersProps, IProvidersState> {\n  constructor(props: IProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getProviders = this.getProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProviders();\n  }\n\n  async getProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable() {\n    const { providers = [], loading = true } = this.state;\n    const { themeBorder = '', themeTextColor = '', themePrimaryBackgroundColor = '' } = this.props;\n\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className={`table-responsive table-container rounded-lg border ${themeBorder}`}>\n            <table className=\"table\">\n              <caption className={`${themePrimaryBackgroundColor} text-center text-white`}>\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th className={`${themeTextColor}`}>Name</th>\n                  <th className={`${themeTextColor}`}>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td className={`${themeTextColor}`}>{_provider}</td>\n                          <td className={`${themeTextColor}`}>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"Providers\" className=\"container-fluid\">\n        <NavPills group={'phones'}></NavPills>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return { themeBorder, themeTextColor, themePrimaryBackgroundColor };\n};\n\nexport default connect(mapStateToProps)(Providers);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table, NavPills } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nclass SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container-fluid\">\n        <NavPills group={'sports'}></NavPills>\n        <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(SportsClubs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Table, NavPills } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsVLeagueProps {}\n\ninterface ISportsVLeagueState {\n  matches: Array<any>;\n  leagueTable: Array<any>;\n  loading: boolean;\n}\n\nclass SportsVLeague extends Component<ISportsVLeagueProps, ISportsVLeagueState> {\n  constructor(props: ISportsVLeagueProps) {\n    super(props);\n\n    this.state = { matches: [], leagueTable: [], loading: true };\n\n    this.getVLeague = this.getVLeague.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getVLeague();\n  }\n\n  async getVLeague() {\n    this.setState({ loading: true });\n    const res = await apis.getVLeague();\n    const { matches = [], leagueTable = [] } = res;\n    this.setState({ matches, leagueTable, loading: false });\n  }\n\n  render() {\n    const { matches = [], leagueTable = [], loading = false } = this.state;\n\n    const matchesRowConfigs: Array<any> = [\n      { header: '#', key: 'round' },\n      { header: 'Date Time', key: 'dateTime' },\n      { header: 'Home', key: 'homeTeam' },\n      { header: '', key: 'homeScore' },\n      { header: '', key: 'awayScore' },\n      { header: 'Away', key: 'awayTeam' }\n    ];\n\n    const leagueTableRowConfigs: Array<any> = [\n      { header: '#', key: 'rank' },\n      { header: 'Name', key: 'name' },\n      { header: 'PTS', key: 'point' },\n      { header: 'W', key: 'win' },\n      { header: 'D', key: 'draw' },\n      { header: 'L', key: 'lost' },\n      { header: 'G', key: 'goal' },\n      { header: 'GA', key: 'goalAgainst' },\n      { header: 'GD', key: 'goalDifference' }\n    ];\n\n    return (\n      <div id=\"SportsVLeague\" className=\"container-fluid\">\n        <NavPills group={'sports'}></NavPills>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <div className=\"content-height overflow-auto\">\n              <Table\n                loading={loading}\n                caption={'Matches'}\n                rows={matches}\n                rowConfigs={matchesRowConfigs}></Table>\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <div className=\"content-height overflow-auto\">\n              <Table\n                loading={loading}\n                caption={'League Table'}\n                rows={leagueTable}\n                rowConfigs={leagueTableRowConfigs}></Table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(SportsVLeague);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Spinner, ListGroup } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IYouTubeTrendingProps {\n  themeInput: string;\n  themeBorder: string;\n  themeTextColor: string;\n  themeListItemBorderBottom: string;\n  themeSpinnerVariant: string;\n  themeSecondaryBackgroundColor: string;\n  themeMutedTextColor: string;\n}\n\ninterface IYouTubeTrendingState {\n  categoryId: string;\n  categories: Array<any>;\n  mapCategories: any;\n  trending: Array<any>;\n  loading: boolean;\n}\n\nclass YouTubeTrending extends Component<IYouTubeTrendingProps, IYouTubeTrendingState> {\n  constructor(props: IYouTubeTrendingProps) {\n    super(props);\n\n    this.state = {\n      categoryId: '',\n      categories: [],\n      mapCategories: {},\n      trending: [],\n      loading: true\n    };\n\n    this.getYouTubeTrending = this.getYouTubeTrending.bind(this);\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n    this.updateVideoCategory = this.updateVideoCategory.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderCards = this.renderCards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n    await this.getYouTubeTrending();\n  }\n\n  async getYouTubeVideoCategories() {\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    const mapCategories: any = {};\n    for (const videoCategory of categories) {\n      const { id, title } = videoCategory;\n      mapCategories[id] = title;\n    }\n    this.setState({ categories, mapCategories });\n  }\n\n  async getYouTubeTrending(categoryId: number = 0) {\n    const { mapCategories = {} } = this.state;\n    this.setState({ loading: true });\n    const videos: Array<any> = await apis.getYouTubeTrending(categoryId);\n    const trending = videos.map(video => {\n      const { categoryId } = video;\n      const category: string = mapCategories[categoryId] || '';\n      video.category = category;\n      return video;\n    });\n    this.setState({ trending, loading: false });\n  }\n\n  async updateVideoCategory(event: any) {\n    const { value: categoryId } = event.target;\n    await this.setState({ categoryId });\n    await this.getYouTubeTrending(categoryId);\n  }\n\n  renderForm() {\n    const { categories, categoryId } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            className={themeInput}\n            as=\"select\"\n            value={categoryId}\n            onChange={this.updateVideoCategory}>\n            <option value={''}>Category</option>\n            {categories.map((category, index) => {\n              return (\n                <option key={index} value={category.id}>\n                  {category.id} - {category.title}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  renderCards() {\n    const { trending = [] } = this.state;\n    const {\n      themeBorder = '',\n      themeTextColor = '',\n      themeListItemBorderBottom = '',\n      themeSecondaryBackgroundColor = '',\n      themeMutedTextColor = ''\n    } = this.props;\n\n    return (\n      <div>\n        {trending.length === 0 && (\n          <div className=\"p-3 text-center text-uppercase rounded border\">NO VIDEOS</div>\n        )}\n        {trending.length > 0 && (\n          <ListGroup className={`${themeBorder} list-group-flush rounded-lg`}>\n            {trending.map((video: any, index: number) => {\n              const { title, url, channelId, channelTitle } = video;\n              const channelUrl: string = `https://www.youtube.com/channel/${channelId}`;\n              return (\n                <ListGroup.Item\n                  key={index}\n                  className={`${themeSecondaryBackgroundColor} ${themeTextColor} ${themeListItemBorderBottom} d-flex justify-content-between align-items-center`}>\n                  <h6 className=\"m-0\">\n                    <a href={url} className={themeTextColor} target=\"_blank\" rel=\"noreferrer\">\n                      {title}\n                    </a>\n                  </h6>\n                  <small className=\"text-right\">\n                    <a\n                      href={channelUrl}\n                      className={`${themeMutedTextColor}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\">\n                      {channelTitle}\n                    </a>\n                  </small>\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false } = this.state;\n    const { themeSpinnerVariant } = this.props;\n\n    return (\n      <div id=\"YouTubeTrending\" className=\"container-fluid\">\n        {this.renderForm()}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && this.renderCards()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeBorder: string = _.get(state, 'theme.border', '');\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  const themeListItemBorderBottom: string = _.get(state, 'theme.listItemBorderBottom', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  const themeMutedTextColor: string = _.get(state, 'theme.mutedTextColor', '');\n  return {\n    themeInput,\n    themeMutedTextColor,\n    themeBorder,\n    themeTextColor,\n    themeListItemBorderBottom,\n    themeSecondaryBackgroundColor,\n    themeSpinnerVariant\n  };\n};\n\nexport default connect(mapStateToProps)(YouTubeTrending);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { NavPills } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IAirVisualProps {\n  themeInput: string;\n  themeSpinnerVariant: string;\n}\n\ninterface IAirVisualState {\n  city: string;\n  cities: Array<any>;\n  airVisual: any;\n  loading: boolean;\n}\n\nclass AirVisual extends Component<IAirVisualProps, IAirVisualState> {\n  constructor(props: IAirVisualProps) {\n    super(props);\n\n    this.state = {\n      city: '',\n      cities: [],\n      airVisual: {},\n      loading: true\n    };\n\n    this.getAirVisual = this.getAirVisual.bind(this);\n    this.getAirVisualCities = this.getAirVisualCities.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getAirVisualCities();\n    await this.getAirVisual();\n  }\n\n  async getAirVisualCities() {\n    const cities: Array<any> = await apis.getAirVisualCities();\n\n    this.setState({ cities });\n  }\n\n  async getAirVisual(query?: string) {\n    const { city: fallbackCity = '' } = this.state;\n    const city = query || fallbackCity;\n    this.setState({ loading: true });\n    const airVisual: Array<any> = await apis.getAirVisual(city);\n    this.setState({ airVisual, loading: false });\n  }\n\n  async updateCity(event: any) {\n    const { value: city } = event.target;\n    await this.setState({ city });\n    await this.getAirVisual(city);\n  }\n\n  renderForm() {\n    const { city = '', cities = [] } = this.state;\n    const { themeInput = '' } = this.props;\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control as=\"select\" className={themeInput} value={city} onChange={this.updateCity}>\n            <option value={''}>City</option>\n            {cities.map((item: any, index) => {\n              return (\n                <option key={index} value={item.city}>\n                  {item.city || ''} - {item.state || ''}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { airVisual = {}, loading = true } = this.state;\n    const { themeSpinnerVariant = '' } = this.props;\n    const aqius: number = _.get(airVisual, 'current.pollution.aqius', 0);\n    console.log(airVisual);\n    return (\n      <div id=\"YouTubeTrending\" className=\"container-fluid\">\n        <NavPills group={'weather'}></NavPills>\n        {this.renderForm()}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant={themeSpinnerVariant}></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <Card>\n            <Card.Body>\n              <Card.Text className=\"text-center\">{aqius}</Card.Text>\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeInput: string = _.get(state, 'theme.input', '');\n  const themeSpinnerVariant: string = _.get(state, 'theme.spinnerVariant', '');\n  return { themeInput, themeSpinnerVariant };\n};\n\nexport default connect(mapStateToProps)(AirVisual);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'react-bootstrap';\n\nimport { NavPills } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ICurrentProps {}\n\ninterface ICurrentState {\n  result: any;\n  loading: boolean;\n}\n\nclass Current extends Component<ICurrentProps, ICurrentState> {\n  constructor(props: ICurrentProps) {\n    super(props);\n\n    this.state = { result: {}, loading: true };\n\n    this.getCurrent = this.getCurrent.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCurrent();\n  }\n\n  async getCurrent() {\n    this.setState({ loading: true });\n    const result: Array<any> = await apis.getCurrentWeather('hanoi');\n    this.setState({ result, loading: false });\n  }\n\n  render() {\n    const { result = {} } = this.state;\n\n    const { main = {}, weather = [] } = result;\n    const [first = {}] = weather;\n    const { description = '' } = first;\n    const { temp = 0, feels_like = 0, temp_min = 0, temp_max = 0 } = main;\n\n    return (\n      <div id=\"Current\" className=\"container-fluid\">\n        <NavPills group={'weather'}></NavPills>\n        <Card>\n          <Card.Body>\n            <div className=\"mb-3\">\n              <p className=\"m-0 text-center\">{description.toUpperCase()}</p>\n              <h1 className=\"text-center\">{temp}&deg;C</h1>\n              <p className=\"m-0 text-center\">Feels Like: {feels_like}&deg;C</p>\n              <p className=\"m-0 text-center\">\n                Min: {temp_min}&deg;C - Max: {temp_max}&deg;C\n              </p>\n            </div>\n            <div className=\"p-3 bg-dark rounded\">\n              <pre className=\"m-0 text-white\">{JSON.stringify(result, null, 2)}</pre>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Current);\n","import {\n  // Administrative Divisions\n  AdministrativeDivisions,\n  AdministrativeDivisionsPostalCodes,\n  AdministrativeDivisionsProvinces,\n  AdministrativeDivisionsDistricts,\n  AdministrativeDivisionsWards,\n  // Banks\n  Banks,\n  BanksList,\n  BanksForexRates,\n  BanksForexHistory,\n  BanksForexSync,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  // History\n  History,\n  HistoryDynasties,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Music\n  Music,\n  MusicArtists,\n  // News\n  News,\n  NewsFeed,\n  // Open APIs\n  OpenAPIs,\n  OpenAPIsList,\n  GHNProvinces,\n  GHNDistricts,\n  GHNWards,\n  Vietcetera,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  SportsVLeague,\n  // Weather\n  Weather,\n  WeatherAirVisual,\n  WeatherCurrent,\n  // Weather\n  YouTube,\n  YouTubeTrending\n} from '../pages';\n\ninterface IRoute {\n  path: string;\n  text: string;\n  component: any;\n  navigation: boolean;\n  demo: boolean;\n  group: string;\n}\n\nconst routes: Array<IRoute> = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false,\n    demo: false,\n    group: ''\n  },\n  {\n    path: 'administrative-divisions',\n    text: 'Administrative Divisions',\n    component: AdministrativeDivisions,\n    navigation: true,\n    demo: false,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'administrative-divisions-postal-codes',\n    text: 'Postal Codes',\n    component: AdministrativeDivisionsPostalCodes,\n    navigation: false,\n    demo: true,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'administrative-divisions-provinces',\n    text: 'Provinces',\n    component: AdministrativeDivisionsProvinces,\n    navigation: false,\n    demo: true,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'administrative-divisions-districts',\n    text: 'Districts',\n    component: AdministrativeDivisionsDistricts,\n    navigation: false,\n    demo: true,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'administrative-divisions-wards',\n    text: 'Wards',\n    component: AdministrativeDivisionsWards,\n    navigation: false,\n    demo: true,\n    group: 'administrative-divisions'\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true,\n    demo: false,\n    group: 'banks'\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false,\n    demo: true,\n    group: 'banks'\n  },\n  {\n    path: 'banks-forex-rates',\n    text: 'Banks Forex',\n    component: BanksForexRates,\n    navigation: false,\n    demo: true,\n    group: 'banks'\n  },\n  {\n    path: 'banks-forex-history',\n    text: 'Forex History',\n    component: BanksForexHistory,\n    navigation: false,\n    demo: false,\n    group: 'banks'\n  },\n  {\n    path: 'banks-forex-sync',\n    text: 'Sync Forex',\n    component: BanksForexSync,\n    navigation: false,\n    demo: true,\n    group: 'banks'\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true,\n    demo: false,\n    group: 'calendar'\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Converter',\n    component: CalendarConverter,\n    navigation: false,\n    demo: true,\n    group: 'calendar'\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false,\n    demo: false,\n    group: 'docs'\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true,\n    demo: false,\n    group: 'ethnic-minorities'\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'List',\n    component: EthnicMinoritiesList,\n    navigation: false,\n    demo: true,\n    group: 'ethnic-minorities'\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true,\n    demo: false,\n    group: 'finance'\n  },\n  {\n    path: 'finance-companies',\n    text: 'Companies',\n    component: FinanceCompanies,\n    navigation: false,\n    demo: true,\n    group: 'finance'\n  },\n  {\n    path: 'finance-history',\n    text: 'History',\n    component: FinanceHistory,\n    navigation: false,\n    demo: true,\n    group: 'finance'\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Highlights',\n    component: FinanceHighlights,\n    navigation: false,\n    demo: false,\n    group: 'finance'\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Potentials',\n    component: FinancePotentials,\n    navigation: false,\n    demo: false,\n    group: 'finance'\n  },\n  {\n    path: 'finance-profit',\n    text: 'Profit',\n    component: FinanceProfit,\n    navigation: false,\n    demo: false,\n    group: 'finance'\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true,\n    demo: false,\n    group: 'government'\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false,\n    demo: false,\n    group: 'government'\n  },\n  {\n    path: 'government-presidents',\n    text: 'Presidents',\n    component: GovernmentPresidents,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false,\n    demo: true,\n    group: 'government'\n  },\n  {\n    path: 'history',\n    text: 'History',\n    component: History,\n    navigation: true,\n    demo: false,\n    group: 'history'\n  },\n  {\n    path: 'history-dynasties',\n    text: 'Dynasties',\n    component: HistoryDynasties,\n    navigation: false,\n    demo: true,\n    group: 'history'\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true,\n    demo: false,\n    group: 'license-plates'\n  },\n  {\n    path: 'license-plates-list',\n    text: 'List',\n    component: LicensePlatesList,\n    navigation: false,\n    demo: true,\n    group: 'license-plates'\n  },\n  {\n    path: 'music',\n    text: 'Music',\n    component: Music,\n    navigation: true,\n    demo: false,\n    group: 'music'\n  },\n  {\n    path: 'music-artists',\n    text: 'Artists',\n    component: MusicArtists,\n    navigation: false,\n    demo: true,\n    group: 'music'\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true,\n    demo: false,\n    group: 'news'\n  },\n  {\n    path: 'news-feed',\n    text: 'Feed',\n    component: NewsFeed,\n    navigation: false,\n    demo: true,\n    group: 'news'\n  },\n  {\n    path: 'open-apis',\n    text: 'Open APIs',\n    component: OpenAPIs,\n    navigation: true,\n    demo: false,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-list',\n    text: 'List',\n    component: OpenAPIsList,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-ghn-provinces',\n    text: 'GHN Provinces',\n    component: GHNProvinces,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-ghn-districts',\n    text: 'GHN Districts',\n    component: GHNDistricts,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-ghn-wards',\n    text: 'GHN Wards',\n    component: GHNWards,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'open-apis-vietcetera',\n    text: 'Vietcetera',\n    component: Vietcetera,\n    navigation: false,\n    demo: true,\n    group: 'open-apis'\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true,\n    demo: false,\n    group: 'phones'\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Prefixes',\n    component: PhonesPrefixes,\n    navigation: false,\n    demo: true,\n    group: 'phones'\n  },\n  {\n    path: 'phones-providers',\n    text: 'Providers',\n    component: PhonesProviders,\n    navigation: false,\n    demo: true,\n    group: 'phones'\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true,\n    demo: false,\n    group: 'sports'\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Clubs',\n    component: SportsClubs,\n    navigation: false,\n    demo: true,\n    group: 'sports'\n  },\n  {\n    path: 'sports-vleague',\n    text: 'VLeague',\n    component: SportsVLeague,\n    navigation: false,\n    demo: true,\n    group: 'sports'\n  },\n  {\n    path: 'weather',\n    text: 'Weather',\n    component: Weather,\n    navigation: true,\n    demo: false,\n    group: 'weather'\n  },\n  {\n    path: 'weather-air-visual',\n    text: 'Air Visual',\n    component: WeatherAirVisual,\n    navigation: false,\n    demo: true,\n    group: 'weather'\n  },\n  {\n    path: 'weather-current',\n    text: 'Current',\n    component: WeatherCurrent,\n    navigation: false,\n    demo: true,\n    group: 'weather'\n  },\n  {\n    path: 'youtube',\n    text: 'YouTube',\n    component: YouTube,\n    navigation: true,\n    demo: false,\n    group: 'youtube'\n  },\n  {\n    path: 'youtube-trending',\n    text: 'Trending',\n    component: YouTubeTrending,\n    navigation: false,\n    demo: true,\n    group: 'youtube'\n  }\n];\n\nexport default routes;\n","import { storage } from '../../services';\n\nexport const updateTheme = (theme: string) => {\n  storage.set('theme', theme);\n  return { type: theme };\n};\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Navbar, Nav, Dropdown, DropdownButton, Form } from 'react-bootstrap';\n\nimport routes from '../routers';\nimport * as themeActions from '../redux/actions/theme';\n\ninterface INavigationProps {\n  theme: string;\n  themeBorderBottom: string;\n  themePrimaryBackgroundColor: string;\n  updateTheme: (theme: string) => {};\n}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nclass Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n\n    this.updateTheme = this.updateTheme.bind(this);\n  }\n\n  async updateTheme() {\n    const { theme = 'light' } = this.props;\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    this.props.updateTheme(newTheme);\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n    const { theme, themeBorderBottom, themePrimaryBackgroundColor } = this.props;\n\n    return (\n      <Navbar\n        className={`${themePrimaryBackgroundColor} ${themeBorderBottom}`}\n        expand=\"sm\"\n        variant=\"dark\">\n        <div className=\"container-fluid p-0\">\n          <Navbar.Brand href=\"#\" className=\"text-white\">\n            VIETNAM\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar-navs\"></Navbar.Toggle>\n          <Navbar.Collapse id=\"navbar-navs\">\n            <Nav className=\"mr-auto\">\n              <Nav.Item className=\"mr-3\">\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n              <Nav.Item>\n                <a\n                  href=\"https://www.npmjs.com/package/vnapis\"\n                  className=\"text-white text-uppercase\"\n                  rel=\"noreferrer\"\n                  target=\"_blank\">\n                  npm\n                </a>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Form inline>\n                <Dropdown className=\"mr-3\">\n                  <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                    {routes\n                      .filter(route => route.navigation)\n                      .map((route, index) => {\n                        const { path: pathname, text } = route;\n                        return (\n                          <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                            {text}\n                          </Dropdown.Item>\n                        );\n                      })}\n                  </DropdownButton>\n                </Dropdown>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"custom-switch\"\n                  className=\"text-white cursor-pointer\"\n                  checked={theme !== 'light'}\n                  onChange={() => this.updateTheme()}\n                  label={theme.toUpperCase()}\n                />\n              </Form>\n            </Nav>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const theme: string = _.get(state, 'theme.theme', '');\n  const themeBorderBottom: string = _.get(state, 'theme.borderBottom', '');\n  const themePrimaryBackgroundColor: string = _.get(state, 'theme.primaryBackgroundColor', '');\n  return { theme, themeBorderBottom, themePrimaryBackgroundColor };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  updateTheme: (theme: string) => dispatch(themeActions.updateTheme(theme))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Nav } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavPillsProps {\n  group: string;\n  themeLink: string;\n}\n\ninterface INavPillsState {}\n\nclass NavPills extends Component<INavPillsProps, INavPillsState> {\n  render() {\n    const { group = [], themeLink = '' } = this.props;\n    const items = routes.filter((route: any) => route.demo && route.group === group);\n    const total: number = items.length;\n    return (\n      <Nav className=\"justify-content-center\">\n        {items.map((item: any, index: number) => {\n          const { path: pathname = '', text = '' } = item;\n          const marginRight: string = index + 1 === total ? '' : 'mr-3';\n          return (\n            <Nav.Item className={`${marginRight} mb-3`} key={index}>\n              <Nav.Link className={`${themeLink} border rounded`} as={Link} to={{ pathname }}>\n                {text}\n              </Nav.Link>\n            </Nav.Item>\n          );\n        })}\n      </Nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeLink = _.get(state, 'theme.link', '');\n  return { themeLink };\n};\n\nexport default connect(mapStateToProps)(NavPills);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Doc from './Doc';\nimport { endpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n  themeTextColor: string;\n}\n\ninterface ISmallDocState {\n  endpoints: any;\n}\n\nclass SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const { themeTextColor } = this.props;\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small className={`${themeTextColor}`}>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header, themeTextColor } = this.props;\n    const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n    return (\n      <div>\n        <h6>\n          <b className={`${themeTextColor}`}>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"content-height overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"content-height overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeTextColor: string = _.get(state, 'theme.textColor', '');\n  return { themeTextColor };\n};\n\nexport default connect(mapStateToProps)(SmallDoc);\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport { Footer, Navigation } from './components';\nimport routes from './routers';\nimport { storage } from './services';\nimport * as themeActions from './redux/actions/theme';\n\ninterface IAppProps {\n  themeSecondaryBackgroundColor: string;\n  updateTheme: (theme: string) => {};\n}\n\nclass App extends Component<IAppProps> {\n  componentDidMount() {\n    const theme = storage.get('theme');\n    if (theme) {\n      this.props.updateTheme(theme);\n    }\n  }\n\n  render() {\n    const { themeSecondaryBackgroundColor } = this.props;\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <main className={`${themeSecondaryBackgroundColor} overflow-auto pt-3 pb-3`}>\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route exact key={index} path={`/${path}`} component={component}></Route>;\n            })}\n          </main>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  const themeSecondaryBackgroundColor: string = _.get(state, 'theme.secondaryBackgroundColor', '');\n  return { themeSecondaryBackgroundColor };\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  updateTheme: (theme: string) => dispatch(themeActions.updateTheme(theme))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const LIGHT_THEME: string = 'light';\nconst DARK_THEME: string = 'dark';\n\nconst LIGHT_TEXT_COLOR: string = 'text-dark';\nconst DARK_TEXT_COLOR: string = 'text-light';\n\nconst LIGHT_MUTED_TEXT_COLOR: string = 'text-muted';\nconst DARK_MUTED_TEXT_COLOR: string = 'text-light';\n\nconst LIGHT_BORDER: string = 'border';\nconst DARK_BORDER: string = 'border border-white';\n\nconst LIGHT_BORDER_TOP: string = 'border-top border-danger';\nconst DARK_BORDER_TOP: string = 'border-top border-white';\n\nconst LIGHT_BORDER_BOTTOM: string = 'border-bottom border-danger';\nconst DARK_BORDER_BOTTOM: string = 'border-bottom border-white';\n\nconst LIGHT_SPINNER_VARIANT: string = 'danger';\nconst DARK_SPINNER_VARIANT: string = 'light';\n\nconst LIGHT_REVERT_SPINNER_VARIANT: string = 'light';\nconst DARK_REVERT_SPINNER_VARIANT: string = 'dark';\n\nconst LIGHT_BUTTON_VARIANT: string = 'danger';\nconst DARK_BUTTON_VARIANT: string = 'light';\n\nconst LIGHT_PRIMARY_BACKGROUND_COLOR: string = 'bg-danger';\nconst DARK_PRIMARY_BACKGROUND_COLOR: string = 'bg-black';\n\nconst LIGHT_SECONDARY_BACKGROUND_COLOR: string = 'bg-white';\nconst DARK_SECONDARY_BACKGROUND_COLOR: string = 'bg-black';\n\nconst LIGHT_LIST_ITEM_BORDER_BOTTOM: string = 'border-bottom';\nconst DARK_LIST_ITEM_BORDER_BOTTOM: string = 'border-bottom border-white';\n\nconst LIGHT_INPUT: string = '';\nconst DARK_INPUT: string = 'bg-black text-white';\n\nconst LIGHT_BADGE: string = 'danger';\nconst DARK_BADGE: string = 'dark';\n\nconst LIGHT_LINK: string = 'text-primary';\nconst DARK_LINK: string = 'text-white';\n\ninterface IThemeState {\n  theme: string;\n  textColor: string;\n  mutedTextColor: string;\n  spinnerVariant: string;\n  revertSpinnerVariant: string;\n  buttonVariant: string;\n  border: string;\n  borderTop: string;\n  borderBottom: string;\n  primaryBackgroundColor: string;\n  secondaryBackgroundColor: string;\n  listItemBorderBottom: string;\n  input: string;\n  badge: string;\n  link: string;\n}\n\nconst initialState: IThemeState = {\n  theme: LIGHT_THEME,\n  textColor: LIGHT_TEXT_COLOR,\n  mutedTextColor: LIGHT_MUTED_TEXT_COLOR,\n  spinnerVariant: LIGHT_SPINNER_VARIANT,\n  revertSpinnerVariant: LIGHT_REVERT_SPINNER_VARIANT,\n  buttonVariant: LIGHT_BUTTON_VARIANT,\n  border: LIGHT_BORDER,\n  borderTop: LIGHT_BORDER_TOP,\n  borderBottom: LIGHT_BORDER_BOTTOM,\n  primaryBackgroundColor: LIGHT_PRIMARY_BACKGROUND_COLOR,\n  secondaryBackgroundColor: LIGHT_SECONDARY_BACKGROUND_COLOR,\n  listItemBorderBottom: LIGHT_LIST_ITEM_BORDER_BOTTOM,\n  input: LIGHT_INPUT,\n  badge: LIGHT_BADGE,\n  link: LIGHT_LINK\n};\n\nconst themeReducer = (state: IThemeState = initialState, action: any) => {\n  switch (action.type) {\n    case LIGHT_THEME:\n      return {\n        ...state,\n        theme: LIGHT_THEME,\n        textColor: LIGHT_TEXT_COLOR,\n        mutedTextColor: LIGHT_MUTED_TEXT_COLOR,\n        spinnerVariant: LIGHT_SPINNER_VARIANT,\n        revertSpinnerVariant: LIGHT_REVERT_SPINNER_VARIANT,\n        buttonVariant: LIGHT_BUTTON_VARIANT,\n        border: LIGHT_BORDER,\n        borderTop: LIGHT_BORDER_TOP,\n        borderBottom: LIGHT_BORDER_BOTTOM,\n        primaryBackgroundColor: LIGHT_PRIMARY_BACKGROUND_COLOR,\n        secondaryBackgroundColor: LIGHT_SECONDARY_BACKGROUND_COLOR,\n        listItemBorderBottom: LIGHT_LIST_ITEM_BORDER_BOTTOM,\n        input: LIGHT_INPUT,\n        badge: LIGHT_BADGE,\n        link: LIGHT_LINK\n      };\n    case DARK_THEME:\n      return {\n        ...state,\n        theme: DARK_THEME,\n        textColor: DARK_TEXT_COLOR,\n        mutedTextColor: DARK_MUTED_TEXT_COLOR,\n        spinnerVariant: DARK_SPINNER_VARIANT,\n        revertSpinnerVariant: DARK_REVERT_SPINNER_VARIANT,\n        buttonVariant: DARK_BUTTON_VARIANT,\n        border: DARK_BORDER,\n        borderTop: DARK_BORDER_TOP,\n        borderBottom: DARK_BORDER_BOTTOM,\n        primaryBackgroundColor: DARK_PRIMARY_BACKGROUND_COLOR,\n        secondaryBackgroundColor: DARK_SECONDARY_BACKGROUND_COLOR,\n        listItemBorderBottom: DARK_LIST_ITEM_BORDER_BOTTOM,\n        input: DARK_INPUT,\n        badge: DARK_BADGE,\n        link: DARK_LINK\n      };\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n","import { combineReducers } from 'redux';\n\nimport themeReducer from './theme';\n\nconst reducers = combineReducers({ theme: themeReducer });\n\nexport default reducers;\n","import { createStore, Store } from 'redux';\n\nimport reducers from './reducers';\n\nconst store: Store = createStore(reducers);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './App';\nimport store from './redux/store';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}