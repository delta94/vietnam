{"version":3,"sources":["configs/index.js","services/apis-configs.js","services/apis.js","components/banks/Forex.js","graphql/index.js","helper/index.js","components/banks/History.js","components/banks/List.js","components/finance/Companies.js","components/finance/Highlights.js","components/finance/History.js","components/finance/Potentials.js","components/finance/Profit.js","components/globals/Code.js","components/government/GeneralSecretaries.js","components/government/Ministers.js","components/government/Ministries.js","components/government/national-assembly/Chairs.js","components/government/national-assembly/Members.js","components/government/Presidents.js","components/government/PrimeMinisters.js","components/home/Footer.js","components/home/Navigation.js","components/home/Packages.js","components/maps/Districts.js","components/maps/PostalCodes.js","components/maps/Provinces.js","components/maps/Wards.js","components/news/Feed.js","components/news/Sources.js","components/news/Trends.js","components/sports/Clubs.js","components/technologies/GiaoHangNhanh.js","components/technologies/List.js","components/technologies/Vietcetera.js","pages/Banks.js","pages/Calendar.js","pages/EthnicMinorities.js","pages/Finance.js","pages/Government.js","routers/index.js","pages/Home.js","pages/LicensePlates.js","pages/Maps.js","pages/News.js","pages/Phones.js","pages/Sports.js","pages/Technologies.js","App.js","reportWebVitals.js","index.js"],"names":["baseAPI","baseGraphQL","periods","label","value","months","name","short","endpoints","banks","getForexBanks","url","method","getForexRates","syncForex","calendar","convertLunarToSolar","convertSolarToLunar","getCanChi","ethnicMinorities","getEthnicMinorities","finance","getStockCompanies","getStockHighlights","getStockHistory","getStockPotentials","calculateProfit","government","getGeneralSecretaries","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","getMinistries","getMinisters","licensePlates","getLicensePlates","maps","getPostalCodes","getProvinces","getDistricts","getWards","news","getArticles","getTrends","getSources","getCategories","phones","getPhonesProviders","sports","getSportsClubs","technologies","getTechnologies","getGHNProvinces","apis","query","keys","Object","map","key","toString","join","endpoint","body","this","buildQueryString","options","headers","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","no","ministry","trends","text","encodeURI","category","source","articles","buy","sell","volume","from","to","symbol","response","data","currencies","currency","bank","id","status","canChi","BanksForex","state","loading","sortBy","sortDir","getBanksForexRates","bind","sort","setState","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","log","className","Card","Body","Spinner","animation","variant","Form","Group","Control","as","defaultValue","index","toUpperCase","onClick","length","item","time","Component","graphql","fallback","result","graphGet","fields","fieldsString","params","_key","__value","paramsString","list","find","prefix","capitalize","s","charAt","slice","addZero","x","numberFormatter","replace","processPeriod","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","deepClone","o","parse","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","type","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","filter","rates","rate","code","labels","year","month","date","hour","minute","datasets","buyData","transferData","sellData","lines","assign","Title","BanksList","renderTable","message","alert","forex","href","target","rel","Button","FinanceCompanies","companies","company","group","industry","subsector","basicPE","dilutedPE","PB","PS","FinanceHighlights","highlights","updatePeriod","event","highlight","startDate","low","latest","latestDate","min","minDate","max","maxDate","diff","diffToMin","diffToMax","median","average","middle","onChange","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","historyLabels","historyData","history","split","yyyy","mm","dd","i","close","_labels","timestamp","d","getFullYear","getMonth","getDate","concat","array","indexOf","class","FinancePotentials","potentials","potential","FinanceProfit","profit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","placeholder","Code","props","api","navigator","clipboard","writeText","err","GovernmentGeneralSecretaries","generalSecretaries","minister","start_date","end_date","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","name_en","level","level_en","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","member","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","HomeFooter","HomeNavigation","Navbar","bg","expand","Brand","Nav","NavDropdown","title","routes","route","path","Item","HomePackages","npm","docs","filterAPIs","filterPackages","updateQuery","externalPackages","filterExternalPackages","packages","_package","toLowerCase","MapsDistricts","districts","district","province","postalCodes","MapsProvinces","provinces","getMapsProvinces","capital","region","macro_region","MapsWards","wards","NewsFeed","categories","sources","updateCategory","updateSource","ListGroup","article","dateTimeString","description","Subtitle","Text","NewsSources","Badge","NewsTrends","getGoogleTrends","trend","SportsClubs","clubs","club","sport","competition","city","GiaoHangNhanh","province_id","List","filterTechnologies","technology","nameFlag","typeFlag","ethnicMinority","vietcetera","VietceteraClient","Vietcetera","processArticles","basicArticles","slug","language","publishDate","excerpt","option","Banks","Tabs","defaultActiveKey","Tab","eventKey","Calendar","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","controlId","Label","pattern","EthnicMinorities","filterEthnicMinorities","type_en","typeEnFlag","Finance","Government","component","filterLicensePlates","licensePlate","license","definition","providers","provider","_provider","prefixes","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAGaA,EADG,qCAKHC,EADO,yCAGPC,EAAU,CACrB,CAAEC,MAAO,SAAUC,MAAO,MAC1B,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,WAAYC,MAAO,MAC5B,CAAED,MAAO,WAAYC,MAAO,MAC5B,CAAED,MAAO,WAAYC,MAAO,MAC5B,CAAED,MAAO,SAAUC,MAAO,MAC1B,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,UAAWC,MAAO,MAC3B,CAAED,MAAO,UAAWC,MAAO,OAGhBC,EAAS,CACpB,CAAEC,KAAM,UAAWC,MAAO,OAC1B,CAAED,KAAM,WAAYC,MAAO,OAC3B,CAAED,KAAM,QAASC,MAAO,OACxB,CAAED,KAAM,QAASC,MAAO,OACxB,CAAED,KAAM,MAAOC,MAAO,OACtB,CAAED,KAAM,OAAQC,MAAO,OACvB,CAAED,KAAM,OAAQC,MAAO,OACvB,CAAED,KAAM,SAAUC,MAAO,OACzB,CAAED,KAAM,YAAaC,MAAO,OAC5B,CAAED,KAAM,UAAWC,MAAO,OAC1B,CAAED,KAAM,WAAYC,MAAO,OAC3B,CAAED,KAAM,WAAYC,MAAO,QC6BdC,EA/DG,CAChBC,MAAO,CACLC,cAAe,CAAEC,IAAI,GAAD,OAAKX,EAAL,sBAAkCY,OAAQ,OAC9DC,cAAe,CAAED,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,uBACnCc,UAAW,CAAEF,OAAQ,OAAQD,IAAI,GAAD,OAAKX,EAAL,uBAElCe,SAAU,CACRC,oBAAqB,CAAEJ,OAAQ,OAAQD,IAAI,GAAD,OAAKX,EAAL,0BAC1CiB,oBAAqB,CAAEL,OAAQ,OAAQD,IAAI,GAAD,OAAKX,EAAL,0BAC1CkB,UAAW,CAAEN,OAAQ,OAAQD,IAAI,GAAD,OAAKX,EAAL,6BAElCmB,iBAAkB,CAChBC,oBAAqB,CAAER,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,wBAE3CqB,QAAS,CACPC,kBAAmB,CAAEV,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,uBACvCuB,mBAAoB,CAAEX,OAAQ,OAAQD,IAAI,GAAD,OAAKX,EAAL,wBACzCwB,gBAAiB,CAAEZ,OAAQ,OAAQD,IAAI,GAAD,OAAKX,EAAL,qBACtCyB,mBAAoB,CAAEb,OAAQ,OAAQD,IAAI,GAAD,OAAKX,EAAL,wBACzC0B,gBAAiB,CAAEd,OAAQ,OAAQD,IAAI,GAAD,OAAKX,EAAL,qBAExC2B,WAAY,CACVC,sBAAuB,CAAEhB,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,oCAC3C6B,cAAe,CAAEjB,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,2BACnC8B,kBAAmB,CAAElB,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,gCACvC+B,0BAA2B,CACzBnB,OAAQ,MACRD,IAAI,GAAD,OAAKX,EAAL,yCAELgC,2BAA4B,CAC1BpB,OAAQ,MACRD,IAAI,GAAD,OAAKX,EAAL,0CAELiC,cAAe,CAAErB,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,2BACnCkC,aAAc,CAAEtB,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,2BAEpCmC,cAAe,CACbC,iBAAkB,CAAExB,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,qBAExCqC,KAAM,CACJC,eAAgB,CAAE1B,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,uBACpCuC,aAAc,CAAE3B,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,oBAClCwC,aAAc,CAAE5B,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,oBAClCyC,SAAU,CAAE7B,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,iBAEhC0C,KAAM,CACJC,YAAa,CAAE/B,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,UACjC4C,UAAW,CAAEhC,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,iBAC/B6C,WAAY,CAAEjC,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,kBAChC8C,cAAe,CAAElC,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,sBAErC+C,OAAQ,CACNC,mBAAoB,CAAEpC,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,uBAE1CiD,OAAQ,CACNC,eAAgB,CAAEtC,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,mBAEtCmD,aAAc,CACZC,gBAAiB,CAAExC,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,kBACrCqD,gBAAiB,CAAEzC,OAAQ,MAAOD,IAAI,GAAD,OAAKX,EAAL,4CC+I1BsD,EAFF,I,2GAvMmB,IAAbC,EAAY,uDAAJ,GACjBC,EAAOC,OAAOD,KAAKD,GACzB,OAAOC,EAAKE,KAAI,SAAAC,GAAG,gBAAOA,EAAP,aAAeJ,EAAMI,IAAQ,IAAIC,eAAcC,KAAK,O,2IAGnEC,GAAkC,IAAxBP,EAAuB,uDAAf,GAAIQ,EAAW,uDAAJ,GAC3BpD,EAAgBmD,EAAhBnD,IAAKC,EAAWkD,EAAXlD,OACXD,EAAG,UAAMA,EAAN,YAAaqD,KAAKC,iBAAiBV,IACtC,IAAMW,EACO,QAAXtD,EACI,CAAEA,SAAQuD,QAAS,CAAE,eAAgB,qBACrC,CAAEvD,SAAQuD,QAAS,CAAE,eAAgB,oBAAsBJ,KAAMK,KAAKC,UAAUN,IACtF,OAAO,IAAIO,SAAQ,SAAAC,GACjBC,MAAM7D,EAAKuD,GACRO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,WAAe,IAAdC,EAAa,uDAAP,GACXH,EAAQG,MAETE,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdN,EAAQ,c,qKAMRT,EAAWtD,EAAUmB,WAAWC,sB,SACzBoC,KAAKQ,MAAMV,G,2SAIlBA,EAAWtD,EAAUmB,WAAWE,c,SACzBmC,KAAKQ,MAAMV,G,+SAIlBA,EAAWtD,EAAUmB,WAAWG,kB,SACzBkC,KAAKQ,MAAMV,G,uTAIlBA,EAAWtD,EAAUmB,WAAWI,0B,SACzBiC,KAAKQ,MAAMV,G,wOAGOiB,G,8EACzBjB,EAAWtD,EAAUmB,WAAWK,2B,SACzBgC,KAAKQ,MAAMV,EAAU,CAAEiB,O,4SAI9BjB,EAAWtD,EAAUmB,WAAWM,c,SACzB+B,KAAKQ,MAAMV,G,0NAGPkB,G,8EACXlB,EAAWtD,EAAUmB,WAAWO,a,SACzB8B,KAAKQ,MAAMV,EAAU,CAAEkB,a,gTAI9BlB,EAAWtD,EAAUkC,KAAKE,U,SACXoB,KAAKQ,MAAMV,G,cAA1BmB,E,yBACCA,EAAOvB,KAAI,SAAAwB,GAEhB,MAAO,CAAEA,OAAMvE,IADN,0CAAsCwE,UAAUD,S,gQAMrDpB,EAAWtD,EAAUkC,KAAKG,W,SACnBmB,KAAKQ,MAAMV,G,2SAIlBA,EAAWtD,EAAUkC,KAAKI,c,SACnBkB,KAAKQ,MAAMV,G,iUAGRI,E,+BAAU,GAClBkB,EAAqBlB,EAArBkB,SAAUC,EAAWnB,EAAXmB,OACZvB,EAAWtD,EAAUkC,KAAKC,Y,SACCqB,KAAKQ,MAAMV,EAAU,CAAEsB,WAAUC,W,gDAAc,G,yBAAxEC,gB,MAAW,G,oBACZA,G,sLAGaC,EAAKC,EAAMC,G,8EACzB3B,EAAWtD,EAAUa,QAAQK,gB,SACtBsC,KAAKQ,MAAMV,EAAU,GAAI,CAAEyB,MAAKC,OAAMC,W,qOAG5BC,EAAMC,G,8EACvB7B,EAAWtD,EAAUa,QAAQE,mB,SACtByC,KAAKQ,MAAMV,EAAU,GAAI,CAAE4B,OAAMC,O,mOAGvBD,EAAMC,G,8EACvB7B,EAAWtD,EAAUa,QAAQI,mB,SACtBuC,KAAKQ,MAAMV,EAAU,GAAI,CAAE4B,OAAMC,O,kTAIxC7B,EAAWtD,EAAUa,QAAQC,kB,SACtB0C,KAAKQ,MAAMV,G,6NAGJ8B,EAAQF,EAAMC,G,8EAC5B7B,EAAWtD,EAAUa,QAAQG,gB,SACtBwC,KAAKQ,MAAMV,EAAU,GAAI,CAAE8B,SAAQF,OAAMC,O,iUAIhD7B,EAAWtD,EAAUC,MAAMI,c,SACVmD,KAAKQ,MAAMV,G,cAA5B+B,E,SACiCA,EAA/BC,Y,MAAO,G,IAAwBD,EAApBE,WACbC,GADaD,O,MAAa,G,GACJ,IAAM,G,kBAC3B,CAAED,OAAME,WAAUD,e,2QAInBjC,EAAWtD,EAAUC,MAAMC,c,SACbsD,KAAKQ,MAAMV,G,cAAzBrD,E,SACsBA,EAAM,IAAM,G,IAAhCH,KAAM2F,O,MAAO,G,oBACd,CAAEA,OAAMxF,U,+KAGDyF,G,oFACRpC,EAAWtD,EAAUC,MAAMK,U,SACHkD,KAAKQ,MAAMV,EAAU,GAAI,CAAEoC,O,2BAAjDC,c,MAAS,G,oBACVA,G,qQAIDrC,EAAWtD,EAAU6B,KAAKC,e,SACnB0B,KAAKQ,MAAMV,G,0SAIlBA,EAAWtD,EAAU6B,KAAKG,a,SACnBwB,KAAKQ,MAAMV,G,8SAIlBA,EAAWtD,EAAU6B,KAAKE,a,SACnByB,KAAKQ,MAAMV,G,sSAIlBA,EAAWtD,EAAU6B,KAAKI,S,SACnBuB,KAAKQ,MAAMV,G,4SAIlBA,EAAWtD,EAAUyC,OAAOC,e,SACrBc,KAAKQ,MAAMV,G,8SAIlBA,EAAWtD,EAAU2B,cAAcC,iB,SAC5B4B,KAAKQ,MAAMV,G,iTAIlBA,EAAWtD,EAAUW,iBAAiBC,oB,SAC/B4C,KAAKQ,MAAMV,G,6SAIlBA,EAAWtD,EAAU2C,aAAaC,gB,SAC3BY,KAAKQ,MAAMV,G,gTAIlBA,EAAWtD,EAAUuC,OAAOC,mB,SACrBgB,KAAKQ,MAAMV,G,6SAIlBA,EAAWtD,EAAU2C,aAAaE,gB,SAC3BW,KAAKQ,MAAMV,G,+TAGAC,E,+BAAO,GACzBD,EAAWtD,EAAUO,SAASC,oB,SACvBgD,KAAKQ,MAAMV,EAAU,GAAIC,G,+TAGdA,E,+BAAO,GACzBD,EAAWtD,EAAUO,SAASE,oB,SACvB+C,KAAKQ,MAAMV,EAAU,GAAIC,G,2TAGxBA,E,+BAAO,GACfD,EAAWtD,EAAUO,SAASG,U,SACN8C,KAAKQ,MAAMV,EAAU,GAAIC,G,2BAA/CqC,c,MAAS,G,oBACVA,G,8GCnDIC,E,kDA7Ib,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAER,KAAM,GAAIE,SAAU,GAAID,WAAY,GAAIQ,SAAS,EAAOC,OAAQ,GAAIC,QAAS,GAC5F,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,KAAO,EAAKA,KAAKD,KAAV,gBAJA,E,0LAQN3C,KAAK0C,qB,uRAIL1C,KAAK6C,SAAS,CAAEN,SAAS,I,uBACcjD,EAAKoD,qB,uBAA1CZ,E,EAAAA,KAAME,E,EAAAA,SAAUD,E,EAAAA,W,UAClB/B,KAAK6C,SAAS,CAAEf,OAAME,WAAUD,aAAYQ,SAAS,I,2KAGlDO,G,gGACsD9C,KAAKsC,M,IAA5DR,Y,MAAO,G,MAAIE,gB,MAAW,G,MAAIS,e,MAAU,E,MAAGD,OACzCO,EAAMN,GAAWK,U,MADiC,G,IAChB,EAAI,G,SACtC9C,KAAK6C,SAAS,CAAEL,OAAQM,EAAIL,QAASM,I,OAChC,SAAPD,EACFhB,EAAKc,MAAK,SAACI,EAAGC,GAAJ,OAAUF,GAAOC,EAAEf,KAAOgB,EAAEhB,KAAO,GAAK,MAClC,QAAPa,EACThB,EAAKc,MAAK,SAACI,EAAGC,GACZ,IAAMC,EAAOF,EAAEzB,IAAIS,IAAa,EAC1BmB,EAAOF,EAAE1B,IAAIS,IAAa,EAChC,OAAOe,GAAOG,EAAOC,EAAO,GAAK,MAEnB,SAAPL,EACThB,EAAKc,MAAK,SAACI,EAAGC,GACZ,IAAMG,EAAQJ,EAAExB,KAAKQ,IAAa,EAC5BqB,EAAQJ,EAAEzB,KAAKQ,IAAa,EAClC,OAAOe,GAAOK,EAAQC,EAAQ,GAAK,MAErB,aAAPP,GACThB,EAAKc,MAAK,SAACI,EAAGC,GACZ,IAAMK,EAAYN,EAAEO,SAASvB,IAAa,EACpCwB,EAAYP,EAAEM,SAASvB,IAAa,EAC1C,OAAOe,GAAOO,EAAYE,EAAY,GAAK,MAI/CxD,KAAK6C,SAAS,CAAEf,S,sIAGR,IAAD,SACgE9B,KAAKsC,MADrE,IACCN,gBADD,MACY,GADZ,MACgBD,kBADhB,MAC6B,GAD7B,MACiCD,YADjC,MACwC,GADxC,MAC4CS,eAD5C,SAMP,OAJAzB,QAAQ2C,IAAI,aAAc1B,GAC1BjB,QAAQ2C,IAAI,WAAYzB,GACxBlB,QAAQ2C,IAAI,OAAQ3B,GACpBhB,QAAQ2C,IAAI,UAAWlB,GAErB,qBAAKL,GAAG,aAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACGrB,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAItCxB,GACA,cAACyB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CAAcC,GAAG,SAASC,aAAa,WAAWhI,MAAO4D,KAAKsC,MAAMlG,MAApE,SACG2F,EAAWrC,KAAI,SAACsC,EAAUqC,GACzB,OACE,wBAAoBjI,MAAO4F,EAA3B,SACGA,EAASsC,eADCD,aASvB9B,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,iBAAiBa,QAAS,kBAAM,EAAK3B,KAAK,SAA1D,oBAIF,6BACE,sBAAMc,UAAU,iBAAiBa,QAAS,kBAAM,EAAK3B,KAAK,QAA1D,mBAIF,6BACE,sBAAMc,UAAU,iBAAiBa,QAAS,kBAAM,EAAK3B,KAAK,aAA1D,wBAIF,6BACE,sBAAMc,UAAU,iBAAiBa,QAAS,kBAAM,EAAK3B,KAAK,SAA1D,oBAIF,sDAGJ,gCACGd,EAAK0C,OACF1C,EAAKpC,KAAI,SAAC+E,EAAMJ,GAAW,IAAD,EAOpBI,EALFxC,YAFsB,MAEf,GAFe,IAOpBwC,EAJFC,YAHsB,MAGf,GAHe,IAOpBD,EAHFlD,WAJsB,MAIhB,GAJgB,IAOpBkD,EAFFlB,gBALsB,MAKX,GALW,IAOpBkB,EADFjD,YANsB,MAMf,GANe,EAQxB,OACE,+BACE,6BAAK6C,EAAQ,IACb,6BAAKpC,IACL,6BAAKV,EAAIS,IAAa,KACtB,6BAAKuB,EAASvB,IAAa,KAC3B,6BAAKR,EAAKQ,IAAa,KACvB,6BAAK0C,MANEL,MAUb,uB,GAjIDM,a,QCHnBC,EAAO,uCAAG,gDAAA5B,EAAA,6DAAOrD,EAAP,+BAAa,GAAIJ,EAAjB,+BAAyB,GAAIsF,EAA7B,+BAAwC,GAChD9E,EAAO,CAAER,SACT5C,EAFQ,UAECV,GAFD,kBAGP,IAAIqE,SAAQ,SAAAC,GACjBC,MAAM7D,EAAK,CACTC,OAAQ,OACRuD,QAAS,CAAE,eAAgB,oBAC3BJ,KAAMK,KAAKC,UAAUN,KAEpBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,IAAD,EACWA,EAAdoB,KACFgD,QAFK,MACI,GADJ,GAESnF,IAAQkF,EAC5BtE,EAAQuE,MAETlE,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdN,EAAQ,WAjBA,2CAAH,qDAsBPwE,EAAQ,uCAAG,wDAAA/B,EAAA,6DAAOrD,EAAP,+BAAa,GAAIqF,EAAjB,+BAA0B,GAAI9E,EAA9B,+BAAwC,GACjD+E,EAAeD,EAAOnF,KAAK,KAC3BqF,EAASzF,OAAOD,KAAKU,GACxBR,KAAI,SAAAC,GACH,IAAIvD,EAAQ8D,EAAQP,GACR,WAARA,IAEFvD,EADmBqD,OAAOD,KAAKU,EAAQP,IACpBD,KAAI,SAAAyF,GACrB,IAAMC,EAC0B,kBAAvBlF,EAAQP,GAAKwF,GAApB,WAA6CjF,EAAQP,GAAKwF,GAA1D,KAAqEjF,EAAQP,GAAKwF,GACpF,MAAM,GAAN,OAAUA,EAAV,aAAmBC,MAErBhJ,EAAK,WAAOA,EAAP,MAEP,MAAM,GAAN,OAAUuD,EAAV,aAAkBvD,MAEnByD,KAAK,KACFwF,EAAeH,EAAM,WAAOA,EAAP,KAAmB,GACxC3F,EAlBS,kBAkBUI,EAlBV,YAkBiB0F,EAlBjB,cAkBmCJ,EAlBnC,QAmBTJ,EAAW,GAnBF,UAoBID,EAAQjF,EAAKJ,EAAOsF,GApBxB,eAoBTS,EApBS,yBAqBRA,GArBQ,4CAAH,qDAuFDC,EAAI,uCAAG,gDAAAvC,EAAA,6DAAOwC,EAAP,+BAAgB,GAAIR,EAApB,+BAA6B,GAAI9E,EAAjC,+BAA2C,GACvDP,EADY,UACH6F,EADG,iBAECT,EAASpF,EAAKqF,EAAQ9E,GAFvB,cAEZoF,EAFY,yBAGXA,GAHW,2CAAH,qDC/GJG,EAAa,WAAa,IAAZC,EAAW,uDAAP,GAC7B,MAAiB,kBAANA,EAAuB,GAC3BA,EAAEC,OAAO,GAAGrB,cAAgBoB,EAAEE,MAAM,IAGhCC,EAAU,WAAY,IAAXC,EAAU,uDAAN,EAC1B,OAAOA,EAAI,EAAIA,EAAElG,WAAV,WAA2BkG,IAGvBC,EAAkB,WAAY,IAAXD,EAAU,uDAAN,EAClC,OAAOA,EACJlG,WACAoG,QAAQ,KAAM,IACdA,QAAQ,wBAAyB,MAGzBC,EAAgB,SAAAC,GAC3B,IAAMC,EAAMC,KAAKD,MACXE,EAAS,MAGTC,EAAmB,EAATD,EACZE,EAAOD,EAYX,OAXIJ,EAAOM,SAAS,KAClBD,EALcF,QAMLH,EAAOM,SAAS,KACzBD,EANeF,OAONH,EAAOM,SAAS,OACzBD,EAAOD,GAMF,CAAE5E,KAFIyE,EAAMI,GADNE,SAASP,EAAO,KAAO,GAGrBvE,GAAIwE,IAGRO,EAAY,WAAa,IAAZC,EAAW,uDAAP,GAC5B,OAAOvG,KAAKwG,MAAMxG,KAAKC,UAAUsG,KC9B7BE,EAAkB,CACtBC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,IAGZC,EAAe,CACnBC,YAAY,EACZC,WAAY,CACVC,YAAa,CACX,CACEC,SAAU,YACVC,KAAM,OACNC,KAAM,aACNC,QAAS,WACTlM,MAAO,GACP6K,YAAa,UACbsB,YAAa,EACbpM,MAAO,CACL6K,gBAAiB,MACjBwB,QAAS,gBACTC,SAAS,EACTC,SAAU,cA4ILC,E,kDApIb,aAAe,IAAD,8BACZ,gBACKrG,MAAQ,CAAEC,SAAS,EAAON,KAAM,GAAIxF,MAAO,GAAIuF,SAAU,GAAID,WAAY,IAC9E,EAAKrF,cAAgB,EAAKA,cAAciG,KAAnB,gBACrB,EAAKiG,yBAA2B,EAAKA,yBAAyBjG,KAA9B,gBAChC,EAAKkG,aAAe,EAAKA,aAAalG,KAAlB,gBALR,E,0LASN3C,KAAKtD,gB,uBACLsD,KAAK4I,2B,uQAIX5I,KAAK6C,SAAS,CAAEN,SAAS,I,SACKjD,EAAK5C,gB,gBAA3BuF,E,EAAAA,KAAMxF,E,EAAAA,MACduD,KAAK6C,SAAS,CAAEZ,OAAMxF,QAAO8F,SAAS,I,4RAIhBvC,KAAKsC,MAAnBL,Y,MAAO,G,EACfnB,QAAQ2C,IAAI,kCAAmCxB,GAC1CA,E,wDACC/B,EAAU,CAAE0C,KAAM,gBAAiBkG,OAAQ,CAAE7G,S,SAChCsD,EACjB,mBACA,CAAC,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,SAAU,SACpDrF,G,OAHI4B,E,SAMiBA,EAAK,GAApBiH,MACFhH,Q,MADU,G,GACSrC,KAAI,SAAAsJ,GAAI,OAAIA,EAAKC,QAAMrG,OAC1CZ,EAAWD,EAAW,IAAM,GAE5BmH,EAASpH,EAAKpC,KAAI,SAAA+E,GAAS,IACvB0E,EAAoC1E,EAApC0E,KAAMC,EAA8B3E,EAA9B2E,MAAOC,EAAuB5E,EAAvB4E,KAAMC,EAAiB7E,EAAjB6E,KAAMC,EAAW9E,EAAX8E,OACjC,MAAM,GAAN,OAAUJ,EAAV,YAAkBC,EAAlB,YAA2BC,EAA3B,YAAmCC,EAAnC,YAA2CC,MAGvCC,EAAWxJ,KAAK6I,aAAa/G,EAAME,GAEzChC,KAAK6C,SAAS,CAAEd,aAAYC,WAAUF,KAAM,CAAEoH,SAAQM,c,0IAG3C1H,EAAME,GACjB,IAAM+G,EAAQjH,EAAKpC,KAAI,SAAA+E,GAAS,IAExBuE,EADYvE,EAAVsE,MACWxD,MAAK,SAAAyD,GAAI,OAAIA,EAAKC,OAASjH,KAE9C,MAAO,CAAET,IADuByH,EAAxBzH,IACMC,KADkBwH,EAAnBxH,KACO+B,SADYyF,EAAbzF,aAIfkG,EAAUV,EAAMrJ,KAAI,SAAAsJ,GAAI,OAAIA,EAAKzH,OACjCmI,EAAeX,EAAMrJ,KAAI,SAAAsJ,GAAI,OAAIA,EAAKzF,YACtCoG,EAAWZ,EAAMrJ,KAAI,SAAAsJ,GAAI,OAAIA,EAAKxH,QAElCoI,EAAQ,CAAC,MAAO,WAAY,QAElC,MAAO,CAACH,EAASC,EAAcC,GAAUjK,KAAI,SAACoC,EAAMuC,GAClD,IAAMlI,EAAQyN,EAAMvF,GACpB,OAAOqC,EACLjH,OAAOoK,OAAOhD,EAAiB,CAC7B1K,QACA2F,e,+BAME,IAAD,EAQH9B,KAAKsC,MARF,IAELL,YAFK,MAEE,GAFF,MAGLxF,aAHK,MAGG,GAHH,MAILuF,gBAJK,MAIM,GAJN,MAKLD,kBALK,MAKQ,GALR,MAMLD,YANK,MAME,GANF,MAOLS,eAPK,SAeP,OANAzB,QAAQ2C,IAAI,gBAAiBxB,GAC7BnB,QAAQ2C,IAAI,iBAAkBhH,GAC9BqE,QAAQ2C,IAAI,oBAAqBzB,GACjClB,QAAQ2C,IAAI,sBAAuB1B,GACnCjB,QAAQ2C,IAAI,gBAAiB3B,GAC7BhB,QAAQ2C,IAAI,mBAAoBlB,GAE9B,qBAAKL,GAAG,eAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKmG,MAAN,sBACA,eAAC9F,EAAA,EAAD,CAAMN,UAAU,MAAhB,UACE,qBAAKA,UAAU,WAAf,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CAAcC,GAAG,SAASC,aAAcnC,EAAM7F,MAAO4D,KAAKsC,MAAMlG,MAAhE,SACGK,EAAMiD,KAAI,SAACuC,EAAMoC,GAChB,OACE,wBAAoBjI,MAAO6F,EAAK3F,KAAhC,SACG2F,EAAK3F,MADK+H,YAQvB,qBAAKX,UAAU,WAAf,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CAAcC,GAAG,SAASC,aAAcpC,EAAU5F,MAAO4D,KAAKsC,MAAMlG,MAApE,SACG2F,EAAWrC,KAAI,SAACsC,EAAUqC,GACzB,OACE,wBAAoBjI,MAAO4F,EAA3B,SACGA,GADUqC,eASxB9B,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,aAGtCxB,EAA6D,GAAnD,cAAC,OAAD,CAAMT,KAAMA,EAAM5B,QAAS6H,iB,GA5H1BpD,a,QCgDZoF,E,kDA7Fb,aAAe,IAAD,8BACZ,gBAEKzH,MAAQ,CAAE7F,MAAO,GAAI8F,SAAS,GAEnC,EAAK7F,cAAgB,EAAKA,cAAciG,KAAnB,gBACrB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBACnB,EAAK7F,UAAY,EAAKA,UAAU6F,KAAf,gBAPL,E,0LAWN3C,KAAKtD,gB,uQAIXsD,KAAK6C,SAAS,CAAEN,SAAS,I,SACIjD,EAAK5C,gB,oBAA1BD,a,MAAQ,G,EAChBuD,KAAK6C,SAAS,CAAEpG,QAAO8F,SAAS,I,+KAGlBL,G,uFACQ5C,EAAKxC,Y,OAArBmN,E,OACNC,MAAMD,G,oIAGI1H,GAAsB,IAAD,OAAZ9F,EAAY,uDAAJ,GAC3B,OACE,sBAAKyF,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oCACA,sCACA,uCACA,2CAGJ,gCACGjH,EAAM+H,OACH/H,EAAMiD,KAAI,SAACuC,EAAMoC,GAAW,IAAD,EACkBpC,EAAnCC,UADiB,MACZ,GADY,IACkBD,EAA1B3F,YADQ,MACD,GADC,IACkB2F,EAAfkI,aADH,MACW,GADX,EAEzB,OACE,+BACE,6BAAKjI,IACL,6BAAK5F,IACL,6BACE,mBAAG8N,KAAMD,EAAOE,OAAO,SAASC,IAAI,aAApC,qBAIF,6BACE,cAACC,EAAA,EAAD,CAAQxG,QAAQ,SAASQ,QAAS,kBAAM,EAAKzH,UAAUoF,IAAvD,sBATKmC,MAgBb,e,+BASR,IAAD,EACiCrE,KAAKsC,MADtC,IACC7F,aADD,MACS,GADT,MACa8F,eADb,SAIP,OAFAzB,QAAQ2C,IAAI,UAAWlB,GACvBzB,QAAQ2C,IAAI,QAAShH,GAEnB,qBAAKyF,GAAG,YAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKmG,MAAN,CAAYpG,UAAU,cAAtB,oBAA4CjH,EAAM+H,OAAlD,OACCxE,KAAKgK,YAAYzH,EAAS9F,gB,GArFjBkI,aCsGT6F,E,kDArGb,aAAe,IAAD,8BACZ,gBAEKlI,MAAQ,CAAEmI,UAAW,GAAIlI,SAAS,GAEvC,EAAKjF,kBAAoB,EAAKA,kBAAkBqF,KAAvB,gBACzB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAK1C,oB,uQAIX0C,KAAK6C,SAAS,CAAEN,SAAS,I,SACDjD,EAAKhC,oB,OAAvBmN,E,OACNzK,KAAK6C,SAAS,CAAE4H,YAAWlI,SAAS,I,wIAG1BA,GAA0B,IAAjBkI,EAAgB,uDAAJ,GAC/B,OACE,sBAAKvI,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,aAGtCxB,EAoDA,GAnDA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,wBACc+G,EAAUjG,OADxB,OAGA,gCACE,+BACE,wCACA,sCACA,uCACA,0CACA,4CACA,2CACA,6CACA,qCACA,0CAGJ,gCACGiG,EAAUjG,OACPiG,EAAU/K,KAAI,SAACgL,EAASrG,GAAW,IAE/BzC,EASE8I,EATF9I,OACAtF,EAQEoO,EARFpO,KACAqO,EAOED,EAPFC,MACAC,EAMEF,EANFE,SACAC,EAKEH,EALFG,UACAC,EAIEJ,EAJFI,QACAC,EAGEL,EAHFK,UACAC,EAEEN,EAFFM,GACAC,EACEP,EADFO,GAEF,OACE,+BACE,6BAAKrJ,IACL,6BAAKtF,IACL,6BAAKqO,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,MATE5G,MAab,e,+BAWR,IAAD,EACqCrE,KAAKsC,MAD1C,IACCmI,iBADD,MACa,GADb,MACiBlI,eADjB,SAIP,OAFAzB,QAAQ2C,IAAI,UAAWlB,GACvBzB,QAAQ2C,IAAI,YAAagH,GAEvB,qBAAKvI,GAAG,mBAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAASkI,e,GA9FnB9F,aCsKhBuG,E,kDAnKb,aAAe,IAAD,8BACZ,gBAEK5I,MAAQ,CAAEC,SAAS,EAAO4I,WAAY,GAAIzJ,KAAM,EAAGC,GAAI,GAE5D,EAAKyJ,aAAe,EAAKA,aAAazI,KAAlB,gBACpB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUG,K,EACMsD,EADN,MACPvE,E,EAAAA,KAAMC,E,EAAAA,GACd3B,KAAK6C,SAAS,CAAEnB,OAAMC,O,SAChB3B,KAAKzC,qB,kLAGM8N,G,oFACFnF,EAAWmF,EAAMhB,OAAxBjO,M,EACa6J,EAAcC,GAA3BxE,E,EAAAA,KAAMC,E,EAAAA,GACd3B,KAAK6C,SAAS,CAAEnB,OAAMC,O,SAChB3B,KAAKzC,qB,qRAIkByC,KAAKsC,M,IAA1BZ,Y,MAAO,E,MAAGC,U,MAAK,E,EACvB3B,KAAK6C,SAAS,CAAEN,SAAS,I,SACAjD,EAAK/B,mBAAmBmE,EAAMC,G,OAAjDwJ,E,OACNnL,KAAK6C,SAAS,CAAEsI,aAAY5I,SAAS,I,wIAG3BA,GAA2B,IAAlB4I,EAAiB,uDAAJ,GAChC,OACE,sBAAKjJ,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,aAGtCxB,EAoFA,GAnFA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,yBACeyH,EAAW3G,OAD1B,OAGA,gCACE,+BACE,wCACA,sCACA,wCACA,sCACA,wCACA,yCACA,6CAGJ,gCACG2G,EAAW3G,OACR2G,EAAWzL,KAAI,SAAC4L,EAAWjH,GAAW,IAAD,EAqB/BiH,EAnBF1J,cAFiC,MAExB,GAFwB,IAqB/B0J,EAlBFX,aAHiC,MAGzB,GAHyB,IAqB/BW,EAjBFC,iBAJiC,MAIrB,GAJqB,IAqB/BD,EAhBFhP,YALiC,MAK1B,GAL0B,IAqB/BgP,EAfFV,gBANiC,MAMtB,GANsB,IAqB/BU,EAdFT,iBAPiC,MAOrB,GAPqB,IAqB/BS,EAbFE,WARiC,SASjCC,EAYEH,EAZFG,OACAC,EAWEJ,EAXFI,WACAC,EAUEL,EAVFK,IACAC,EASEN,EATFM,QACAC,EAQEP,EARFO,IACAC,EAOER,EAPFQ,QACAC,EAMET,EANFS,KACAC,EAKEV,EALFU,UACAC,EAIEX,EAJFW,UACAC,EAGEZ,EAHFY,OACAC,EAEEb,EAFFa,QACAC,EACEd,EADFc,OAEF,OACE,+BACE,+BACE,8BAAMxK,IACN,8BAAM+I,IACN,8BAAMY,OAER,+BACE,8BAAMjP,IACN,8BAAMsO,IACN,8BAAMC,OAER,6BACE,sBAAKnH,UAAW8H,EAAM,cAAgB,eAAtC,UACE,gCACGC,EADH,KACaC,EADb,OAGA,gCACGC,EADH,KACUC,EADV,OAGA,gCACGC,EADH,KACUC,EADV,YAKJ,6BACE,sBAAKpI,UAAW8H,EAAM,cAAgB,eAAtC,UACE,8BAAMO,IACN,8BAAMC,IACN,8BAAMC,SAGV,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,MAjCE/H,MAqCb,e,+BAWR,IAAD,EACsCrE,KAAKsC,MAD3C,IACCC,eADD,aACkB4I,kBADlB,MAC+B,GAD/B,EAEP,OACE,qBAAKzH,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKmG,MAAN,CAAYpG,UAAU,gBACtB,cAACM,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,aAAa,KACbhI,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKoL,aAJjB,SAKGlP,EAAQwD,KAAI,SAACwG,EAAQ7B,GAAW,IACvBlI,EAAiB+J,EAAjB/J,MAAOC,EAAU8J,EAAV9J,MACf,OACE,wBAAoBA,MAAOA,EAA3B,SACGD,GADUkI,YAQtBrE,KAAKgK,YAAYzH,EAAS4I,gB,GA3JTxG,a,gBCC1BkC,EAAkB,CACtBC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,IAGZC,EAAe,CACnBC,YAAY,EACZC,WAAY,CACVC,YAAa,CACX,CACEC,SAAU,YACVC,KAAM,OACNC,KAAM,aACNC,QAAS,WACTlM,MAAO,GACP6K,YAAa,UACbsB,YAAa,EACbpM,MAAO,CACL6K,gBAAiB,MACjBwB,QAAS,gBACTC,SAAS,EACTC,SAAU,cAiKL4D,E,kDAzJb,aAAe,IAAD,8BACZ,gBACKhK,MAAQ,CAAEC,SAAS,EAAOT,KAAM,GAAIyK,QAAS,GAAI3K,OAAQ,GAAIF,KAAM,EAAGC,GAAI,GAC/E,EAAK6K,aAAe,EAAKA,aAAa7J,KAAlB,gBACpB,EAAKyI,aAAe,EAAKA,aAAazI,KAAlB,gBACpB,EAAK8J,cAAgB,EAAKA,cAAc9J,KAAnB,gBACrB,EAAK+J,gBAAkB,EAAKA,gBAAgB/J,KAArB,gBACvB,EAAKrF,kBAAoB,EAAKA,kBAAkBqF,KAAvB,gBAPb,E,oMAWN3C,KAAK1C,oB,aACI,KACA,M,EACM2I,EAFN,MAEPvE,E,EAAAA,KAAMC,E,EAAAA,GACd3B,KAAK6C,SAAS,CAAEnB,OAAMC,KAAIC,OAFX,Q,SAGT5B,KAAKxC,kB,kLAGM6N,G,oFACFnF,EAAWmF,EAAMhB,OAAxBjO,M,EACa6J,EAAcC,GAA3BxE,E,EAAAA,KAAMC,E,EAAAA,GACd3B,KAAK6C,SAAS,CAAEnB,OAAMC,O,SAChB3B,KAAKxC,kB,mLAGM6N,G,8EACFzJ,EAAWyJ,EAAMhB,OAAxBjO,MACR4D,KAAK6C,SAAS,CAAEjB,W,SACV5B,KAAKxC,kB,4QAIXwC,KAAK6C,SAAS,CAAEN,SAAS,I,SACDjD,EAAKhC,oB,OAAvBmN,E,OACA8B,EAAU9B,EAAU/K,KAAI,SAAAgL,GAAO,OAAIA,EAAQ9I,UAC3CA,EAAS2K,EAAQ,GACvBvM,KAAK6C,SAAS,CAAE0J,UAAS3K,SAAQW,SAAS,I,yRAIAvC,KAAKsC,M,IAAvCZ,Y,MAAO,E,MAAGC,U,MAAK,E,MAAGC,c,MAAS,G,WACdtC,EAAK9B,gBAAgBoE,EAAQF,EAAMC,G,OAAlDmD,E,OACAoE,EAASlJ,KAAKyM,cAAc3H,GAC5B0E,EAAWxJ,KAAK0M,gBAAgBxD,EAAQpE,GAC9ChE,QAAQ2C,IAAIyF,EAAQM,GACpBxJ,KAAK6C,SAAS,CAAEf,KAAM,CAAEoH,SAAQM,YAAYjH,SAAS,I,4IAGvCoK,EAAeC,GAe7B,OAdiBA,EAAYlN,KAAI,SAAA+E,GAAS,IAAD,EACMA,EAArCoI,eAD+B,MACrB,GADqB,IACMpI,EAAvB7C,OAAQzF,OADS,MACD,GADC,EAEjC2F,EAAO6K,EAAcjN,KAAI,SAAAvD,GAAU,IAAD,EACfA,EAAM2Q,MAAM,KADG,mBAC/BC,EAD+B,KACzBC,EADyB,KACrBC,EADqB,KAEhC9D,EAAO1C,SAASsG,GAChB3D,EAAQ3C,SAASuG,GACjB3D,EAAO5C,SAASwG,GAJgB,GAMpCJ,EAAQtH,MAAK,SAAA2H,GAAC,OAAIA,EAAE/D,OAASA,GAAQ+D,EAAE9D,QAAUA,GAAS8D,EAAE7D,OAASA,MAAS,IAD1E8D,MAEN,YAPsC,MAKxB,EALwB,KASxC,MAAO,CAAEhR,QAAO2F,WAGFpC,KAAI,SAAA+E,GAAS,IAAD,EACQA,EAA1BtI,aADkB,MACV,GADU,IACQsI,EAAd3C,YADM,MACC,GADD,EAG1B,OAAO4E,EACLjH,OAAOoK,OAAOhD,EAAiB,CAC7B1K,QACA2F,e,oCAMMA,GACZ,IADkB,EACdoH,EAAS,GADK,cAECpH,GAFD,IAElB,2BAAyB,CAAC,IAAD,UACf+K,QACFO,QAFiB,MACL,GADK,GAEC1N,KAAI,SAAAtD,GAAU,IAC5BiR,EAAcjR,EAAdiR,UACFC,EAAI,IAAIlH,KAAKiH,GACblE,EAAOtD,EAAQyH,EAAEC,eACjBnE,EAAQvD,EAAQyH,EAAEE,WAAa,GAC/BnE,EAAOxD,EAAQyH,EAAEG,WACvB,MAAM,GAAN,OAAUtE,EAAV,YAAkBC,EAAlB,YAA2BC,MAE7BH,EAASA,EAAOwE,OAAON,IAZP,8BAelB,OAAOlE,EAAOJ,QAAO,SAAC1M,EAAOiI,EAAOsJ,GAAf,OAAyBA,EAAMC,QAAQxR,KAAWiI,KAAOzB,S,+BAGtE,IAAD,EAC2D5C,KAAKsC,MADhE,IACCC,eADD,aACkBT,YADlB,MACyB,GADzB,MAC6ByK,eAD7B,MACuC,GADvC,MAC2C3K,cAD3C,MACoD,GADpD,EAEP,OACE,qBAAK8B,UAAU,iBAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKmG,MAAN,CAAYpG,UAAU,cAAtB,sBAA8C9B,EAA9C,OACA,eAACoC,EAAA,EAAD,CAAMN,UAAU,MAAhB,UACE,qBAAKmK,MAAM,WAAX,SACE,cAAC7J,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,aAAa,KACbhI,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKoL,aAJjB,SAKGlP,EAAQwD,KAAI,SAACwG,EAAQ7B,GAAW,IACvBlI,EAAiB+J,EAAjB/J,MAAOC,EAAU8J,EAAV9J,MACf,OACE,wBAAoBA,MAAOA,EAA3B,SACGD,GADUkI,YAQvB,qBAAKwJ,MAAM,WAAX,SACE,cAAC7J,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,aAAa,MACbhI,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKwM,aAJjB,SAKGD,EAAQ7M,KAAI,SAACkC,EAAQyC,GACpB,OACE,wBAAoBjI,MAAOwF,EAA3B,SACGA,GADUyC,eASxB9B,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,aAGtCxB,EAA6D,GAAnD,cAAC,OAAD,CAAMT,KAAMA,EAAM5B,QAAS6H,iB,GAjJxBpD,aCuHdmJ,E,kDAlKb,aAAe,IAAD,8BACZ,gBAEKxL,MAAQ,CAAEC,SAAS,EAAOwL,WAAY,GAAIrM,KAAM,EAAGC,GAAI,GAE5D,EAAKyJ,aAAe,EAAKA,aAAazI,KAAlB,gBACpB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUG,K,EACMsD,EADN,MACPvE,E,EAAAA,KAAMC,E,EAAAA,GACd3B,KAAK6C,SAAS,CAAEnB,OAAMC,O,SAChB3B,KAAKvC,qB,kLAGM4N,G,oFACFnF,EAAWmF,EAAMhB,OAAxBjO,M,EACa6J,EAAcC,GAA3BxE,E,EAAAA,KAAMC,E,EAAAA,GACd3B,KAAK6C,SAAS,CAAEnB,OAAMC,O,SAChB3B,KAAKvC,qB,qRAIkBuC,KAAKsC,M,IAA1BZ,Y,MAAO,E,MAAGC,U,MAAK,E,EACvB3B,KAAK6C,SAAS,CAAEN,SAAS,I,SACAjD,EAAK7B,mBAAmBiE,EAAMC,G,OAAjDoM,E,OACN/N,KAAK6C,SAAS,CAAEkL,aAAYxL,SAAS,I,wIAG3BA,GAA2B,IAAlBwL,EAAiB,uDAAJ,GAChC,OACE,sBAAK7L,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,aAGtCxB,EAoFA,GAnFA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,yBACeqK,EAAWvJ,OAD1B,OAGA,gCACE,+BACE,wCACA,sCACA,wCACA,sCACA,wCACA,yCACA,6CAGJ,gCACGuJ,EAAWvJ,OACRuJ,EAAWrO,KAAI,SAACsO,EAAW3J,GAAW,IAAD,EAqB/B2J,EAnBFpM,cAFiC,MAExB,GAFwB,IAqB/BoM,EAlBFrD,aAHiC,MAGzB,GAHyB,IAqB/BqD,EAjBFzC,iBAJiC,MAIrB,GAJqB,IAqB/ByC,EAhBF1R,YALiC,MAK1B,GAL0B,IAqB/B0R,EAfFpD,gBANiC,MAMtB,GANsB,IAqB/BoD,EAdFnD,iBAPiC,MAOrB,GAPqB,IAqB/BmD,EAbFxC,WARiC,SASjCC,EAYEuC,EAZFvC,OACAC,EAWEsC,EAXFtC,WACAC,EAUEqC,EAVFrC,IACAC,EASEoC,EATFpC,QACAC,EAQEmC,EARFnC,IACAC,EAOEkC,EAPFlC,QACAC,EAMEiC,EANFjC,KACAC,EAKEgC,EALFhC,UACAC,EAIE+B,EAJF/B,UACAC,EAGE8B,EAHF9B,OACAC,EAEE6B,EAFF7B,QACAC,EACE4B,EADF5B,OAEF,OACE,+BACE,+BACE,8BAAMxK,IACN,8BAAM+I,IACN,8BAAMY,OAER,+BACE,8BAAMjP,IACN,8BAAMsO,IACN,8BAAMC,OAER,6BACE,sBAAKnH,UAAW8H,EAAM,cAAgB,eAAtC,UACE,gCACGC,EADH,KACaC,EADb,OAGA,gCACGC,EADH,KACUC,EADV,OAGA,gCACGC,EADH,KACUC,EADV,YAKJ,6BACE,sBAAKpI,UAAW8H,EAAM,cAAgB,eAAtC,UACE,8BAAMO,IACN,8BAAMC,IACN,8BAAMC,SAGV,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,MAjCE/H,MAqCb,e,+BAWR,IAAD,EACsCrE,KAAKsC,MAD3C,IACCC,eADD,aACkBwL,kBADlB,MAC+B,GAD/B,EAEP,OACE,qBAAKrK,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACI,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,aAAa,KACbhI,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKoL,aAJjB,SAKGlP,EAAQwD,KAAI,SAACwG,EAAQ7B,GAAW,IACvBlI,EAAiB+J,EAAjB/J,MAAOC,EAAU8J,EAAV9J,MACf,OACE,wBAAoBA,MAAOA,EAA3B,SACGD,GADUkI,YAQtBrE,KAAKgK,YAAYzH,EAASwL,gB,GA1JTpJ,aC4FjBsJ,E,kDA5Fb,aAAe,IAAD,8BACZ,gBAEK3L,MAAQ,CAAEf,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGyM,OAAQ,GAEnD,EAAKxQ,gBAAkB,EAAKA,gBAAgBiF,KAArB,gBACvB,EAAKwL,UAAY,EAAKA,UAAUxL,KAAf,gBACjB,EAAKyL,WAAa,EAAKA,WAAWzL,KAAhB,gBAClB,EAAK0L,aAAe,EAAKA,aAAa1L,KAAlB,gBARR,E,sDAWJ0I,GAAQ,IACRjP,EAAUiP,EAAMhB,OAAhBjO,MACFmF,EAAM+M,WAAWlS,GACvB4D,KAAK6C,SAAS,CAAEtB,U,iCAGP8J,GAAQ,IACTjP,EAAUiP,EAAMhB,OAAhBjO,MACFoF,EAAO8M,WAAWlS,GACxB4D,KAAK6C,SAAS,CAAErB,W,mCAGL6J,GAAQ,IACXjP,EAAUiP,EAAMhB,OAAhBjO,MACFqF,EAAS6M,WAAWlS,GAC1B4D,KAAK6C,SAAS,CAAEpB,a,+EAGI4J,G,4FACpBA,EAAMkD,iB,EACoCvO,KAAKsC,M,IAAvCf,W,MAAM,E,MAAGC,Y,MAAO,E,MAAGC,c,MAAS,E,WACfnC,EAAK5B,gBAAgB6D,EAAKC,EAAMC,G,OAA/CyM,E,OACNlO,KAAK6C,SAAS,CAAEqL,W,sIAGR,IAAD,EAC+ClO,KAAKsC,MADpD,IACCf,WADD,MACO,EADP,MACUC,YADV,MACiB,EADjB,MACoBC,cADpB,MAC6B,EAD7B,MACgCyM,cADhC,MACyC,EADzC,EAEP,OACE,qBAAKxK,UAAU,gBAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UACE,eAACI,EAAA,EAAD,CAAMwK,SAAUxO,KAAKtC,gBAAiBgG,UAAU,MAAhD,UACE,qBAAKA,UAAU,WAAf,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEkE,KAAK,SACLqG,YAAY,MACZ/K,UAAU,cACVtH,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKmO,gBAGrB,qBAAKzK,UAAU,WAAf,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEkE,KAAK,SACLqG,YAAY,OACZ/K,UAAU,cACVtH,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKoO,iBAGrB,qBAAK1K,UAAU,WAAf,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEkE,KAAK,SACLqG,YAAY,SACZ/K,UAAU,cACVtH,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKqO,mBAGrB,qBAAK3K,UAAU,WAAf,SACE,cAAC6G,EAAA,EAAD,CAAQxG,QAAQ,SAASqE,KAAK,SAAS1E,UAAU,eAAjD,yBAIF,qBAAKA,UAAU,uBAAf,SAAuCqC,EAAgBxE,EAAME,KAC7D,qBAAKiC,UAAU,uBAAf,SAAuCqC,EAAgBvE,EAAOC,KAC9D,qBAAKiC,UAAU,aACf,qBAAKA,UAAU,uBAAf,SAAuCqC,EAAgBmI,oB,GAnF3CvJ,aCkBb+J,E,uKAlBH,IAAD,EACiB1O,KAAK2O,MAArB/R,EADD,EACCA,OAAQD,EADT,EACSA,IACViS,EAAG,UAAM5S,EAAN,YAAiBW,GAC1B,OACE,sBAAKuF,GAAG,OAAOwB,UAAU,sCAAzB,UACE,sBAAMA,UAAU,sBAAhB,SAAuC9G,IACvC,sBACE8G,UAAU,iBACVa,QAAS,WR2BY,IAAArD,IQ1BH0N,ER2B1BC,UAAUC,UACPC,UAAU7N,GACVT,MAAK,WACJyJ,MAAM,+BAEPtJ,OAAM,SAAAoO,GACL9E,MAAM,0BAA2B8E,OQpC/B,SAKGJ,W,GAZQjK,aCkFJsK,G,kDA/Eb,aAAe,IAAD,8BACZ,gBAEK3M,MAAQ,CAAE4M,mBAAoB,GAAI3M,SAAS,GAEhD,EAAK3E,sBAAwB,EAAKA,sBAAsB+E,KAA3B,gBAC7B,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKpC,wB,2QAIXoC,KAAK6C,SAAS,CAAEN,SAAS,I,SACQjD,EAAK1B,wB,OAAhCsR,E,OACNlP,KAAK6C,SAAS,CAAEqM,qBAAoB3M,SAAS,I,wIAGnCA,GAAmC,IAA1B2M,EAAyB,uDAAJ,GACxC,OACE,sBAAKhN,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,kCACwBwL,EAAmB1K,OAD3C,OAGA,gCACE,+BACE,sCACA,uCACA,0CAGJ,gCACG0K,EAAmB1K,OAChB0K,EAAmBxP,KAAI,SAACyP,EAAU9K,GAAW,IAAD,EACY8K,EAA9C7S,YADkC,MAC3B,GAD2B,IACY6S,EAAnCC,kBADuB,MACV,GADU,IACYD,EAAlBE,gBADM,MACK,GADL,EAE1C,OACE,+BACE,6BAAK/S,IACL,6BAAK8S,IACL,6BAAKC,EAAS/K,kBAHPD,MAOb,e,+BASR,IAAD,EAC8CrE,KAAKsC,MADnD,IACC4M,0BADD,MACsB,GADtB,MAC0B3M,eAD1B,SAGP,OACE,qBAAKL,GAAG,+BAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAAC,EAAD,CAAMhH,OAAQ,MAAOD,IAAG,mCACvBqD,KAAKgK,YAAYzH,EAAS2M,gB,GAvEEvK,aCiH5B2K,G,kDAlHb,aAAe,IAAD,8BACZ,gBAEKhN,MAAQ,CAAEtB,SAAU,GAAIuO,WAAY,GAAIC,UAAW,GAAIjN,SAAS,GAErE,EAAKtE,cAAgB,EAAKA,cAAc0E,KAAnB,gBACrB,EAAKzE,aAAe,EAAKA,aAAayE,KAAlB,gBACpB,EAAK8M,eAAiB,EAAKA,eAAe9M,KAApB,gBACtB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBARP,E,0LAYN3C,KAAK/B,gB,uBACL+B,KAAK9B,e,gRAIcoB,EAAKrB,gB,OAAxBsR,E,SAC2BA,EAAW,GAApChT,MAAOyE,O,MAAW,G,EAC1BhB,KAAK6C,SAAS,CAAE7B,WAAUuO,e,oQAIlBvO,EAAahB,KAAKsC,MAAlBtB,SACRhB,KAAK6C,SAAS,CAAEN,SAAS,I,SACDjD,EAAKpB,aAAa8C,G,OAApCwO,E,OACNxP,KAAK6C,SAAS,CAAE2M,YAAWjN,SAAS,I,oLAGjB8I,G,8EACJrK,EAAaqK,EAAMhB,OAA1BjO,M,SACF4D,KAAK6C,SAAS,CAAE7B,a,uBAChBhB,KAAK9B,e,yIAGDqE,GAA0B,IAAjBiN,EAAgB,uDAAJ,GAC/B,OACE,sBAAKtN,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,wBACc8L,EAAUhL,OADxB,OAGA,gCACE,+BACE,sCACA,uCACA,0CAGJ,gCACGgL,EAAUhL,OACPgL,EAAU9P,KAAI,SAACyP,EAAU9K,GAAW,IAAD,EACqB8K,EAA9C7S,YADyB,MAClB,GADkB,IACqB6S,EAAnCC,kBADc,MACD,GADC,IACqBD,EAAlBE,gBADH,MACc,GADd,EAEjC,OACE,+BACE,6BAAK/S,IACL,6BAAK8S,IACL,6BAAKC,EAAS/K,kBAHPD,MAOb,e,+BASR,IAAD,EACsDrE,KAAKsC,MAD3D,IACCkN,iBADD,MACa,GADb,MACiBD,kBADjB,MAC8B,GAD9B,MACkChN,eADlC,SAKP,OAHAzB,QAAQ2C,IAAI,UAAWlB,GACvBzB,QAAQ2C,IAAI,aAAc8L,GAGxB,qBAAKrN,GAAG,sBAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACI,EAAA,EAAD,CAAMN,UAAU,aAAhB,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,aAAa,SACbhI,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKyP,eAJjB,SAKGF,EAAW7P,KAAI,SAACsB,EAAUqD,GAAW,IAC5B9H,EAAgByE,EAAhBzE,MAAOD,EAAS0E,EAAT1E,KACf,OACE,wBAAoBF,MAAOG,EAA3B,SACGD,GADU+H,YAQtBrE,KAAKgK,YAAYzH,EAASiN,gB,GA1GP7K,aCgFnB+K,G,kDA/Eb,aAAe,IAAD,8BACZ,gBAEKpN,MAAQ,CAAEiN,WAAY,GAAIhN,SAAS,GAExC,EAAKtE,cAAgB,EAAKA,cAAc0E,KAAnB,gBACrB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAK/B,gB,mQAIX+B,KAAK6C,SAAS,CAAEN,SAAS,I,SACAjD,EAAKrB,gB,OAAxBsR,E,OACNvP,KAAK6C,SAAS,CAAE0M,aAAYhN,SAAS,I,wIAG3BA,GAA2B,IAAlBgN,EAAiB,uDAAJ,GAChC,OACE,sBAAKrN,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,yBACe6L,EAAW/K,OAD1B,OAGA,gCACE,+BACE,uCACA,4CACA,sCACA,gDAGJ,gCACG+K,EAAW/K,OACR+K,EAAW7P,KAAI,SAACsB,EAAUqD,GAAW,IAAD,EAC6BrD,EAAvD1E,YAD0B,MACnB,GADmB,IAC6B0E,EAA5C2O,eADe,MACL,GADK,IAC6B3O,EAA9B4O,aADC,MACO,GADP,IAC6B5O,EAAlB6O,gBADX,MACsB,GADtB,EAElC,OACE,+BACE,6BAAKD,IACL,6BAAKC,IACL,6BAAKvT,IACL,6BAAKqT,MAJEtL,MAQb,e,+BASR,IAAD,EACsCrE,KAAKsC,MAD3C,IACCiN,kBADD,MACc,GADd,MACkBhN,eADlB,SAIP,OAFAzB,QAAQ2C,IAAI,UAAWlB,GACvBzB,QAAQ2C,IAAI,aAAc8L,GAExB,qBAAKrN,GAAG,uBAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAASgN,e,GAxEf5K,aC6EpBmL,G,kDA5Eb,aAAe,IAAD,8BACZ,gBAEKxN,MAAQ,CAAEyN,OAAQ,GAAIxN,SAAS,GAEpC,EAAKxE,0BAA4B,EAAKA,0BAA0B4E,KAA/B,gBACjC,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKjC,4B,+QAIXiC,KAAK6C,SAAS,CAAEN,SAAS,I,SACJjD,EAAKvB,4B,OAApBgS,E,OACN/P,KAAK6C,SAAS,CAAEkN,SAAQxN,SAAS,I,wIAGvBA,GAAuB,IAAdwN,EAAa,uDAAJ,GAC5B,OACE,sBAAK7N,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,uCAC6BqM,EAAOvL,OADpC,OAGA,gCACE,+BACE,sCACA,uCACA,0CAGJ,gCACGuL,EAAOvL,OACJuL,EAAOrQ,KAAI,SAACyP,EAAU9K,GAAW,IAAD,EACwB8K,EAA9C7S,YADsB,MACf,GADe,IACwB6S,EAAnCC,kBADW,MACE,GADF,IACwBD,EAAlBE,gBADN,MACiB,GADjB,EAE9B,OACE,+BACE,6BAAK/S,IACL,6BAAK8S,IACL,6BAAKC,EAAS/K,kBAHPD,MAOb,e,+BASR,IAAD,EACkCrE,KAAKsC,MADvC,IACCyN,cADD,MACU,GADV,MACcxN,eADd,SAGP,OACE,qBAAKL,GAAG,mCAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAASwN,e,GArEHpL,aC8EhCqL,G,kDA7Eb,aAAe,IAAD,8BACZ,gBAEK1N,MAAQ,CAAE2N,QAAS,GAAIlP,GAAI,GAAIwB,SAAS,GAE7C,EAAKvE,2BAA6B,EAAKA,2BAA2B2E,KAAhC,gBAClC,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKhC,6B,kRAIH+C,EAAOf,KAAKsC,MAAZvB,GACRf,KAAK6C,SAAS,CAAEN,SAAS,I,SACHjD,EAAKtB,2BAA2B+C,G,OAAhDkP,E,OACNjQ,KAAK6C,SAAS,CAAEoN,UAAS1N,SAAS,I,wIAGxBA,GAAwB,IAAf0N,EAAc,uDAAJ,GAC7B,OACE,sBAAK/N,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,wCAC8BuM,EAAQzL,OADtC,OAGA,gCACE,+BACE,sCACA,uCACA,0CAGJ,gCACGyL,EAAQzL,OACLyL,EAAQvQ,KAAI,SAACwQ,EAAQ7L,GAAW,IAAD,EACyB6L,EAA9C5T,YADqB,MACd,GADc,IACyB4T,EAAnCd,kBADU,MACG,GADH,IACyBc,EAAlBb,gBADP,MACkB,GADlB,EAE7B,OACE,+BACE,6BAAK/S,IACL,6BAAK8S,IACL,6BAAKC,EAAS/K,kBAHPD,MAOb,e,+BASR,IAAD,EACmCrE,KAAKsC,MADxC,IACC2N,eADD,MACW,GADX,MACe1N,eADf,SAGP,OACE,qBAAKL,GAAG,oCAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAAS0N,e,GAtEFtL,aC6EjCwL,G,kDA5Eb,aAAe,IAAD,8BACZ,gBAEK7N,MAAQ,CAAE8N,WAAY,GAAI7N,SAAS,GAExC,EAAK1E,cAAgB,EAAKA,cAAc8E,KAAnB,gBACrB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKnC,gB,mQAIXmC,KAAK6C,SAAS,CAAEN,SAAS,I,SACAjD,EAAKzB,gB,OAAxBuS,E,OACNpQ,KAAK6C,SAAS,CAAEuN,aAAY7N,SAAS,I,wIAG3BA,GAA2B,IAAlB6N,EAAiB,uDAAJ,GAChC,OACE,sBAAKlO,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,yBACe0M,EAAW5L,OAD1B,OAGA,gCACE,+BACE,sCACA,uCACA,0CAGJ,gCACG4L,EAAW5L,OACR4L,EAAW1Q,KAAI,SAACyP,EAAU9K,GAAW,IAAD,EACoB8K,EAA9C7S,YAD0B,MACnB,GADmB,IACoB6S,EAAnCC,kBADe,MACF,GADE,IACoBD,EAAlBE,gBADF,MACa,GADb,EAElC,OACE,+BACE,6BAAK/S,IACL,6BAAK8S,IACL,6BAAKC,EAAS/K,kBAHPD,MAOb,e,+BASR,IAAD,EACsCrE,KAAKsC,MAD3C,IACC8N,kBADD,MACc,GADd,MACkB7N,eADlB,SAGP,OACE,qBAAKL,GAAG,aAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAAS6N,e,GArEfzL,aC6EpB0L,G,kDA5Eb,aAAe,IAAD,8BACZ,gBAEK/N,MAAQ,CAAEgO,eAAgB,GAAI/N,SAAS,GAE5C,EAAKzE,kBAAoB,EAAKA,kBAAkB6E,KAAvB,gBACzB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKlC,oB,uQAIXkC,KAAK6C,SAAS,CAAEN,SAAS,I,SACIjD,EAAKxB,oB,OAA5BwS,E,OACNtQ,KAAK6C,SAAS,CAAEyN,iBAAgB/N,SAAS,I,wIAG/BA,GAA+B,IAAtB+N,EAAqB,uDAAJ,GACpC,OACE,sBAAKpO,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,8BACoB4M,EAAe9L,OADnC,OAGA,gCACE,+BACE,sCACA,uCACA,0CAGJ,gCACG8L,EAAe9L,OACZ8L,EAAe5Q,KAAI,SAACyP,EAAU9K,GAAW,IAAD,EACgB8K,EAA9C7S,YAD8B,MACvB,GADuB,IACgB6S,EAAnCC,kBADmB,MACN,GADM,IACgBD,EAAlBE,gBADE,MACS,GADT,EAEtC,OACE,+BACE,6BAAK/S,IACL,6BAAK8S,IACL,6BAAKC,EAAS/K,kBAHPD,MAOb,e,+BASR,IAAD,EAC0CrE,KAAKsC,MAD/C,IACCgO,sBADD,MACkB,GADlB,MACsB/N,eADtB,SAGP,OACE,qBAAKL,GAAG,2BAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAAS+N,e,GArEX3L,aCmBxB4L,G,uKApBX,IACMpH,GADI,IAAI/C,MACCmH,cACf,OACE,qBAAKrL,GAAG,aAAR,SACE,yBAAQwB,UAAU,iEAAlB,iBACS,IACP,mBACE0G,KAAK,yCACLC,OAAO,SACPC,IAAI,aACJ5G,UAAU,aAJZ,uBAMK,IACJyF,W,GAfcxE,a,6BCiCV6L,G,uKA3BX,OACE,qBAAKtO,GAAG,iBAAR,SACE,cAACuO,GAAA,EAAD,CAAQC,GAAG,SAASC,OAAO,KAAKjN,UAAU,SAASK,QAAQ,OAA3D,SACE,sBAAKL,UAAU,YAAf,UACE,cAAC+M,GAAA,EAAOG,MAAR,CAAcxG,KAAK,IAAI1G,UAAU,aAAjC,kBAGA,cAACmN,GAAA,EAAD,CAAKnN,UAAU,UAAf,SACE,cAACoN,GAAA,EAAD,CAAaC,MAAM,OAAOrN,UAAU,aAAaxB,GAAG,oBAApD,SACG8O,GAAOtR,KAAI,SAACuR,EAAO5M,GAAW,IACrB6M,EAAeD,EAAfC,KAAMhQ,EAAS+P,EAAT/P,KACd,OAAKA,EAEH,cAAC4P,GAAA,EAAYK,KAAb,UACE,cAAC,IAAD,CAAMxP,GAAIuP,EAAV,SAAiBhQ,KADImD,GAFP,qB,GAbPM,aCuJdyM,G,kDAxJb,aAAe,IAAD,sBACZ,eACA,IAAM9R,EAAO,CACX,CACEhD,KAAM,QACN+U,IAAK,eACLC,KAAM,UAER,CACEhV,KAAM,WACN+U,IAAK,wBACLC,KAAM,aAER,CACEhV,KAAM,oBACN+U,IAAK,2BACLC,KAAM,sBAER,CACEhV,KAAM,UACN+U,IAAK,iBACLC,KAAM,YAER,CACEhV,KAAM,aACN+U,IAAK,oBACLC,KAAM,eAER,CACEhV,KAAM,iBACN+U,IAAK,wBACLC,KAAM,mBAER,CACEhV,KAAM,OACN+U,IAAK,cACLC,KAAM,SAER,CACEhV,KAAM,OACN+U,IAAK,cACLC,KAAM,SAER,CACEhV,KAAM,SACN+U,IAAK,gBACLC,KAAM,WAER,CACEhV,KAAM,SACN+U,IAAK,gBACLC,KAAM,WAER,CACEhV,KAAM,eACN+U,IAAK,GACLC,KAAM,iBAER,CAAEhV,KAAM,QAAS+U,IAAK,eAAgBC,KAAM,WAC5C1O,MAAK,SAACI,EAAGC,GAAJ,OAAWD,EAAE1G,KAAO2G,EAAE3G,KAAO,GAAK,KA3D7B,OA6DZ,EAAKgG,MAAQ,CAAE/C,MAAO,GAAID,OAAMiS,WAAYjS,GAE5C,EAAKkS,eAAiB,EAAKA,eAAe7O,KAApB,gBACtB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBACnB,EAAK8O,YAAc,EAAKA,YAAY9O,KAAjB,gBAjEP,E,iGAoEI0I,G,oGACOA,EAAMhB,OAArBjO,a,MAAQ,G,WACV4D,KAAK6C,SAAS,CAAEtD,MAAOnD,I,SAC4B4D,KAAKsC,M,IAAtD/C,a,MAAQ,G,MAAID,Y,MAAO,G,MAAIoS,wB,MAAmB,G,EAC5CH,EAAavR,KAAKwR,eAAelS,EAAMC,GACvCoS,EAAyB3R,KAAKwR,eAAeE,EAAkBnS,GACrES,KAAK6C,SAAS,CAAE0O,aAAYI,2B,8IAGa,IAA5BC,EAA2B,uDAAhB,GAAIrS,EAAY,uDAAJ,GACpC,OAAOqS,EAAS9I,QAAO,SAAA+I,GAAa,IAAD,EACXA,EAAdvV,KACR,OAAOiD,SAF0B,MAClB,GADkB,GAEbuS,cAActL,SAASjH,EAAMuS,oB,kCAIzCf,GAAuB,IAAhBa,EAAe,uDAAJ,GAC5B,OACE,cAACjO,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACI,EAAA,EAAD,CAAMN,UAAU,aAAhB,SACE,cAACM,EAAA,EAAKE,QAAN,CACEkE,KAAK,OACLqG,YAAY,QACZrS,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKyR,gBAEnB,qBAAK/N,UAAU,0CAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,UACGqN,EADH,KACYa,EAASpN,OADrB,OAGA,gCACE,+BACE,sCACA,yCACA,2CAGJ,gCACuB,IAApBoN,EAASpN,QACRoN,EAASlS,KAAI,SAACmS,EAAUxN,GAAW,IAAD,EACWwN,EAAnCvV,YADwB,MACjB,GADiB,IACWuV,EAAxBR,WADa,MACP,GADO,IACWQ,EAAdP,YADG,MACI,GADJ,EAEhC,OACE,+BACE,6BAAKhV,IACL,6BACG+U,GACC,mBACEjH,KAAI,wCAAmCiH,GACvC/G,IAAI,aACJD,OAAO,SAHT,mBAQJ,6BACGiH,GACC,cAAC,IAAD,CAAM5N,UAAU,OAAO/B,GAAI2P,EAA3B,sBAdGjN,oB,+BA8BnB,IAAD,EACqBrE,KAAKsC,MAAzBiP,kBADD,MACc,GADd,EAEP,OACE,qBAAKrP,GAAG,eAAR,SACE,qBAAKwB,UAAU,OAAf,SAAuB1D,KAAKgK,YAAY,OAAQuH,W,GAnJ7B5M,aC6EZoN,G,kDA3Eb,aAAe,IAAD,8BACZ,gBAEKzP,MAAQ,CAAE0P,UAAW,GAAIzP,SAAS,GAEvC,EAAK/D,aAAe,EAAKA,aAAamE,KAAlB,gBACpB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKxB,e,2QAILwB,KAAK6C,SAAS,CAAEN,SAAS,I,uBACPjD,EAAKd,e,cAAvBwT,E,gBACAhS,KAAK6C,SAAS,CAAEmP,YAAWzP,SAAS,I,wIAGhCA,GAA0B,IAAjByP,EAAgB,uDAAJ,GAC/B,OACE,sBAAK9P,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,wBACcsO,EAAUxN,OADxB,OAGA,gCACE,+BACE,sCACA,uCACA,+CAGJ,gCACGwN,EAAUxN,OACPwN,EAAUtS,KAAI,SAACuS,EAAU5N,GAAW,IAAD,EACgB4N,EAAzC3V,YADyB,MAClB,GADkB,IACgB2V,EAA9BrC,aADc,MACN,GADM,IACgBqC,EAAlBC,gBADE,MACS,GADT,EAEjC,OACE,+BACE,6BAAK5V,IACL,6BAAKsT,IACL,6BAAKsC,MAHE7N,MAOb,e,+BASR,IAAD,EACoCrE,KAAKsC,MADzC,IACC0P,iBADD,MACa,GADb,MACiBzP,eADjB,SAEP,OACE,qBAAKL,GAAG,gBAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAASyP,e,GApEtBrN,aC0EboN,G,kDAzEb,aAAe,IAAD,8BACZ,gBAEKzP,MAAQ,CAAE6P,YAAa,GAAI5P,SAAS,GAEzC,EAAKjE,eAAiB,EAAKA,eAAeqE,KAApB,gBACtB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAK1B,iB,6QAIL0B,KAAK6C,SAAS,CAAEN,SAAS,I,uBACLjD,EAAKhB,iB,cAAzB6T,E,gBACAnS,KAAK6C,SAAS,CAAEsP,cAAa5P,SAAS,I,wIAGlCA,GAA4B,IAAnB4P,EAAkB,uDAAJ,GACjC,OACE,sBAAKjQ,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,2BACiByO,EAAY3N,OAD7B,OAGA,gCACE,+BACE,sCACA,+CAGJ,gCACG2N,EAAY3N,OACT2N,EAAYzS,KAAI,SAACuS,EAAU5N,GAAW,IAAD,EACE4N,EAA7BhJ,YAD2B,MACpB,GADoB,IACEgJ,EAAlBC,gBADgB,MACL,GADK,EAEnC,OACE,+BACE,6BAAKjJ,IACL,6BAAKiJ,MAFE7N,MAMb,e,+BASR,IAAD,EACsCrE,KAAKsC,MAD3C,IACC6P,mBADD,MACe,GADf,MACmB5P,eADnB,SAEP,OACE,qBAAKL,GAAG,gBAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAAS4P,e,GAlEtBxN,aC8EbyN,G,kDA7Eb,aAAe,IAAD,8BACZ,gBAEK9P,MAAQ,CAAE+P,UAAW,GAAI9P,SAAS,GAEvC,EAAK+P,iBAAmB,EAAKA,iBAAiB3P,KAAtB,gBACxB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKsS,mB,sQAIXtS,KAAK6C,SAAS,CAAEN,SAAS,I,SACDjD,EAAKgT,mB,OAAvBD,E,OACNrS,KAAK6C,SAAS,CAAEwP,YAAW9P,SAAS,I,wIAG1BA,GAA0B,IAAjB8P,EAAgB,uDAAJ,GAC/B,OACE,sBAAKnQ,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,wBACc2O,EAAU7N,OADxB,OAGA,gCACE,+BACE,sCACA,yCACA,8CACA,6CAGJ,gCACG6N,EAAU7N,OACP6N,EAAU3S,KAAI,SAACwS,EAAU7N,GAAW,IAAD,EACmC6N,EAA5D5V,YADyB,MAClB,GADkB,IACmC4V,EAAjDK,eADc,MACJ,GADI,IACmCL,EAAnCM,cADA,MACS,GADT,IACmCN,EAAtBO,oBADb,MAC4B,GAD5B,EAEjC,OACE,+BACE,6BAAKnW,IACL,6BAAKiW,IACL,6BAAKE,IACL,6BAAKD,MAJEnO,MAQb,e,+BASR,IAAD,EACwBrE,KAAKsC,MAA5B+P,EADD,EACCA,UAAW9P,EADZ,EACYA,QACnB,OACE,qBAAKL,GAAG,gBAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAAS8P,e,GAtEtB1N,aCwCb+N,G,kDAvCb,aAAe,IAAD,8BACZ,gBAEKpQ,MAAQ,CAAEqQ,MAAO,GAAIpQ,SAAS,GAEnC,EAAK9D,SAAW,EAAKA,SAASkE,KAAd,gBALJ,E,0LASN3C,KAAKvB,W,8PAIXuB,KAAK6C,SAAS,CAAEN,SAAS,I,SACLjD,EAAKb,W,OAAnBkU,E,OACN3S,KAAK6C,SAAS,CAAE8P,QAAOpQ,SAAS,I,qIAGxB,IAAD,EACoBvC,KAAKsC,MAAxBqQ,EADD,EACCA,MAAOpQ,EADR,EACQA,QACf,OACE,qBAAKL,GAAG,YAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKmG,MAAN,CAAYpG,UAAU,cAAtB,oBAA4CiP,EAAMnO,OAAlD,OACCjC,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,0B,GA7B9BY,a,UCwITiO,G,kDAtIb,aAAe,IAAD,8BACZ,gBAEKtQ,MAAQ,CAAElB,SAAU,GAAIyR,WAAY,GAAIxR,OAAQ,GAAIyR,QAAS,GAAIxR,SAAU,IAEhF,EAAKxC,cAAgB,EAAKA,cAAc6D,KAAnB,gBACrB,EAAK9D,WAAa,EAAKA,WAAW8D,KAAhB,gBAClB,EAAKhE,YAAc,EAAKA,YAAYgE,KAAjB,gBACnB,EAAKoQ,eAAiB,EAAKA,eAAepQ,KAApB,gBACtB,EAAKqQ,aAAe,EAAKA,aAAarQ,KAAlB,gBATR,E,0LAaN3C,KAAKlB,gB,uBACLkB,KAAKnB,a,uBACLmB,KAAKrB,c,kRAIcW,EAAKR,gB,OAAxB+T,E,qBACkBA,E,UAAjBzR,O,MAAW,G,EAClBpB,KAAK6C,SAAS,CAAEzB,WAAUyR,e,+QAIJvT,EAAKT,a,OAArBiU,E,qBACgBA,E,UACd5Q,Q,MADQ,G,GACRA,GACRlC,KAAK6C,SAAS,CAAExB,OAAQa,EAAI4Q,Y,oLAGTzH,G,8EACJjK,EAAaiK,EAAMhB,OAA1BjO,MACR4D,KAAK6C,SAAS,CAAEzB,a,SACVpB,KAAKrB,c,mLAGM0M,G,8EACFhK,EAAWgK,EAAMhB,OAAxBjO,MACR4D,KAAK6C,SAAS,CAAExB,W,SACVrB,KAAKrB,c,8QAI4BqB,KAAKsC,M,IAApClB,gB,MAAW,G,MAAIC,c,MAAS,G,WAC1BrB,KAAK6C,SAAS,CAAEN,SAAS,I,uBACRjD,EAAKX,YAAY,CAAEyC,WAAUC,W,OAA9CC,E,OACNtB,KAAK6C,SAAS,CAAEvB,WAAUiB,SAAS,I,qIAG3B,IAAD,EAC2DvC,KAAKsC,MADhE,IACChB,gBADD,MACY,GADZ,MACgBuR,kBADhB,MAC6B,GAD7B,MACiCC,eADjC,MAC2C,GAD3C,EAC+CvQ,EAD/C,EAC+CA,QAEtD,OACE,qBAAKL,GAAG,WAAR,SACE,cAACyB,EAAA,EAAD,CAAMD,UAAU,cAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UACE,eAACI,EAAA,EAAD,CAAMN,UAAU,aAAhB,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,aAAa,SACbhI,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAK+S,eAJjB,SAKGF,EAAWnT,KAAI,SAAC0B,EAAUiD,GACzB,OACE,wBAAoBjI,MAAOgF,EAA3B,SACGqE,EAAWrE,IADDiD,YAQvB,qBAAKX,UAAU,WAAf,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,aAAa,SACbhI,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKgT,aAJjB,SAKGF,EAAQpT,KAAI,SAAC2B,EAAQgD,GACpB,OACE,wBAAoBjI,MAAOiF,EAAOa,GAAlC,SACGb,EAAO/E,MADG+H,eASzB,eAAC4O,GAAA,EAAD,CAAWvP,UAAU,OAArB,UACGnB,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACoB,IAApBjB,EAASkD,QACTlD,EAAS5B,KAAI,WAA0B,IAAzBwT,EAAwB,uDAAd,GAAI7O,EAAU,yCAOhC6O,EALFnC,aAFkC,MAE1B,GAF0B,IAOhCmC,EAJFvW,WAHkC,MAG5B,GAH4B,IAOhCuW,EAHF7R,cAJkC,MAIzB,GAJyB,IAOhC6R,EAFFC,sBALkC,MAKjB,GALiB,IAOhCD,EADFE,mBANkC,MAMpB,GANoB,EAQpC,OACE,eAACH,GAAA,EAAU9B,KAAX,WACE,cAACxN,EAAA,EAAKmG,MAAN,UACE,mBAAGM,KAAMzN,EAAK0N,OAAO,SAASC,IAAI,aAAlC,SACGyG,MAGL,eAACpN,EAAA,EAAK0P,SAAN,CAAe3P,UAAU,0BAAzB,UACGrC,GAAU,gCAAQA,IADrB,KAEG8R,GAAkB,gCAAQA,OAE7B,cAACxP,EAAA,EAAK2P,KAAN,UAAYF,MAVO/O,sB,GAhHpBM,a,UC8FR4O,G,kDA9Fb,aAAe,IAAD,8BACZ,gBAEKjR,MAAQ,CAAEwQ,QAAS,GAAIvQ,SAAS,GAErC,EAAK1D,WAAa,EAAKA,WAAW8D,KAAhB,gBAClB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKnB,a,gQAIXmB,KAAK6C,SAAS,CAAEN,SAAS,I,SACHjD,EAAKT,a,OAArBiU,E,OACN9S,KAAK6C,SAAS,CAAEiQ,UAASvQ,SAAS,I,wIAGxBA,GAAwB,IAAfuQ,EAAc,uDAAJ,GAC7B,OACE,sBAAK5Q,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,sBACYoP,EAAQtO,OADpB,OAGA,gCACE,+BACE,oCACA,sCACA,0CACA,iDAGJ,gCACGsO,EAAQtO,OACLsO,EAAQpT,KAAI,SAAC2B,EAAQgD,GAAW,IAAD,EAOzBhD,EALFa,UAF2B,MAEtB,GAFsB,IAOzBb,EAJF/E,YAH2B,MAGpB,GAHoB,IAOzB+E,EAHF1E,WAJ2B,MAIrB,GAJqB,IAOzB0E,EAFFD,gBAL2B,MAKhB,GALgB,IAOzBC,EADFwR,kBAN2B,MAMd,GANc,EAQ7B,OACE,+BACE,6BAAK3Q,IACL,6BACE,mBAAGkI,KAAMzN,EAAK0N,OAAO,SAASC,IAAI,aAAlC,SACGhO,MAGL,6BAAK8E,IACL,6BACGyR,EAAWnT,KAAI,SAAC0B,EAAUiD,GACzB,OACE,cAACmP,GAAA,EAAD,CAAmBzP,QAAQ,SAASL,UAAU,kBAA9C,SACGtC,GADSiD,UAXXA,MAoBb,e,+BASR,IAAD,EAC2BrE,KAAKsC,MADhC,IACCwQ,eADD,MACW,GADX,EACevQ,EADf,EACeA,QAEtB,OACE,qBAAKL,GAAG,cAAR,SACE,cAACyB,EAAA,EAAD,CAAMD,UAAU,cAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAASuQ,a,GAxFtBnO,aC+CX8O,G,kDA9Cb,aAAe,IAAD,8BACZ,gBACKnR,MAAQ,CAAErB,OAAQ,IACvB,EAAKyS,gBAAkB,EAAKA,gBAAgB/Q,KAArB,gBAHX,E,0LAON3C,KAAK0T,kB,8QAIUpU,EAAKoU,kB,OAApBzS,E,OACNjB,KAAK6C,SAAS,CAAE5B,W,qIAGR,IAAD,EACiBjB,KAAKsC,MAArBrB,cADD,MACU,GADV,EAGP,OADAH,QAAQ2C,IAAI,SAAUxC,GAEpB,qBAAKiB,GAAG,aAAR,SACE,cAACyB,EAAA,EAAD,CAAMD,UAAU,mBAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKmG,MAAN,CAAYpG,UAAU,cAAtB,qBAA6CzC,EAAOuD,OAApD,OACmB,IAAlBvD,EAAOuD,QACNvD,EAAOvB,KAAI,SAACiU,EAAOtP,GAAW,IACpBnD,EAAcyS,EAAdzS,KAAMvE,EAAQgX,EAARhX,IACd,OACE,cAAC6W,GAAA,EAAD,CAAmBzP,QAAQ,SAASL,UAAU,OAA9C,SACE,mBAEE0G,KAAMzN,EACN0N,OAAO,SACPC,IAAI,aACJ5G,UAAU,cALZ,SAMGxC,GALImD,IAFGA,iB,GA5BLM,aCmFViP,G,kDAjFb,aAAe,IAAD,8BACZ,gBAEKtR,MAAQ,CAAEuR,MAAO,GAAItR,SAAS,GAEnC,EAAKrD,eAAiB,EAAKA,eAAeyD,KAApB,gBACtB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKd,iB,oQAIXc,KAAK6C,SAAS,CAAEN,SAAS,I,SACLjD,EAAKJ,iB,OAAnB2U,E,OACN7T,KAAK6C,SAAS,CAAEgR,QAAOtR,SAAS,I,wIAGtBA,GAAsB,IAAbsR,EAAY,uDAAJ,GAC3B,OACE,sBAAK3R,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,oBAA8DmQ,EAAMrP,OAApE,OACA,gCACE,+BACE,uCACA,6CACA,sCACA,2CAGJ,gCACGqP,EAAMrP,OACHqP,EAAMnU,KAAI,SAACoU,EAAMzP,GAAW,IAAD,EACsCyP,EAAvDC,aADiB,MACT,GADS,IACsCD,EAA3CxX,YADK,MACE,GADF,IACsCwX,EAAhCE,mBADN,MACoB,GADpB,IACsCF,EAAdG,YADxB,MAC+B,GAD/B,EAEzB,OACE,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAK3X,MAJE+H,MAQb,e,+BASR,IAAD,EACiCrE,KAAKsC,MADtC,IACCuR,aADD,MACS,GADT,MACatR,eADb,SAKP,OAHAzB,QAAQ2C,IAAI,UAAWlB,GACvBzB,QAAQ2C,IAAI,QAASoQ,GAGnB,qBAAK3R,GAAG,cAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAAC,EAAD,CAAMhH,OAAQ,MAAOD,IAAG,iBACvBqD,KAAKgK,YAAYzH,EAASsR,gB,GAzEflP,aCsFXuP,G,kDAtFb,aAAe,IAAD,8BACZ,gBAEK5R,MAAQ,CAAE+P,UAAW,GAAI9P,SAAS,GAEvC,EAAKlD,gBAAkB,EAAKA,gBAAgBsD,KAArB,gBACvB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKX,kB,qQAIXW,KAAK6C,SAAS,CAAEN,SAAS,I,SACDjD,EAAKD,kB,OAAvBgT,E,OACNrS,KAAK6C,SAAS,CAAEwP,YAAW9P,SAAS,I,wIAG1BA,GAA0B,IAAjB8P,EAAgB,uDAAJ,GAC/B,OACE,sBAAKnQ,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,wBACc2O,EAAU7N,OADxB,OAGA,gCACE,+BACE,sCACA,6CACA,2CAGJ,gCACG6N,EAAU7N,OACP6N,EAAU3S,KAAI,SAACwS,EAAU7N,GAAW,IAAD,EACiB6N,EAA1C5V,YADyB,MAClB,GADkB,IACiB4V,EAA/BiC,mBADc,MACA,EADA,IACiBjC,EAAdjJ,YADH,MACU,GADV,EAEjC,OACE,+BACE,6BAAK3M,IACL,6BAAK6X,IACL,6BAAKlL,MAHE5E,MAOb,e,+BASR,IAAD,EACwBrE,KAAKsC,MAA5B+P,EADD,EACCA,UAAW9P,EADZ,EACYA,QACnB,OACE,qBAAKL,GAAG,gBAAR,SACE,qBAAKwB,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKmG,MAAN,CAAYpG,UAAU,mBAAtB,6BACA,cAACC,EAAA,EAAK0P,SAAN,CAAe3P,UAAU,mBAAzB,SACE,mBACE0G,KAAI,8CACJE,IAAI,aACJD,OAAO,SAHT,mBAODrK,KAAKgK,YAAYzH,EAAS8P,gB,GA9Eb1N,aC6HbyP,G,kDA1Hb,aAAe,IAAD,8BACZ,gBAEK9R,MAAQ,CAAE/C,MAAO,GAAIJ,aAAc,GAAIkV,mBAAoB,GAAI9R,SAAS,GAE7E,EAAKnD,gBAAkB,EAAKA,gBAAgBuD,KAArB,gBACvB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBACnB,EAAKmG,OAAS,EAAKA,OAAOnG,KAAZ,gBAPF,E,0LAWN3C,KAAKZ,kB,mIAGNiM,GAAQ,IAAD,EACkBA,EAAMhB,OAA5BjO,MAAOmD,OADH,MACW,GADX,EAEZS,KAAK6C,SAAS,CAAEtD,UAFJ,MAGkBS,KAAKsC,MAA3BnD,aACFkV,QAJM,MAGW,GAHX,GAI4BvL,QAAO,SAAAwL,GAAe,IACpDhY,EAAegY,EAAfhY,KAAM8L,EAASkM,EAATlM,KACRmM,GAAWhV,GAAQjD,EAAKwV,cAActL,SAASjH,EAAMuS,eACrD0C,GAAWjV,GAAQ6I,EAAK0J,cAActL,SAASjH,EAAMuS,eAC3D,OAAOyC,GAAYC,KAErBxU,KAAK6C,SAAS,CAAEwR,yB,qKAIhBrU,KAAK6C,SAAS,CAAEN,SAAS,I,EACFvC,KAAKsC,MAApB/C,a,MAAQ,G,WACWD,EAAKF,kB,OAA1BD,E,OACAkV,EAAqBlV,EAAa2J,QAAO,SAAAwL,GAAe,IACpDhY,EAAegY,EAAfhY,KAAM8L,EAASkM,EAATlM,KACRmM,GAAWhV,GAAQjD,EAAKwV,cAActL,SAASjH,EAAMuS,eACrD0C,GAAWjV,GAAQ6I,EAAK0J,cAActL,SAASjH,EAAMuS,eAC3D,OAAOyC,GAAYC,KAErBxU,KAAK6C,SAAS,CAAE1D,eAAckV,qBAAoB9R,SAAS,I,wIAGjDA,GAAmC,IAA1B8R,EAAyB,uDAAJ,GACxC,OACE,sBAAKnS,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,0CAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,mBACS2Q,EAAmB7P,OAD5B,OAGA,gCACE,+BACE,sCACA,sCACA,8CAGJ,gCACG6P,EAAmB7P,OAChB6P,EAAmB3U,KAAI,SAAC+U,EAAgBpQ,GAAW,IAAD,EACKoQ,EAA7CnY,YADwC,MACjC,GADiC,IACKmY,EAAlCrM,YAD6B,MACtB,GADsB,IACKqM,EAAvB9X,WADkB,MACZ,GADY,IACK8X,EAAbpD,WADQ,MACF,GADE,EAEhD,OACE,+BACE,6BACE,mBAAGjH,KAAMzN,EAAK2N,IAAI,aAAaD,OAAO,SAAtC,SACG/N,MAGL,6BAAK8L,IACL,6BACGiJ,GACC,mBACEjH,KAAI,wCAAmCiH,GACvC/G,IAAI,aACJD,OAAO,SAHT,qBATGhG,MAoBb,e,+BASR,IAAD,EAC6CrE,KAAKsC,MADlD,IACC+R,0BADD,MACsB,GADtB,MAC0B9R,eAD1B,SAGP,OACE,qBAAKL,GAAG,OAAR,SACE,sBAAMwB,UAAU,YAAhB,SACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAAC,EAAD,CAAMhH,OAAQ,MAAOD,IAAG,iBACxB,cAACqH,EAAA,EAAD,CAAMN,UAAU,kBAAhB,SACE,cAACM,EAAA,EAAKE,QAAN,CACEkE,KAAK,OACLqG,YAAY,OACZrS,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAK8I,WAElB9I,KAAKgK,YAAYzH,EAAS8R,kB,GAjHxB1P,a,UCHb+P,GAAa,I,QAAIC,GAqHRC,G,kDAlHb,aAAe,IAAD,8BACZ,gBACKtS,MAAQ,CAAEhB,SAAU,GAAIiB,SAAS,GACtC,EAAK5D,YAAc,EAAKA,YAAYgE,KAAjB,gBACnB,EAAKkS,gBAAkB,EAAKA,gBAAgBlS,KAArB,gBAJX,E,wLAQC,S,SACe+R,GAAW/V,YAAY,CAAEyJ,KADxC,W,OACP0M,E,OACAxT,EAAWtB,KAAK6U,gBAAgBC,GACtC9U,KAAK6C,SAAS,CAAEvB,a,8IAGc,IAAhBA,EAAe,uDAAJ,GACzB,OAAOA,EAAS5B,KAAI,WAAmB,IAAlBwT,EAAiB,uDAAP,GAAO,EAC6CA,EAAzEnC,aAD4B,MACpB,GADoB,IAC6CmC,EAA7D6B,YADgB,MACT,GADS,IAC6C7B,EAAlD8B,gBADK,MACM,GADN,IAC6C9B,EAAnC+B,mBADV,MACwB,GADxB,IAC6C/B,EAAjBgC,eAD5B,MACsC,GADtC,EAE9BvY,EACJqY,GAAYD,EAAZ,iCAA6CC,EAASlD,cAAtD,YAAuEiD,GAAS,GAC5E3B,EAAc8B,EAAQlP,QAAQ,MAAO,IAAIA,QAAQ,OAAQ,IAC/D,MAAO,CAAE+K,QAAOpU,MAAKsY,cAAa7B,oB,2EAIpB/H,G,sFACaA,EAAMhB,OAA3BjO,MAAOgM,O,MAAO,G,WAChBpI,KAAK6C,SAAS,CAAEN,SAAS,I,uBACHmS,GAAW/V,YAAY,CAAEyJ,S,cAA/C0M,E,OACAxT,EAAWtB,KAAK6U,gBAAgBC,G,SAChC9U,KAAK6C,SAAS,CAAEvB,WAAUiB,SAAS,I,sIAGjC,IAAD,EAC4BvC,KAAKsC,MADjC,IACChB,gBADD,MACY,GADZ,EACgBiB,EADhB,EACgBA,QAgBvB,OACE,qBAAKL,GAAG,aAAR,SACE,sBAAMwB,UAAU,YAAhB,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,cAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKmG,MAAN,CAAYpG,UAAU,cAAtB,yBAAiDpC,EAASkD,OAA1D,OACA,cAACb,EAAA,EAAK0P,SAAN,CAAe3P,UAAU,mBAAzB,SACE,mBACE0G,KAAI,2CACJE,IAAI,aACJD,OAAO,SAHT,0BAOF,cAACrG,EAAA,EAAD,CAAMN,UAAU,aAAhB,SACE,cAACM,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,aAAa,SACbhI,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAKrB,YAJjB,SA9BE,CACd,CACEvC,MAAO,SACP8E,KAAM,UAER,CACE9E,MAAO,UACP8E,KAAM,WAER,CACE9E,MAAO,cACP8E,KAAM,gBAwBexB,KAAI,SAACyV,EAAQ9Q,GAAW,IACvBnD,EAAgBiU,EAAhBjU,KAAM9E,EAAU+Y,EAAV/Y,MACd,OACE,wBAAoBA,MAAOA,EAA3B,SACG8E,GADUmD,YAQvB,eAAC4O,GAAA,EAAD,CAAWvP,UAAU,OAArB,UACGnB,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACoB,IAApBjB,EAASkD,QACTlD,EAAS5B,KAAI,SAACwT,EAAS7O,GAAW,IAAD,EACsC6O,EAA7DnC,aADuB,MACf,GADe,IACsCmC,EAAjDvW,WADW,MACL,GADK,IACsCuW,EAAvC+B,mBADC,MACa,GADb,IACsC/B,EAArBE,mBADjB,MAC+B,GAD/B,EAE/B,OACE,eAACH,GAAA,EAAU9B,KAAX,WACE,cAACxN,EAAA,EAAKmG,MAAN,UACE,mBAAGM,KAAMzN,EAAK0N,OAAO,SAASC,IAAI,aAAlC,SACGyG,MAGL,cAACpN,EAAA,EAAK0P,SAAN,CAAe3P,UAAU,wBAAzB,SACGuR,IAEH,cAACtR,EAAA,EAAK2P,KAAN,UAAYF,MATO/O,sB,GA7FlBM,aCqBVyQ,G,uKApBX,OACE,qBAAKlT,GAAG,QAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,eAAC2R,EAAA,EAAD,CAAMC,iBAAiB,QAAQ5R,UAAU,gBAAzC,UACE,cAAC6R,EAAA,EAAD,CAAKC,SAAS,QAAQzE,MAAM,QAA5B,SACE,cAAC,EAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,UAAUzE,MAAM,UAA9B,SACE,cAAC,EAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,OAAOzE,MAAM,OAA3B,SACE,cAAC,EAAD,iB,GAbMpM,aCyHL8Q,G,kDApHb,aAAe,IAAD,8BACZ,gBAEKnT,MAAQ,CAAEoT,UAAW,GAAIC,YAAa,GAAIC,UAAW,GAAIC,YAAa,IAE3E,EAAKC,gBAAkB,EAAKA,gBAAgBnT,KAArB,gBACvB,EAAKoT,iBAAmB,EAAKA,iBAAiBpT,KAAtB,gBACxB,EAAKqT,gBAAkB,EAAKA,gBAAgBrT,KAArB,gBACvB,EAAKsT,iBAAmB,EAAKA,iBAAiBtT,KAAtB,gBARZ,E,6MAYN2K,EAAI,IAAIlH,KACR+C,EAAOmE,EAAEC,cACTnE,EAAQvD,EAAQyH,EAAEE,WAAa,GAC/BnE,EAAOxD,EAAQyH,EAAEG,WACjBiI,E,UAAevM,E,YAAQC,E,YAASC,GAChCsM,EAAc3V,KAAK+V,iBAAiB5M,EAAMC,EAAOC,GACvDvI,QAAQ2C,IAAI,CAAEiS,YAAWC,gB,SACnB3V,KAAK6C,SAAS,CAAE6S,YAAWC,gB,wBAEiBrW,EAAKrC,oBAAoB,CACzEkM,OACAC,QACAC,S,wBAHY0D,E,EAAN5D,KAAmB6D,E,EAAP5D,MAAiB6D,E,EAAN5D,KAKzBuM,E,UAAe7I,E,YAAQlH,EAAQmH,G,YAAOnH,EAAQoH,I,UAC1BjN,KAAKiW,iBAAiBlJ,EAAMC,EAAIC,G,QAApD4I,E,OACN/U,QAAQ2C,IAAI,CAAEmS,YAAWC,gBACzB7V,KAAK6C,SAAS,CAAE+S,YAAWC,gB,8IAGZ1M,EAAMC,EAAOC,GAC5B,MAAM,GAAN,OAAU5D,EAAWpJ,EAAO+M,EAAQ,GAAG9M,MAAvC,YAAgD+M,EAAhD,aAAyDF,K,gFAGpCA,EAAMC,EAAOC,G,iFACrB/J,EAAKpC,UAAU,CAAEiM,OAAMC,QAAOC,S,6NAGvBgC,G,sGACLqK,EAAcrK,EAAMhB,OAA3BjO,M,EACoBsZ,EAAU5I,MAAM,K,mBAArC3D,E,KAAMC,E,KAAOC,E,KACdsM,EAAc3V,KAAK+V,iBAAiB5M,EAAM1C,SAAS2C,EAAO,IAAKC,GACrEvI,QAAQ2C,IAAI,CAAEiS,YAAWC,gB,SACnB3V,KAAK6C,SAAS,CAAE6S,YAAWC,gB,uBACiBrW,EAAKrC,oBAAoB,CACzEkM,OACAC,QACAC,S,uBAHY0D,E,EAAN5D,KAAmB6D,E,EAAP5D,MAAiB6D,E,EAAN5D,KAKzBuM,E,UAAe7I,E,YAAQlH,EAAQmH,G,YAAOnH,EAAQoH,I,UAC1BjN,KAAKiW,iBAAiBlJ,EAAMC,EAAIC,G,QAApD4I,E,OACN/U,QAAQ2C,IAAI,CAAEmS,YAAWC,gBACzB7V,KAAK6C,SAAS,CAAE+S,YAAWC,gB,uLAGPxK,G,sGACLuK,EAAcvK,EAAMhB,OAA3BjO,M,EACoBwZ,EAAU9I,MAAM,K,mBAArC3D,E,KAAMC,E,KAAOC,E,cACMrJ,KAAKiW,iBAAiB9M,EAAMC,EAAOC,G,cAAvDwM,E,OACN/U,QAAQ2C,IAAI,CAAEmS,YAAWC,gB,SACnB7V,KAAK6C,SAAS,CAAE+S,YAAWC,gB,wBACiBvW,EAAKtC,oBAAoB,CACzEmM,OACAC,QACAC,S,iBAHY0D,E,EAAN5D,KAAmB6D,E,EAAP5D,MAAiB6D,E,EAAN5D,KAKzBqM,E,UAAe3I,E,YAAQlH,EAAQmH,G,YAAOnH,EAAQoH,IAC9C0I,EAAc3V,KAAK+V,iBAAiBhJ,EAAMC,EAAIC,GACpDnM,QAAQ2C,IAAI,CAAEiS,YAAWC,gBACzB3V,KAAK6C,SAAS,CAAE6S,YAAWC,gB,uIAGnB,IAAD,EACwE3V,KAAKsC,MAD7E,IACCoT,iBADD,MACa,GADb,MACiBC,mBADjB,MAC+B,GAD/B,MACmCC,iBADnC,MAC+C,GAD/C,MACmDC,mBADnD,MACiE,GADjE,EAGP,OACE,qBAAK3T,GAAG,WAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKmG,MAAN,CAAYpG,UAAU,cAAtB,sBACA,eAACM,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYiS,UAAU,YAAtB,UACE,cAAC,EAAD,CAAMtZ,OAAQ,OAAQD,IAAG,yBACzB,eAACqH,EAAA,EAAKmS,MAAN,0BAAyBR,KACzB,cAAC3R,EAAA,EAAKE,QAAN,CACEkE,KAAK,OACLqG,YAAY,aACZ2H,QAAQ,wKACRha,MAAOsZ,EACPrJ,SAAUrM,KAAK8V,qBAGnB,uBACA,eAAC9R,EAAA,EAAKC,MAAN,CAAYiS,UAAU,YAAtB,UACE,cAAC,EAAD,CAAMtZ,OAAQ,OAAQD,IAAG,yBACzB,eAACqH,EAAA,EAAKmS,MAAN,0BAAyBN,KACzB,cAAC7R,EAAA,EAAKE,QAAN,CACEkE,KAAK,OACLqG,YAAY,aACZ2H,QAAQ,wKACRha,MAAOwZ,EACPvJ,SAAUrM,KAAKgW,qC,GAzGZrR,aC0GR0R,G,kDA3Gb,aAAe,IAAD,8BACZ,gBAEK/T,MAAQ,CAAE/C,MAAO,GAAIpC,iBAAkB,GAAImZ,uBAAwB,GAAI/T,SAAS,GAErF,EAAKnF,oBAAsB,EAAKA,oBAAoBuF,KAAzB,gBAC3B,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBACnB,EAAKmG,OAAS,EAAKA,OAAOnG,KAAZ,gBAPF,E,0LAWN3C,KAAK5C,sB,mIAGNiO,GAAQ,IAAD,EACkBA,EAAMhB,OAA5BjO,MAAOmD,OADH,MACW,GADX,EAEZS,KAAK6C,SAAS,CAAEtD,UAFJ,MAGsBS,KAAKsC,MAA/BnF,iBACFmZ,QAJM,MAGe,GAHf,GAIoCxN,QAAO,SAAA2L,GAAmB,IAChErM,EAAkBqM,EAAlBrM,KAAMmO,EAAY9B,EAAZ8B,QACR/B,GAAWjV,GAAQ6I,EAAK0J,cAActL,SAASjH,EAAMuS,eACrD0E,GAAajX,GAAQgX,EAAQzE,cAActL,SAASjH,EAAMuS,eAChE,OAAO0C,GAAYgC,KAErBxW,KAAK6C,SAAS,CAAEyT,6B,yKAIhBtW,KAAK6C,SAAS,CAAEN,SAAS,I,EACFvC,KAAKsC,MAApB/C,a,MAAQ,G,WACeD,EAAKlC,sB,OAA9BD,E,OACAmZ,EAAyBnZ,EAAiB2L,QAAO,SAAA2L,GAAmB,IAChErM,EAAkBqM,EAAlBrM,KAAMmO,EAAY9B,EAAZ8B,QACR/B,GAAWjV,GAAQ6I,EAAK0J,cAActL,SAASjH,EAAMuS,eACrD0E,GAAajX,GAAQgX,EAAQzE,cAActL,SAASjH,EAAMuS,eAChE,OAAO0C,GAAYgC,KAErBxW,KAAK6C,SAAS,CAAE1F,mBAAkBmZ,yBAAwB/T,SAAS,I,wIAGzDA,GAAuC,IAA9B+T,EAA6B,uDAAJ,GAC5C,OACE,sBAAKpU,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,0CAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,gCACsB4S,EAAuB9R,OAD7C,OAGA,gCACE,+BACE,sCACA,sCACA,gDAGJ,gCACG8R,EAAuB9R,OACpB8R,EAAuB5W,KAAI,SAAC+U,EAAgBpQ,GAAW,IAAD,EACLoQ,EAAvCnY,YAD4C,MACrC,GADqC,IACLmY,EAA5BrM,YADiC,MAC1B,GAD0B,IACLqM,EAAjB8B,eADsB,MACZ,GADY,EAEpD,OACE,+BACE,6BAAKja,IACL,6BAAK8L,IACL,6BAAKmO,MAHElS,MAOb,e,+BASR,IAAD,EACiDrE,KAAKsC,MADtD,IACCgU,8BADD,MAC0B,GAD1B,MAC8B/T,eAD9B,SAGP,OACE,qBAAKL,GAAG,mBAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,eAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAAC,EAAD,CAAMhH,OAAQ,MAAOD,IAAG,sBACxB,cAACqH,EAAA,EAAD,CAAMN,UAAU,kBAAhB,SACE,cAACM,EAAA,EAAKE,QAAN,CACEkE,KAAK,OACLqG,YAAY,OACZrS,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAK8I,WAElB9I,KAAKgK,YAAYzH,EAAS+T,gB,GAnGV3R,aCgChB8R,G,uKA1BX,OACE,qBAAKvU,GAAG,UAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,eAAC2R,EAAA,EAAD,CAAMC,iBAAiB,YAAY5R,UAAU,gBAA7C,UACE,cAAC6R,EAAA,EAAD,CAAKC,SAAS,YAAYzE,MAAM,YAAhC,SACE,cAAC,EAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,aAAazE,MAAM,aAAjC,SACE,cAAC,EAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,UAAUzE,MAAM,UAA9B,SACE,cAAC,EAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,aAAazE,MAAM,aAAjC,SACE,cAAC,EAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,SAASzE,MAAM,SAA7B,SACE,cAAC,EAAD,iB,GAnBQpM,aCoCP+R,G,uKAhCX,OACE,qBAAKxU,GAAG,aAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,eAAC2R,EAAA,EAAD,CAAMC,iBAAiB,qBAAqB5R,UAAU,gBAAtD,UACE,cAAC6R,EAAA,EAAD,CAAKC,SAAS,qBAAqBzE,MAAM,sBAAzC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,aAAazE,MAAM,aAAjC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,iBAAiBzE,MAAM,kBAArC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,yBAAyBzE,MAAM,2BAA7C,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,aAAazE,MAAM,aAAjC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,YAAYzE,MAAM,YAAhC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,0BAA0BzE,MAAM,4BAA9C,SACE,cAAC,GAAD,iB,GAzBWpM,aCiEVqM,GA/DA,CACb,CACEE,KAAM,GACNhQ,KAAM,GACNyV,U,uKCbA,OACE,qBAAKzU,GAAG,OAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,cAAC,GAAD,Y,GALSiB,cDiBjB,CACEuM,KAAM,QACNhQ,KAAM,QACNyV,UAAWvB,IAEb,CACElE,KAAM,WACNhQ,KAAM,WACNyV,UAAWlB,IAEb,CACEvE,KAAM,oBACNhQ,KAAM,oBACNyV,UAAWN,IAEb,CACEnF,KAAM,UACNhQ,KAAM,UACNyV,UAAWF,IAEb,CACEvF,KAAM,aACNhQ,KAAM,aACNyV,UAAWD,IAEb,CACExF,KAAM,iBACNhQ,KAAM,iBACNyV,U,kDE3CF,aAAe,IAAD,8BACZ,gBAEKrU,MAAQ,CAAE/C,MAAO,GAAIpB,cAAe,GAAIyY,oBAAqB,GAAIrU,SAAS,GAE/E,EAAKnE,iBAAmB,EAAKA,iBAAiBuE,KAAtB,gBACxB,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBACnB,EAAKmG,OAAS,EAAKA,OAAOnG,KAAZ,gBAPF,E,0LAWN3C,KAAK5B,mB,mIAGNiN,GAAQ,IAAD,EACkBA,EAAMhB,OAA5BjO,MAAOmD,OADH,MACW,GADX,EAEZS,KAAK6C,SAAS,CAAEtD,UAFJ,MAGmBS,KAAKsC,MAA5BnE,cACFyY,QAJM,MAGY,GAHZ,GAI8B9N,QAAO,SAAA+N,GAAiB,IACxDC,EAAYD,EAAZC,QACR,OAAOvX,GAAQuX,EAAQhF,cAActL,SAASjH,EAAMuS,kBAEtD9R,KAAK6C,SAAS,CAAE+T,0B,sKAIhB5W,KAAK6C,SAAS,CAAEN,SAAS,I,EACFvC,KAAKsC,MAApB/C,a,MAAQ,G,WACYD,EAAKlB,mB,OAA3BD,E,OACAyY,EAAsBzY,EAAc2K,QAAO,SAAA+N,GAAiB,IACxDC,EAAYD,EAAZC,QACR,OAAOvX,GAAQuX,EAAQhF,cAActL,SAASjH,EAAMuS,kBAEtD9R,KAAK6C,SAAS,CAAE1E,gBAAeyY,sBAAqBrU,SAAS,I,wIAGnDA,GAAoC,IAA3BqU,EAA0B,uDAAJ,GACzC,OACE,sBAAK1U,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,0CAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,6BACmBkT,EAAoBpS,OADvC,OAGA,gCACE,+BACE,yCACA,4CACA,2CAGJ,gCACGoS,EAAoBpS,OACjBoS,EAAoBlX,KAAI,SAACmX,EAAcxS,GAAW,IAAD,EACMwS,EAA7CC,eADuC,MAC7B,GAD6B,IACMD,EAA/BE,kBADyB,MACZ,GADY,IACMF,EAAdzO,YADQ,MACD,GADC,EAE/C,OACE,+BACE,6BAAK0O,IACL,6BAAKC,IACL,6BAAK3O,MAHE/D,MAOb,e,+BASR,IAAD,EAC8CrE,KAAKsC,MADnD,IACCsU,2BADD,MACuB,GADvB,MAC2BrU,eAD3B,SAGP,OACE,qBAAKL,GAAG,gBAAR,SACE,sBAAMwB,UAAU,YAAhB,SACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACI,EAAA,EAAD,CAAMN,UAAU,aAAhB,SACE,cAACM,EAAA,EAAKE,QAAN,CACEkE,KAAK,OACLqG,YAAY,UACZrS,MAAO4D,KAAKsC,MAAMlG,MAClBiQ,SAAUrM,KAAK8I,WAElB9I,KAAKgK,YAAYzH,EAASqU,kB,GA/FfjS,cF8C1B,CACEuM,KAAM,OACNhQ,KAAM,OACNyV,U,uKG/CA,OACE,qBAAKzU,GAAG,OAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,eAAC2R,EAAA,EAAD,CAAMC,iBAAiB,YAAY5R,UAAU,gBAA7C,UACE,cAAC6R,EAAA,EAAD,CAAKC,SAAS,cAAczE,MAAM,eAAlC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,YAAYzE,MAAM,YAAhC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,YAAYzE,MAAM,YAAhC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,QAAQzE,MAAM,QAA5B,SACE,cAAC,GAAD,iB,GAhBKpM,cHmDjB,CACEuM,KAAM,OACNhQ,KAAM,OACNyV,U,uKIpDA,OACE,qBAAKzU,GAAG,OAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,eAAC2R,EAAA,EAAD,CAAMC,iBAAiB,OAAO5R,UAAU,gBAAxC,UACE,cAAC6R,EAAA,EAAD,CAAKC,SAAS,OAAOzE,MAAM,OAA3B,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,UAAUzE,MAAM,UAA9B,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,SAASzE,MAAM,SAA7B,SACE,cAAC,GAAD,iB,GAbKpM,cJwDjB,CACEuM,KAAM,SACNhQ,KAAM,SACNyV,U,kDK1DF,aAAe,IAAD,8BACZ,gBAEKrU,MAAQ,CAAE0U,UAAW,GAAIzU,SAAS,GAEvC,EAAKvD,mBAAqB,EAAKA,mBAAmB2D,KAAxB,gBAC1B,EAAKqH,YAAc,EAAKA,YAAYrH,KAAjB,gBANP,E,0LAUN3C,KAAKhB,qB,wQAIXgB,KAAK6C,SAAS,CAAEN,SAAS,I,SAEDjD,EAAKN,qB,OAAvBgY,E,OAENhX,KAAK6C,SAAS,CAAEmU,YAAWzU,SAAS,I,wIAG1BA,GAA0B,IAAjByU,EAAgB,uDAAJ,GAC/B,OACE,sBAAK9U,GAAG,QAAR,UACGK,GACC,qBAAKmB,UAAU,cAAf,SACE,cAACG,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGtCxB,GACA,qBAAKmB,UAAU,mCAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,0BAASA,UAAU,mCAAnB,wBACcsT,EAAUxS,OADxB,OAGA,gCACE,+BACE,sCACA,+CAGJ,gCACGwS,EAAUxS,OACPwS,EAAUtX,KAAI,SAACuX,EAAU5S,GAAW,IAAD,EACmB4S,EAA5CA,SAAUC,OADe,MACH,GADG,IACmBD,EAAlBE,gBADD,MACY,GADZ,EAEjC,OACE,+BACE,6BAAKD,IACL,6BAAKC,EAAStX,KAAK,WAFZwE,MAMb,e,+BASR,IAAD,EACoCrE,KAAKsC,MADzC,IACC0U,iBADD,MACa,GADb,MACiBzU,eADjB,SAGP,OACE,qBAAKL,GAAG,SAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,SACE,cAACC,EAAA,EAAKC,KAAN,UAAY5D,KAAKgK,YAAYzH,EAASyU,iB,GAtE/BrS,cL6DnB,CACEuM,KAAM,SACNhQ,KAAM,SACNyV,U,uKM9DA,OACE,qBAAKzU,GAAG,SAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,cAAC2R,EAAA,EAAD,CAAMC,iBAAiB,QAAQ5R,UAAU,gBAAzC,SACE,cAAC6R,EAAA,EAAD,CAAKC,SAAS,QAAQzE,MAAM,QAA5B,SACE,cAAC,GAAD,gB,GAPOpM,cNkEnB,CACEuM,KAAM,eACNhQ,KAAM,eACNyV,U,uKOnEA,OACE,qBAAKzU,GAAG,eAAR,SACE,sBAAMwB,UAAU,iBAAhB,SACE,eAAC2R,EAAA,EAAD,CAAMC,iBAAiB,OAAO5R,UAAU,gBAAxC,UACE,cAAC6R,EAAA,EAAD,CAAKC,SAAS,OAAOzE,MAAM,OAA3B,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,gBAAgBzE,MAAM,kBAApC,SACE,cAAC,GAAD,MAEF,cAACwE,EAAA,EAAD,CAAKC,SAAS,aAAazE,MAAM,aAAjC,SACE,cAAC,GAAD,iB,GAbapM,eCsBZyS,G,uKAnBX,OACE,qBAAK1T,UAAU,MAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,OAAf,SACE,eAAC,IAAD,CAAY2T,SAAS,IAArB,UACE,cAAC,GAAD,IACCrG,GAAOtR,KAAI,SAACuR,EAAO5M,GAAW,IACrB6M,EAAoBD,EAApBC,KAAMyF,EAAc1F,EAAd0F,UACd,OAAO,cAAC,IAAD,CAAmBW,OAAK,EAACpG,KAAI,WAAMA,GAAQyF,UAAWA,GAA1CtS,MAErB,cAAC,GAAD,iB,GAZIM,aCMH4S,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhX,MAAK,YAAkD,IAA/CiX,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.cf01534d.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\nexport const periods = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n","import { baseAPI } from '../configs';\n\nconst endpoints = {\n  banks: {\n    getForexBanks: { url: `${baseAPI}/banks/forex/banks`, method: 'GET' },\n    getForexRates: { method: 'GET', url: `${baseAPI}/banks/forex/rates` },\n    syncForex: { method: 'POST', url: `${baseAPI}/banks/forex/sync` }\n  },\n  calendar: {\n    convertLunarToSolar: { method: 'POST', url: `${baseAPI}/calendar/lunar2solar` },\n    convertSolarToLunar: { method: 'POST', url: `${baseAPI}/calendar/solar2lunar` },\n    getCanChi: { method: 'POST', url: `${baseAPI}/calendar/lunar/can-chi` }\n  },\n  ethnicMinorities: {\n    getEthnicMinorities: { method: 'GET', url: `${baseAPI}/ethnic-minorities` }\n  },\n  finance: {\n    getStockCompanies: { method: 'GET', url: `${baseAPI}/finance/companies` },\n    getStockHighlights: { method: 'POST', url: `${baseAPI}/finance/highlights` },\n    getStockHistory: { method: 'POST', url: `${baseAPI}/finance/history` },\n    getStockPotentials: { method: 'POST', url: `${baseAPI}/finance/potentials` },\n    calculateProfit: { method: 'POST', url: `${baseAPI}/finance/profit` }\n  },\n  government: {\n    getGeneralSecretaries: { method: 'GET', url: `${baseAPI}/government/general-secretaries` },\n    getPresidents: { method: 'GET', url: `${baseAPI}/government/presidents` },\n    getPrimeMinisters: { method: 'GET', url: `${baseAPI}/government/prime-ministers` },\n    getNationalAssemblyChairs: {\n      method: 'GET',\n      url: `${baseAPI}/government/national-assembly/chairs`\n    },\n    getNationalAssemblyMembers: {\n      method: 'GET',\n      url: `${baseAPI}/government/national-assembly/members`\n    },\n    getMinistries: { method: 'GET', url: `${baseAPI}/government/ministries` },\n    getMinisters: { method: 'GET', url: `${baseAPI}/government/ministers` }\n  },\n  licensePlates: {\n    getLicensePlates: { method: 'GET', url: `${baseAPI}/license-plates` }\n  },\n  maps: {\n    getPostalCodes: { method: 'GET', url: `${baseAPI}/maps/postal-codes` },\n    getProvinces: { method: 'GET', url: `${baseAPI}/maps/provinces` },\n    getDistricts: { method: 'GET', url: `${baseAPI}/maps/districts` },\n    getWards: { method: 'GET', url: `${baseAPI}/maps/wards` }\n  },\n  news: {\n    getArticles: { method: 'GET', url: `${baseAPI}/news` },\n    getTrends: { method: 'GET', url: `${baseAPI}/news/trends` },\n    getSources: { method: 'GET', url: `${baseAPI}/news/sources` },\n    getCategories: { method: 'GET', url: `${baseAPI}/news/categories` }\n  },\n  phones: {\n    getPhonesProviders: { method: 'GET', url: `${baseAPI}/phones/providers` }\n  },\n  sports: {\n    getSportsClubs: { method: 'GET', url: `${baseAPI}/sports/clubs` }\n  },\n  technologies: {\n    getTechnologies: { method: 'GET', url: `${baseAPI}/technologies` },\n    getGHNProvinces: { method: 'GET', url: `${baseAPI}/technologies/giaohangnhanh/provinces` }\n  }\n};\n\nexport default endpoints;\n","import endpoints from './apis-configs';\n\nclass APIS {\n  buildQueryString(query = {}) {\n    const keys = Object.keys(query);\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  fetch(endpoint, query = {}, body = {}) {\n    let { url, method } = endpoint;\n    url = `${url}?${this.buildQueryString(query)}`;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(url, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  async getGeneralSecretaries() {\n    const endpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  async getPresidents() {\n    const endpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  async getPrimeMinisters() {\n    const endpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  async getNationalAssemblyChairs() {\n    const endpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  async getNationalAssemblyMembers(no) {\n    const endpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { no });\n  }\n\n  async getMinistries() {\n    const endpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  async getMinisters(ministry) {\n    const endpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { ministry });\n  }\n\n  async getGoogleTrends() {\n    const endpoint = endpoints.news.getTrends;\n    const trends = await this.fetch(endpoint);\n    return trends.map(text => {\n      const url = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  async getSources() {\n    const endpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  async getCategories() {\n    const endpoint = endpoints.news.getCategories;\n    return await this.fetch(endpoint);\n  }\n\n  async getArticles(options = {}) {\n    const { category, source } = options;\n    const endpoint = endpoints.news.getArticles;\n    const { articles = [] } = (await this.fetch(endpoint, { category, source })) || {};\n    return articles;\n  }\n\n  async calculateProfit(buy, sell, volume) {\n    const endpoint = endpoints.finance.calculateProfit;\n    return await this.fetch(endpoint, {}, { buy, sell, volume });\n  }\n\n  async getStockHighlights(from, to) {\n    const endpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, {}, { from, to });\n  }\n\n  async getStockPotentials(from, to) {\n    const endpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, {}, { from, to });\n  }\n\n  async getStockCompanies() {\n    const endpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  async getStockHistory(symbol, from, to) {\n    const endpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, {}, { symbol, from, to });\n  }\n\n  async getBanksForexRates() {\n    const endpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  async getForexBanks() {\n    const endpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  async syncForex(id) {\n    const endpoint = endpoints.banks.syncForex;\n    const { status = '' } = await this.fetch(endpoint, {}, { id });\n    return status;\n  }\n\n  async getPostalCodes() {\n    const endpoint = endpoints.maps.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  async getDistricts() {\n    const endpoint = endpoints.maps.getDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  async getMapsProvinces() {\n    const endpoint = endpoints.maps.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  async getWards() {\n    const endpoint = endpoints.maps.getWards;\n    return await this.fetch(endpoint);\n  }\n\n  async getSportsClubs() {\n    const endpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  async getLicensePlates() {\n    const endpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  async getEthnicMinorities() {\n    const endpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  async getTechnologies() {\n    const endpoint = endpoints.technologies.getTechnologies;\n    return await this.fetch(endpoint);\n  }\n\n  async getPhonesProviders() {\n    const endpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  async getGHNProvinces() {\n    const endpoint = endpoints.technologies.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  async convertLunarToSolar(body = {}) {\n    const endpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, {}, body);\n  }\n\n  async convertSolarToLunar(body = {}) {\n    const endpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, {}, body);\n  }\n\n  async getCanChi(body = {}) {\n    const endpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, {}, body);\n    return canChi;\n  }\n}\n\nconst apis = new APIS();\n\nexport default apis;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass BanksForex extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    this.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n    console.log('currencies', currencies);\n    console.log('currency', currency);\n    console.log('data', data);\n    console.log('loading', loading);\n    return (\n      <div id=\"BanksForex\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n\n              {!loading && (\n                <Form>\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.value}>\n                      {currencies.map((currency, index) => {\n                        return (\n                          <option key={index} value={currency}>\n                            {currency.toUpperCase()}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </Form>\n              )}\n              {!loading && (\n                <div className=\"table-responsive table-container\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                            Bank\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                            Buy\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                            Transfer\n                          </span>\n                        </th>\n                        <th>\n                          <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                            Sell\n                          </span>\n                        </th>\n                        <th>Last Updated At</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.length\n                        ? data.map((item, index) => {\n                            const {\n                              bank = '',\n                              time = '',\n                              buy = {},\n                              transfer = {},\n                              sell = {}\n                            } = item;\n                            return (\n                              <tr key={index}>\n                                <td>{index + 1}</td>\n                                <td>{bank}</td>\n                                <td>{buy[currency] || ''}</td>\n                                <td>{transfer[currency] || ''}</td>\n                                <td>{sell[currency] || ''}</td>\n                                <td>{time}</td>\n                              </tr>\n                            );\n                          })\n                        : ''}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksForex;\n","import { baseGraphQL } from '../configs';\n\nconst graphql = async (key = '', query = '', fallback = {}) => {\n  const body = { query };\n  const url = `${baseGraphQL}`;\n  return new Promise(resolve => {\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        const { data = {} } = res;\n        const result = data[key] || fallback;\n        resolve(result);\n      })\n      .catch(error => {\n        console.error(error);\n        resolve({});\n      });\n  });\n};\n\nconst graphGet = async (key = '', fields = [], options = {}) => {\n  const fieldsString = fields.join(' ');\n  const params = Object.keys(options)\n    .map(key => {\n      let value = options[key];\n      if (key === 'filter') {\n        const filterKeys = Object.keys(options[key]);\n        value = filterKeys.map(_key => {\n          const __value =\n            typeof options[key][_key] === 'string' ? `\"${options[key][_key]}\"` : options[key][_key];\n          return `${_key}: ${__value}`;\n        });\n        value = `{${value}}`;\n      }\n      return `${key}: ${value}`;\n    })\n    .join(',');\n  const paramsString = params ? `(${params})` : '';\n  const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n  const fallback = [];\n  const list = await graphql(key, query, fallback);\n  return list;\n};\n\nconst graphPost = async (key = '', body = {}, fields = []) => {\n  const newRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n    })\n    .join(' ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${newRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphPut = async (key = '', body = {}, fields = []) => {\n  const updatedRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      if (valueType === 'string') return `${key}: \"${value}\"`;\n      return `${key}: ${value}`;\n    })\n    .join(', ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${updatedRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphDelete = async (key = '', id = '', fields = []) => {\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n/**\n * GraphQL Functions\n */\nexport const count = async (prefix = '') => {\n  const key = `${prefix}Count`;\n  const query = `query { ${key} }`;\n  const fallback = 0;\n  const count = await graphql(key, query, fallback);\n  return count;\n};\n\nexport const find = async (prefix = '', fields = [], options = {}) => {\n  const key = `${prefix}Many`;\n  const list = await graphGet(key, fields, options);\n  return list;\n};\n\nexport const add = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}CreateOne`;\n  const item = await graphPost(key, body, fields);\n  return item;\n};\n\nexport const updateById = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}UpdateById`;\n  const item = await graphPut(key, body, fields);\n  return item;\n};\n\nexport const removeById = async (prefix = '', id = '', fields = []) => {\n  const key = `${prefix}RemoveById`;\n  const item = await graphDelete(key, id, fields);\n  return item;\n};\n","export const capitalize = (s = '') => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const addZero = (x = 0) => {\n  return x > 9 ? x.toString() : `0${x}`;\n};\n\nexport const numberFormatter = (x = 0) => {\n  return x\n    .toString()\n    .replace(/,/g, '')\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const processPeriod = period => {\n  const now = Date.now();\n  const oneDay = 1000 * 60 * 60 * 24;\n  const oneYear = oneDay * 365;\n  const oneMonth = oneDay * 30;\n  const oneWeek = oneDay * 7;\n  let unit = oneWeek;\n  if (period.includes('Y')) {\n    unit = oneYear;\n  } else if (period.includes('M')) {\n    unit = oneMonth;\n  } else if (period.includes('W')) {\n    unit = oneWeek;\n  }\n\n  const time = parseInt(period[0]) || 2;\n  const from = now - unit * time;\n\n  return { from, to: now };\n};\n\nexport const deepClone = (o = {}) => {\n  return JSON.parse(JSON.stringify(o));\n};\n\nexport const copyToClipboard = text => {\n  navigator.clipboard\n    .writeText(text)\n    .then(() => {\n      alert('Text copied to clipboard');\n    })\n    .catch(err => {\n      alert('Error in copying text: ', err);\n    });\n};\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis } from '../../services';\nimport { find } from '../../graphql';\nimport { deepClone } from '../../helper';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nclass BanksHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [] };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n    console.log('getFinanceForexRatesData() bank', bank);\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map(rate => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map(item => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data, currency) {\n    const rates = data.map(item => {\n      const { rates } = item;\n      const rate = rates.find(rate => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map(rate => rate.buy);\n    const transferData = rates.map(rate => rate.transfer);\n    const sellData = rates.map(rate => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n    console.log('render() bank', bank);\n    console.log('render() banks', banks);\n    console.log('render() currency', currency);\n    console.log('render() currencies', currencies);\n    console.log('render() data', data);\n    console.log('render() loading', loading);\n    return (\n      <div id=\"BanksHistory\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title>History</Card.Title>\n              <Form className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue={bank} value={this.state.value}>\n                      {banks.map((bank, index) => {\n                        return (\n                          <option key={index} value={bank.name}>\n                            {bank.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control as=\"select\" defaultValue={currency} value={this.state.value}>\n                      {currencies.map((currency, index) => {\n                        return (\n                          <option key={index} value={currency}>\n                            {currency}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksHistory;\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass BanksList extends Component {\n  constructor() {\n    super();\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForex = this.syncForex.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  async syncForex(id) {\n    const message = await apis.syncForex();\n    alert(message);\n  }\n\n  renderTable(loading, banks = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Forex</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', forex = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>{name}</td>\n                          <td>\n                            <a href={forex} target=\"_blank\" rel=\"noreferrer\">\n                              Forex\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForex(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('banks', banks);\n    return (\n      <div id=\"BanksList\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n              {this.renderTable(loading, banks)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BanksList;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass FinanceCompanies extends Component {\n  constructor() {\n    super();\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  renderTable(loading, companies = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Companies ({companies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Group</th>\n                  <th>Industry</th>\n                  <th>Sub Sector</th>\n                  <th>Basic P/E</th>\n                  <th>Diluted P/E</th>\n                  <th>P/B</th>\n                  <th>P/S</th>\n                </tr>\n              </thead>\n              <tbody>\n                {companies.length\n                  ? companies.map((company, index) => {\n                      const {\n                        symbol,\n                        name,\n                        group,\n                        industry,\n                        subsector,\n                        basicPE,\n                        dilutedPE,\n                        PB,\n                        PS\n                      } = company;\n                      return (\n                        <tr key={index}>\n                          <td>{symbol}</td>\n                          <td>{name}</td>\n                          <td>{group}</td>\n                          <td>{industry}</td>\n                          <td>{subsector}</td>\n                          <td>{basicPE}</td>\n                          <td>{dilutedPE}</td>\n                          <td>{PB}</td>\n                          <td>{PS}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('companies', companies);\n    return (\n      <div id=\"FinanceCompanies\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, companies)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceCompanies;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { apis } from '../../services';\nimport { processPeriod } from '../../helper';\n\nclass FinanceHighlights extends Component {\n  constructor() {\n    super();\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0 };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading, highlights = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div className=\"FinanceHighlights\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\"></Card.Title>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.value}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {this.renderTable(loading, highlights)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceHighlights;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../configs';\nimport { addZero, processPeriod, deepClone } from '../../helper';\nimport { apis } from '../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\nclass FinanceHistory extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, data: [], symbols: [], symbol: '', from: 0, to: 0 };\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map(company => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    console.log(labels, datasets);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels, historyData) {\n    const datasets = historyData.map(item => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find(i => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map(item => {\n      const { label = '', data = [] } = item;\n\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data) {\n    let labels = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels = history.map(value => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = addZero(d.getFullYear());\n        const month = addZero(d.getMonth() + 1);\n        const date = addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.value}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div class=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.value}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceHistory;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../configs';\nimport { processPeriod } from '../../helper';\nimport { apis } from '../../services';\n\nclass FinancePotentials extends Component {\n  constructor() {\n    super();\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0 };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading, potentials = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div className=\"FinancePotentials\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.value}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {this.renderTable(loading, potentials)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinancePotentials;\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { numberFormatter } from '../../helper';\n\nclass FinanceProfit extends Component {\n  constructor() {\n    super();\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div className=\"FinanceProfit\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Form onSubmit={this.calculateProfit} className=\"row\">\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Buy\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateBuy}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Sell\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateSell}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Form.Group>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"Volume\"\n                      className=\"text-center\"\n                      value={this.state.value}\n                      onChange={this.updateVolume}></Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-3\">\n                  <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                    Calculate\n                  </Button>\n                </div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(buy * volume)}</div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(sell * volume)}</div>\n                <div className=\"col-sm-3\"></div>\n                <div className=\"col-sm-3 text-center\">{numberFormatter(profit)}</div>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinanceProfit;\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../../configs';\nimport { copyToClipboard } from '../../helper';\n\nclass Code extends Component {\n  render() {\n    const { method, url } = this.props;\n    const api = `${baseAPI}/${url}`;\n    return (\n      <div id=\"Code\" className=\"bg-dark text-white p-3 rounded mb-3\">\n        <span className=\"text-uppercase mr-3\">{method}</span>\n        <span\n          className=\"cursor-pointer\"\n          onClick={() => {\n            copyToClipboard(api);\n          }}>\n          {api}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Code;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Code } from '../globals';\n\nclass GovernmentGeneralSecretaries extends Component {\n  constructor() {\n    super();\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  renderTable(loading, generalSecretaries = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-white text-center\">\n                General Secretaries ({generalSecretaries.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Start</th>\n                  <th>End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {generalSecretaries.length\n                  ? generalSecretaries.map((minister, index) => {\n                      const { name = '', start_date = '', end_date = '' } = minister;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{start_date}</td>\n                          <td>{end_date.toUpperCase()}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n\n    return (\n      <div id=\"GovernmentGeneralSecretaries\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Code method={'GET'} url={`government/general-secretaries`}></Code>\n              {this.renderTable(loading, generalSecretaries)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentGeneralSecretaries;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  renderTable(loading, ministers = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Ministers ({ministers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Start</th>\n                  <th>End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {ministers.length\n                  ? ministers.map((minister, index) => {\n                      const { name = '', start_date = '', end_date = '' } = minister;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{start_date}</td>\n                          <td>{end_date.toUpperCase()}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('ministries', ministries);\n\n    return (\n      <div id=\"GovernmentMinisters\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Form className=\"mt-3 w-100\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"latest\"\n                    value={this.state.value}\n                    onChange={this.updateMinistry}>\n                    {ministries.map((ministry, index) => {\n                      const { short, name } = ministry;\n                      return (\n                        <option key={index} value={short}>\n                          {name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              {this.renderTable(loading, ministers)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentMinisters;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentMinistries extends Component {\n  constructor() {\n    super();\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  renderTable(loading, ministries = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Ministries ({ministries.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Level</th>\n                  <th>Level (EN)</th>\n                  <th>Name</th>\n                  <th>Name (EN)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {ministries.length\n                  ? ministries.map((ministry, index) => {\n                      const { name = '', name_en = '', level = '', level_en = '' } = ministry;\n                      return (\n                        <tr key={index}>\n                          <td>{level}</td>\n                          <td>{level_en}</td>\n                          <td>{name}</td>\n                          <td>{name_en}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('ministries', ministries);\n    return (\n      <div id=\"GovernmentMinistries\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, ministries)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentMinistries;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\nclass GovernmentNationalAssemblyChairs extends Component {\n  constructor() {\n    super();\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  renderTable(loading, chairs = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                National Assembly Chairs ({chairs.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Start</th>\n                  <th>End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {chairs.length\n                  ? chairs.map((minister, index) => {\n                      const { name = '', start_date = '', end_date = '' } = minister;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{start_date}</td>\n                          <td>{end_date.toUpperCase()}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, chairs)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentNationalAssemblyChairs;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\nclass GovernmentNationalAssemblyMembers extends Component {\n  constructor() {\n    super();\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  renderTable(loading, members = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                National Assembly Members ({members.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Start</th>\n                  <th>End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {members.length\n                  ? members.map((member, index) => {\n                      const { name = '', start_date = '', end_date = '' } = member;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{start_date}</td>\n                          <td>{end_date.toUpperCase()}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, members)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentNationalAssemblyMembers;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentPresidents extends Component {\n  constructor() {\n    super();\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  renderTable(loading, presidents = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Presidents ({presidents.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Start</th>\n                  <th>End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {presidents.length\n                  ? presidents.map((minister, index) => {\n                      const { name = '', start_date = '', end_date = '' } = minister;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{start_date}</td>\n                          <td>{end_date.toUpperCase()}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n\n    return (\n      <div id=\"Presidents\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, presidents)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentPresidents;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GovernmentPrimeMinisters extends Component {\n  constructor() {\n    super();\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  renderTable(loading, primeMinisters = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white bg-danger text-center\">\n                Prime Ministers ({primeMinisters.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Start</th>\n                  <th>End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {primeMinisters.length\n                  ? primeMinisters.map((minister, index) => {\n                      const { name = '', start_date = '', end_date = '' } = minister;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{start_date}</td>\n                          <td>{end_date.toUpperCase()}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n\n    return (\n      <div id=\"GovernmentPrimeMinisters\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, primeMinisters)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GovernmentPrimeMinisters;\n","import React, { Component } from 'react';\n\nclass HomeFooter extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"HomeFooter\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default HomeFooter;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nimport routes from '../../routers';\n\nclass HomeNavigation extends Component {\n  render() {\n    return (\n      <div id=\"HomeNavigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" className=\"shadow\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"ml-auto\">\n              <NavDropdown title=\"APIs\" className=\"text-white\" id=\"apis-nav-dropdown\">\n                {routes.map((route, index) => {\n                  const { path, text } = route;\n                  if (!text) return '';\n                  return (\n                    <NavDropdown.Item key={index}>\n                      <Link to={path}>{text}</Link>\n                    </NavDropdown.Item>\n                  );\n                })}\n              </NavDropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default HomeNavigation;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\nclass HomePackages extends Component {\n  constructor() {\n    super();\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#lunar-calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: 'vnapis#maps',\n        docs: '/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = { query: '', apis, filterAPIs: apis };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages = [], query = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title, packages = []) {\n    return (\n      <Card className=\"shadow\">\n        <Card.Body>\n          <Form className=\"w-100 mb-3\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Query\"\n              value={this.state.value}\n              onChange={this.updateQuery}></Form.Control>\n          </Form>\n          <div className=\"table-responsive table-container h-60vh\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                {title} ({packages.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Package</th>\n                  <th>Docs</th>\n                </tr>\n              </thead>\n              <tbody>\n                {packages.length !== 0 &&\n                  packages.map((_package, index) => {\n                    const { name = '', npm = '', docs = '' } = _package;\n                    return (\n                      <tr key={index}>\n                        <td>{name}</td>\n                        <td>\n                          {npm && (\n                            <a\n                              href={`https://www.npmjs.com/package/${npm}`}\n                              rel=\"noreferrer\"\n                              target=\"_blank\">\n                              npm\n                            </a>\n                          )}\n                        </td>\n                        <td>\n                          {docs && (\n                            <Link className=\"ml-1\" to={docs}>\n                              Docs\n                            </Link>\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"HomePackages\">\n        <div className=\"mt-3\">{this.renderTable('APIs', filterAPIs)}</div>\n      </div>\n    );\n  }\n}\n\nexport default HomePackages;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsDistricts extends Component {\n  constructor() {\n    super();\n\n    this.state = { districts: [], loading: true };\n\n    this.getDistricts = this.getDistricts.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getDistricts();\n  }\n\n  async getDistricts() {\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts();\n    await this.setState({ districts, loading: false });\n  }\n\n  renderTable(loading, districts = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Districts ({districts.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Level</th>\n                  <th>Province</th>\n                </tr>\n              </thead>\n              <tbody>\n                {districts.length\n                  ? districts.map((district, index) => {\n                      const { name = '', level = '', province = '' } = district;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{level}</td>\n                          <td>{province}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { districts = [], loading = true } = this.state;\n    return (\n      <div id=\"MapsDistricts\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, districts)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsDistricts;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsDistricts extends Component {\n  constructor() {\n    super();\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  renderTable(loading, postalCodes = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Postal Codes ({postalCodes.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Code</th>\n                  <th>Province</th>\n                </tr>\n              </thead>\n              <tbody>\n                {postalCodes.length\n                  ? postalCodes.map((district, index) => {\n                      const { code = '', province = '' } = district;\n                      return (\n                        <tr key={index}>\n                          <td>{code}</td>\n                          <td>{province}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    return (\n      <div id=\"MapsDistricts\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, postalCodes)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsDistricts;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsProvinces extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n  }\n\n  async getMapsProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getMapsProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  renderTable(loading, provinces = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Provinces ({provinces.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Capital</th>\n                  <th>Macro Region</th>\n                  <th>Region</th>\n                </tr>\n              </thead>\n              <tbody>\n                {provinces.length\n                  ? provinces.map((province, index) => {\n                      const { name = '', capital = '', region = '', macro_region = '' } = province;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{capital}</td>\n                          <td>{macro_region}</td>\n                          <td>{region}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    return (\n      <div id=\"MapsProvinces\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>{this.renderTable(loading, provinces)}</Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsProvinces;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass MapsWards extends Component {\n  constructor() {\n    super();\n\n    this.state = { wards: [], loading: true };\n\n    this.getWards = this.getWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWards();\n  }\n\n  async getWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    return (\n      <div id=\"MapsWards\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Wards ({wards.length})</Card.Title>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapsWards;\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\nimport { capitalize } from '../../helper';\n\nclass NewsFeed extends Component {\n  constructor() {\n    super();\n\n    this.state = { category: '', categories: [], source: '', sources: [], articles: [] };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.value}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.value}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default NewsFeed;\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass NewsSources extends Component {\n  constructor() {\n    super();\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading, sources = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category, index) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default NewsSources;\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass NewsTrends extends Component {\n  constructor() {\n    super();\n    this.state = { trends: [] };\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n    console.log('render', trends);\n    return (\n      <div id=\"NewsTrends\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default NewsTrends;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { Code } from '../globals';\nimport { apis } from '../../services';\n\nclass SportsClubs extends Component {\n  constructor() {\n    super();\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  renderTable(loading, clubs = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">Clubs ({clubs.length})</caption>\n              <thead>\n                <tr>\n                  <th>Sport</th>\n                  <th>Competition</th>\n                  <th>City</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {clubs.length\n                  ? clubs.map((club, index) => {\n                      const { sport = '', name = '', competition = '', city = '' } = club;\n                      return (\n                        <tr key={index}>\n                          <td>{sport}</td>\n                          <td>{competition}</td>\n                          <td>{city}</td>\n                          <td>{name}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n    console.log('loading', loading);\n    console.log('clubs', clubs);\n\n    return (\n      <div id=\"SportsClubs\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Code method={'GET'} url={`sports/clubs`}></Code>\n              {this.renderTable(loading, clubs)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SportsClubs;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nclass GiaoHangNhanh extends Component {\n  constructor() {\n    super();\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  renderTable(loading, provinces = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Provinces ({provinces.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Province ID</th>\n                  <th>Code</th>\n                </tr>\n              </thead>\n              <tbody>\n                {provinces.length\n                  ? provinces.map((province, index) => {\n                      const { name = '', province_id = 0, code = '' } = province;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{province_id}</td>\n                          <td>{code}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    return (\n      <div id=\"GiaoHangNhanh\">\n        <div className=\"mt-3 w-100\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center mb-3\">Giao Hang Nhanh</Card.Title>\n              <Card.Subtitle className=\"text-center mb-3\">\n                <a\n                  href={`https://www.npmjs.com/package/giaohangnhanh`}\n                  rel=\"noreferrer\"\n                  target=\"_blank\">\n                  npm\n                </a>\n              </Card.Subtitle>\n              {this.renderTable(loading, provinces)}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GiaoHangNhanh;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../services';\n\nimport { Code } from '../globals';\n\nclass List extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading, filterTechnologies = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                List ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"List\">\n        <main className=\"container\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>\n                <Code method={'GET'} url={`technologies`}></Code>\n                <Form className=\"mt-3 mb-3 w-100\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Type\"\n                    value={this.state.value}\n                    onChange={this.filter}></Form.Control>\n                </Form>\n                {this.renderTable(loading, filterTechnologies)}\n              </Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\nimport VietceteraClient from 'vietcetera';\n\nconst vietcetera = new VietceteraClient();\n\nclass Vietcetera extends Component {\n  constructor() {\n    super();\n    this.state = { articles: [], loading: false };\n    this.getArticles = this.getArticles.bind(this);\n    this.processArticles = this.processArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    this.setState({ articles });\n  }\n\n  processArticles(articles = []) {\n    return articles.map((article = {}) => {\n      const { title = '', slug = '', language = '', publishDate = '', excerpt = '' } = article;\n      const url =\n        language && slug ? `https://vietcetera.com/${language.toLowerCase()}/${slug}` : '';\n      const description = excerpt.replace('<p>', '').replace('</p>', '');\n      return { title, url, publishDate, description };\n    });\n  }\n\n  async getArticles(event) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const basicArticles = await vietcetera.getArticles({ type });\n    const articles = this.processArticles(basicArticles);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\">\n        <main className=\"container\">\n          <Card className=\"shadow mt-3\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n              <Card.Subtitle className=\"text-center mb-3\">\n                <a\n                  href={`https://www.npmjs.com/package/vietcetera`}\n                  rel=\"noreferrer\"\n                  target=\"_blank\">\n                  vietcetera\n                </a>\n              </Card.Subtitle>\n              <Form className=\"mt-3 w-100\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"latest\"\n                    value={this.state.value}\n                    onChange={this.getArticles}>\n                    {options.map((option, index) => {\n                      const { text, value } = option;\n                      return (\n                        <option key={index} value={value}>\n                          {text}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article, index) => {\n                    const { title = '', url = '', publishDate = '', description = '' } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"small text-muted mb-1\">\n                          {publishDate}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Vietcetera;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { BanksForex, BanksHistory, BanksList } from '../components';\n\nclass Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"forex\" className=\"nav-justified\">\n            <Tab eventKey=\"forex\" title=\"Forex\">\n              <BanksForex></BanksForex>\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <BanksHistory></BanksHistory>\n            </Tab>\n            <Tab eventKey=\"list\" title=\"List\">\n              <BanksList></BanksList>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Banks;\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../configs';\nimport { addZero, capitalize } from '../helper';\nimport { apis } from '../services';\n\nimport { Code } from '../components';\n\nclass Calendar extends Component {\n  constructor() {\n    super();\n\n    this.state = { solarDate: '', solarString: '', lunarDate: '', lunarString: '' };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = addZero(d.getMonth() + 1);\n    const date = addZero(d.getDate());\n    const solarDate = `${year}-${month}-${date}`;\n    const solarString = this.buildSolarString(year, month, date);\n    console.log({ solarDate, solarString });\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar({\n      year,\n      month,\n      date\n    });\n    const lunarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n    console.log({ lunarDate, lunarString });\n    this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year, month, date) {\n    return `${capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year, month, date) {\n    return await apis.getCanChi({ year, month, date });\n  }\n\n  async updateSolarDate(event) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n    console.log({ solarDate, solarString });\n    await this.setState({ solarDate, solarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar({\n      year,\n      month,\n      date\n    });\n    const lunarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n    console.log({ lunarDate, lunarString });\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n    console.log({ lunarDate, lunarString });\n    await this.setState({ lunarDate, lunarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar({\n      year,\n      month,\n      date\n    });\n    const solarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n    console.log({ solarDate, solarString });\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"Calendar\">\n        <main className=\"container mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">Calendar</Card.Title>\n              <Form>\n                <Form.Group controlId=\"SolarDate\">\n                  <Code method={'POST'} url={`calendar/solar2lunar`}></Code>\n                  <Form.Label>Solar Date: {solarString}</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"Solar Date\"\n                    pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                    value={solarDate}\n                    onChange={this.updateSolarDate}\n                  />\n                </Form.Group>\n                <hr></hr>\n                <Form.Group controlId=\"LunarDate\">\n                  <Code method={'POST'} url={`calendar/lunar2solar`}></Code>\n                  <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"Lunar Date\"\n                    pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                    value={lunarDate}\n                    onChange={this.updateLunarDate}\n                  />\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nimport { Code } from '../components';\n\nclass EthnicMinorities extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', ethnicMinorities: [], filterEthnicMinorities: [], loading: true };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  renderTable(loading, filterEthnicMinorities = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Ethnic Minorities ({filterEthnicMinorities.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Type (EN)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterEthnicMinorities.length\n                  ? filterEthnicMinorities.map((ethnicMinority, index) => {\n                      const { name = '', type = '', type_en = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>{name}</td>\n                          <td>{type}</td>\n                          <td>{type_en}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    return (\n      <div id=\"EthnicMinorities\">\n        <main className=\"container mt-3\">\n          <Card className=\"shadow w-100\">\n            <Card.Body>\n              <Code method={'GET'} url={`ethnic-minorities`}></Code>\n              <Form className=\"mt-3 mb-3 w-100\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Type\"\n                  value={this.state.value}\n                  onChange={this.filter}></Form.Control>\n              </Form>\n              {this.renderTable(loading, filterEthnicMinorities)}\n            </Card.Body>\n          </Card>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default EthnicMinorities;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport {\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit\n} from '../components';\n\nclass Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"companies\" className=\"nav-justified\">\n            <Tab eventKey=\"companies\" title=\"Companies\">\n              <FinanceCompanies></FinanceCompanies>\n            </Tab>\n            <Tab eventKey=\"highlights\" title=\"Highlights\">\n              <FinanceHighlights></FinanceHighlights>\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <FinanceHistory></FinanceHistory>\n            </Tab>\n            <Tab eventKey=\"potentials\" title=\"Potentials\">\n              <FinancePotentials></FinancePotentials>\n            </Tab>\n            <Tab eventKey=\"profit\" title=\"Profit\">\n              <FinanceProfit></FinanceProfit>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Finance;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport {\n  GovernmentGeneralSecretaries,\n  GovernmentMinisters,\n  GovernmentMinistries,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters\n} from '../components';\n\nclass Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"generalSecretaries\" className=\"nav-justified\">\n            <Tab eventKey=\"generalSecretaries\" title=\"General Secretaries\">\n              <GovernmentGeneralSecretaries></GovernmentGeneralSecretaries>\n            </Tab>\n            <Tab eventKey=\"presidents\" title=\"Presidents\">\n              <GovernmentPresidents></GovernmentPresidents>\n            </Tab>\n            <Tab eventKey=\"primeMinisters\" title=\"Prime Ministers\">\n              <GovernmentPrimeMinisters></GovernmentPrimeMinisters>\n            </Tab>\n            <Tab eventKey=\"nationalAssemblyChairs\" title=\"National Assembly Chairs\">\n              <GovernmentNationalAssemblyChairs></GovernmentNationalAssemblyChairs>\n            </Tab>\n            <Tab eventKey=\"ministries\" title=\"Ministries\">\n              <GovernmentMinistries></GovernmentMinistries>\n            </Tab>\n            <Tab eventKey=\"ministers\" title=\"Ministers\">\n              <GovernmentMinisters></GovernmentMinisters>\n            </Tab>\n            <Tab eventKey=\"nationalAssemblyMembers\" title=\"National Assembly Members\">\n              <GovernmentNationalAssemblyMembers></GovernmentNationalAssemblyMembers>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Government;\n","import {\n  Banks,\n  Calendar,\n  EthnicMinorities,\n  Finance,\n  Government,\n  Home,\n  LicensePlates,\n  Maps,\n  News,\n  Phones,\n  Sports,\n  Technologies\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates\n  },\n  {\n    path: 'maps',\n    text: 'Maps',\n    component: Maps\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\n\nimport { HomePackages } from '../components';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div id=\"Home\">\n        <main className=\"container mt-3\">\n          <HomePackages></HomePackages>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nclass LicensePlates extends Component {\n  constructor() {\n    super();\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  renderTable(loading, filterLicensePlates = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-60vh\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                License Plates ({filterLicensePlates.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>License</th>\n                  <th>Definition</th>\n                  <th>Type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterLicensePlates.length\n                  ? filterLicensePlates.map((licensePlate, index) => {\n                      const { license = '', definition = '', type = '' } = licensePlate;\n                      return (\n                        <tr key={index}>\n                          <td>{license}</td>\n                          <td>{definition}</td>\n                          <td>{type}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n\n    return (\n      <div id=\"LicensePlates\">\n        <main className=\"container\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>\n                <Form className=\"mb-3 w-100\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"License\"\n                    value={this.state.value}\n                    onChange={this.filter}></Form.Control>\n                </Form>\n                {this.renderTable(loading, filterLicensePlates)}\n              </Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default LicensePlates;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { MapsDistricts, MapsPostalCodes, MapsProvinces, MapsWards } from '../components';\n\nclass Maps extends Component {\n  render() {\n    return (\n      <div id=\"Maps\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"provinces\" className=\"nav-justified\">\n            <Tab eventKey=\"postalCodes\" title=\"Postal Codes\">\n              <MapsPostalCodes></MapsPostalCodes>\n            </Tab>\n            <Tab eventKey=\"provinces\" title=\"Provinces\">\n              <MapsProvinces></MapsProvinces>\n            </Tab>\n            <Tab eventKey=\"districts\" title=\"Districts\">\n              <MapsDistricts></MapsDistricts>\n            </Tab>\n            <Tab eventKey=\"wards\" title=\"Wards\">\n              <MapsWards></MapsWards>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Maps;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { NewsFeed, NewsSources, NewsTrends } from '../components';\n\nclass News extends Component {\n  render() {\n    return (\n      <div id=\"News\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"feed\" className=\"nav-justified\">\n            <Tab eventKey=\"feed\" title=\"Feed\">\n              <NewsFeed></NewsFeed>\n            </Tab>\n            <Tab eventKey=\"sources\" title=\"Sources\">\n              <NewsSources></NewsSources>\n            </Tab>\n            <Tab eventKey=\"trends\" title=\"Trends\">\n              <NewsTrends></NewsTrends>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default News;\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../services';\n\nclass Phones extends Component {\n  constructor() {\n    super();\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading, providers = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"Phones\">\n        <main className=\"container mt-3\">\n          <div className=\"mt-3 w-100\">\n            <Card className=\"shadow\">\n              <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n            </Card>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Phones;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { SportsClubs } from '../components';\n\nclass Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"clubs\" className=\"nav-justified\">\n            <Tab eventKey=\"clubs\" title=\"Clubs\">\n              <SportsClubs></SportsClubs>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Sports;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { List, GiaoHangNhanh, Vietcetera } from '../components';\n\nclass Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\">\n        <main className=\"container mt-3\">\n          <Tabs defaultActiveKey=\"list\" className=\"nav-justified\">\n            <Tab eventKey=\"list\" title=\"List\">\n              <List></List>\n            </Tab>\n            <Tab eventKey=\"giaoHangNhanh\" title=\"Giao Hang Nhanh\">\n              <GiaoHangNhanh></GiaoHangNhanh>\n            </Tab>\n            <Tab eventKey=\"vietcetera\" title=\"Vietcetera\">\n              <Vietcetera></Vietcetera>\n            </Tab>\n          </Tabs>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Technologies;\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { HomeFooter, HomeNavigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"pb-5\">\n          <div className=\"pb-5\">\n            <HashRouter basename=\"/\">\n              <HomeNavigation></HomeNavigation>\n              {routes.map((route, index) => {\n                const { path, component } = route;\n                return <Route key={index} exact path={`/${path}`} component={component}></Route>;\n              })}\n              <HomeFooter></HomeFooter>\n            </HashRouter>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}