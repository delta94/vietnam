{"version":3,"sources":["configs/index.ts","services/index.ts","services/apis.ts","pages/demo/banks/Forex.tsx","graphql/index.ts","helper/index.ts","pages/demo/banks/History.tsx","pages/demo/banks/List.tsx","pages/demo/calendar/Converter.tsx","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","components/Navigation.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/LicensePlates.tsx","pages/docs/Maps.tsx","pages/docs/News.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Technologies.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/maps/Districts.tsx","pages/demo/maps/PostalCodes.tsx","pages/demo/maps/Provinces.tsx","pages/demo/maps/Wards.tsx","pages/demo/news/Feed.tsx","routers/index.ts","pages/demo/news/Sources.tsx","pages/demo/news/Trends.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/sports/Clubs.tsx","pages/demo/technologies/APIs.tsx","pages/demo/technologies/GiaoHangNhanh.tsx","pages/demo/technologies/Vietcetera.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","periods","label","value","months","name","short","endpoints","banks","getForexBanks","id","path","url","demo","method","request","headers","key","query","body","response","200","schema","type","description","example","400","message","getForexRates","syncForexRates","required","calendar","convertLunarToSolar","convertSolarToLunar","getCanChi","ethnicMinorities","getEthnicMinorities","finance","getStockCompanies","getStockHistory","getStockHighlights","getStockPotentials","calculateProfit","government","getGeneralSecretaries","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","getMinistries","getMinisters","licensePlates","getLicensePlates","maps","getMapsPostalCodes","getMapsProvinces","getMapsDistricts","getMapsWards","news","getArticles","getTrends","getSources","getCategories","phones","getPhonesPrefixes","getPhonesProviders","sports","getSportsClubs","technologies","getTechnologies","getGHNProvinces","getVietceteraArticles","apis","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","no","ministry","trends","text","encodeURI","category","source","articles","buy","sell","volume","profit","from","to","symbol","data","currencies","currency","bank","status","province_id","year","month","date","canChi","BanksForex","props","state","loading","sortBy","sortDir","getBanksForexRates","bind","sort","setState","by","dir","a","b","aBuy","bBuy","aSell","bSell","aTransfer","transfer","bTransfer","className","Card","Body","Spinner","animation","variant","Form","Group","Control","as","defaultValue","index","toUpperCase","onClick","item","time","Component","graphql","fallback","result","graphGet","fields","fieldsString","params","_key","__value","paramsString","list","find","prefix","capitalize","s","charAt","slice","addZero","x","numberFormatter","replace","processPeriod","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","deepClone","o","parse","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","getFinanceForexRatesData","processRates","filter","rates","rate","code","labels","hour","minute","datasets","buyData","transferData","sellData","lines","assign","Title","BanksList","renderTable","alert","href","target","rel","Button","CalendarConverter","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getFullYear","getMonth","monthString","getDate","dateString","yyyy","mm","dd","event","split","controlId","Label","placeholder","pattern","onChange","API","api","navigator","clipboard","writeText","err","stack","CURL","buildDataRaw","trim","dataRaw","header","lastFlag","Table","caption","rows","rowConfigs","emptyRowsText","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","renderAPIs","renderRequest","renderResponses","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","title","cardIndex","group","values","Footer","Navigation","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","route","navigation","Banks","Calendar","Docs","renderSidebar","scrollTo","targetID","log","colors","get","post","color","toLowerCase","groups","EthnicMinorities","Finance","Government","LicensePlates","Maps","News","Phones","Sports","Technologies","EthnicMinoritiesList","filterEthnicMinorities","ethnicMinority","type_en","typeFlag","typeEnFlag","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","highlight","startDate","industry","subsector","low","latest","latestDate","min","minDate","max","maxDate","diff","diffToMin","diffToMax","median","average","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","history","i","close","_labels","timestamp","concat","array","indexOf","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","Home","npm","docs","filterAPIs","externalPackages","filterExternalPackages","filterPackages","updateQuery","packages","_package","LicensePlatesList","filterLicensePlates","licensePlate","license","MapsDistricts","provinces","districts","updateProvince","province","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","wards","NewsFeed","categories","sources","updateCategory","updateSource","ListGroup","article","dateTimeString","Subtitle","Text","component","Badge","getGoogleTrends","trend","prefixes","providers","provider","_provider","clubs","filterTechnologies","technology","nameFlag","option","publishDate","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94510810.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n\ninterface IPeriod {\n  label: string;\n  value: string;\n}\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\ninterface IMonth {\n  name: string;\n  short: string;\n}\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'maps'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport interface IEndpoints {\n  banks: IBanksEndpoints;\n  calendar: ICalendarEndpoints;\n  ethnicMinorities: IEthnicMinoritiesEndpoints;\n  finance: IFinanceEndpoints;\n  government: IGovernmentEndpoints;\n  licensePlates: ILicensePlatesEndpoints;\n  maps: IMapsEndpoints;\n  news: INewsEndpoints;\n  phones: IPhonesEndpoints;\n  sports: ISportsEndpoints;\n  technologies: ITechnologiesEndpoints;\n}\n\ninterface IBanksEndpoints {\n  getForexBanks: IEndpoint;\n  getForexRates: IEndpoint;\n  syncForexRates: IEndpoint;\n}\ninterface ICalendarEndpoints {\n  convertLunarToSolar: IEndpoint;\n  convertSolarToLunar: IEndpoint;\n  getCanChi: IEndpoint;\n}\ninterface IEthnicMinoritiesEndpoints {\n  getEthnicMinorities: IEndpoint;\n}\ninterface IFinanceEndpoints {\n  getStockCompanies: IEndpoint;\n  getStockHistory: IEndpoint;\n  getStockHighlights: IEndpoint;\n  getStockPotentials: IEndpoint;\n  calculateProfit: IEndpoint;\n}\ninterface IGovernmentEndpoints {\n  getGeneralSecretaries: IEndpoint;\n  getPresidents: IEndpoint;\n  getPrimeMinisters: IEndpoint;\n  getNationalAssemblyChairs: IEndpoint;\n  getNationalAssemblyMembers: IEndpoint;\n  getMinistries: IEndpoint;\n  getMinisters: IEndpoint;\n}\ninterface ILicensePlatesEndpoints {\n  getLicensePlates: IEndpoint;\n}\ninterface IMapsEndpoints {\n  getMapsPostalCodes: IEndpoint;\n  getMapsProvinces: IEndpoint;\n  getMapsDistricts: IEndpoint;\n  getMapsWards: IEndpoint;\n}\ninterface INewsEndpoints {\n  getArticles: IEndpoint;\n  getTrends: IEndpoint;\n  getSources: IEndpoint;\n  getCategories: IEndpoint;\n}\ninterface IPhonesEndpoints {\n  getPhonesPrefixes: IEndpoint;\n  getPhonesProviders: IEndpoint;\n}\ninterface ISportsEndpoints {\n  getSportsClubs: IEndpoint;\n}\ninterface ITechnologiesEndpoints {\n  getTechnologies: IEndpoint;\n  getGHNProvinces: IEndpoint;\n  getVietceteraArticles: IEndpoint;\n}\n\nexport interface IEndpoint {\n  id: string;\n  name: string;\n  path: string;\n  url: string;\n  demo: string;\n  method: string;\n  request: IEndpointRequest;\n  response: IEndpointResponse;\n}\n\nexport interface IEndpointRequest {\n  headers?: Array<IEndpointRequestHeader>;\n  query: Array<IEndpointRequestQuery>;\n  body: Array<IEndpointRequestBody>;\n}\n\ninterface IEndpointRequestHeader {\n  key: string;\n  value: string;\n}\n\ninterface IEndpointRequestQuery {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointRequestBody {\n  name: string;\n  type: string;\n  required: boolean;\n  description: string;\n}\n\ninterface IEndpointResponse {\n  200: IEndpointResponseDetails;\n  400: IEndpointResponseDetails;\n}\n\ninterface IEndpointResponseDetails {\n  schema: Array<IEndpointResponseSchema>;\n  example: any;\n}\n\ninterface IEndpointResponseSchema {\n  name: string;\n  type: string;\n  description: string;\n}\n\nexport const endpoints: IEndpoints = {\n  banks: {\n    getForexBanks: {\n      id: 'getForexBanks',\n      name: 'Get Forex Banks',\n      path: '/banks/forex/banks',\n      url: `${baseAPI}/banks/forex/banks`,\n      demo: 'banks-list',\n      method: 'GET',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getForexRates: {\n      id: 'getForexRates',\n      name: 'Get Forex Rates',\n      method: 'GET',\n      path: '/banks/forex/rates',\n      url: `${baseAPI}/banks/forex/rates`,\n      demo: 'banks-forex',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'currencies', type: 'Array<string>', description: '' },\n            { name: 'data', type: 'Array<Rates>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    syncForexRates: {\n      id: 'syncForexRates',\n      name: 'Sync Forex Rates',\n      method: 'POST',\n      path: '/banks/forex/sync',\n      url: `${baseAPI}/banks/forex/sync`,\n      demo: 'banks-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'id', required: true, type: 'string', description: '' }]\n      },\n      response: {\n        200: { schema: [{ name: 'status', type: 'string', description: '' }], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  calendar: {\n    convertLunarToSolar: {\n      id: 'convertLunarToSolar',\n      name: 'Convert Lunar Date to Solar Date',\n      method: 'POST',\n      path: '/calendar/lunar2solar',\n      url: `${baseAPI}/calendar/lunar2solar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    convertSolarToLunar: {\n      id: 'convertSolarToLunar',\n      name: 'Convert Solar Date to Lunar Date',\n      method: 'POST',\n      path: '/calendar/solar2lunar',\n      url: `${baseAPI}/calendar/solar2lunar`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getCanChi: {\n      id: 'getCanChi',\n      name: 'Get Can Chi of Lunar Date',\n      method: 'POST',\n      path: '/calendar/lunar/can-chi',\n      url: `${baseAPI}/calendar/lunar/can-chi`,\n      demo: 'calendar-converter',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'year', required: true, type: 'number', description: '' },\n          { name: 'month', required: true, type: 'number', description: '' },\n          { name: 'date', required: true, type: 'number', description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [{ name: 'canChi', type: 'string', description: '' }], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  ethnicMinorities: {\n    getEthnicMinorities: {\n      id: 'getEthnicMinorities',\n      name: 'Get Ethnic Minorities',\n      method: 'GET',\n      path: '/ethnic-minorities',\n      url: `${baseAPI}/ethnic-minorities`,\n      demo: 'ethnic-minorities-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_en', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  finance: {\n    getStockCompanies: {\n      id: 'getStockCompanies',\n      name: 'Get Listed Companies',\n      method: 'GET',\n      path: '/finance/companies',\n      url: `${baseAPI}/finance/companies`,\n      demo: 'finance-companies',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'market', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'supersector', type: 'string', description: '' },\n            { name: 'sector', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'listingDate', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockHistory: {\n      id: 'getStockHistory',\n      name: 'Get Stock History',\n      method: 'POST',\n      path: '/finance/history',\n      url: `${baseAPI}/finance/history`,\n      demo: 'finance-history',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'symbol', type: 'string', required: true, description: '' },\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'symbol', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'group', type: 'string', description: '' },\n            { name: 'industry', type: 'string', description: '' },\n            { name: 'subsector', type: 'string', description: '' },\n            { name: 'history', type: 'Array<Date>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockHighlights: {\n      id: 'getStockHighlights',\n      name: 'Get Stock Highlights',\n      method: 'POST',\n      path: '/finance/highlights',\n      url: `${baseAPI}/finance/highlights`,\n      demo: 'finance-highlights',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getStockPotentials: {\n      id: 'getStockPotentials',\n      name: 'Get Stock Potentials',\n      method: 'POST',\n      path: '/finance/potentials',\n      url: `${baseAPI}/finance/potentials`,\n      demo: 'finance-potentials',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'from', type: 'number', required: true, description: '' },\n          { name: 'to', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    calculateProfit: {\n      id: 'calculateProfit',\n      name: 'Calculate Profit',\n      method: 'POST',\n      path: '/finance/profit',\n      url: `${baseAPI}/finance/profit`,\n      demo: 'finance-profit',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [\n          { name: 'buy', type: 'number', required: true, description: '' },\n          { name: 'sell', type: 'number', required: true, description: '' },\n          { name: 'volume', type: 'number', required: true, description: '' }\n        ]\n      },\n      response: {\n        200: { schema: [{ name: 'profit', type: 'number', description: '' }], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  government: {\n    getGeneralSecretaries: {\n      id: 'getGeneralSecretaries',\n      name: 'Get General Secretaries',\n      method: 'GET',\n      path: '/government/general-secretaries',\n      url: `${baseAPI}/government/general-secretaries`,\n      demo: 'government-general-secretaries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPresidents: {\n      id: 'getPresidents',\n      name: 'Get Presidents',\n      method: 'GET',\n      path: '/government/presidents',\n      url: `${baseAPI}/government/presidents`,\n      demo: 'government-presidents',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPrimeMinisters: {\n      id: 'getPrimeMinisters',\n      name: 'Get Prime Ministers',\n      method: 'GET',\n      path: '/government/prime-ministers',\n      url: `${baseAPI}/government/prime-ministers`,\n      demo: 'government-prime-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getNationalAssemblyChairs: {\n      id: 'getNationalAssemblyChairs',\n      name: 'Get National Assembly Chairs',\n      method: 'GET',\n      path: '/government/national-assembly/chairs',\n      url: `${baseAPI}/government/national-assembly/chairs`,\n      demo: 'government-national-assembly-chairs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getNationalAssemblyMembers: {\n      id: 'getNationalAssemblyMembers',\n      name: 'Get National Assembly Members',\n      method: 'GET',\n      path: '/government/national-assembly/members',\n      url: `${baseAPI}/government/national-assembly/members`,\n      demo: 'government-national-assembly-members',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'no', type: 'number', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'no', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'date_of_birth', type: 'string', description: '' },\n            { name: 'city_of_birth', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'degree', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'district', type: 'string', description: '' },\n            { name: 'percentage', type: 'number', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMinistries: {\n      id: 'getMinistries',\n      name: 'Get Ministries',\n      method: 'GET',\n      path: '/government/ministries',\n      url: `${baseAPI}/government/ministries`,\n      demo: 'government-ministries',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'name_en', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMinisters: {\n      id: 'getMinisters',\n      name: 'Get Ministers',\n      method: 'GET',\n      path: '/government/ministers',\n      url: `${baseAPI}/government/ministers`,\n      demo: 'government-ministers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'title_en', type: 'number', description: '' },\n            { name: 'title_short', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'gender', type: 'string', description: '' },\n            { name: 'gender_en', type: 'string', description: '' },\n            { name: 'start_date', type: 'string', description: '' },\n            { name: 'end_date', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  licensePlates: {\n    getLicensePlates: {\n      id: 'getLicensePlates',\n      name: 'Get License Plates',\n      method: 'GET',\n      path: '/license-plates',\n      url: `${baseAPI}/license-plates`,\n      demo: 'license-plates-list',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'license', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'license', type: 'string', description: '' },\n            { name: 'definition', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  maps: {\n    getMapsPostalCodes: {\n      id: 'getMapsPostalCodes',\n      name: 'Get Postal Codes',\n      method: 'GET',\n      path: '/maps/postal-codes',\n      url: `${baseAPI}/maps/postal-codes`,\n      demo: 'maps-postal-codes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'code', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsProvinces: {\n      id: 'getMapsProvinces',\n      name: 'Get Provinces',\n      method: 'GET',\n      path: '/maps/provinces',\n      url: `${baseAPI}/maps/provinces`,\n      demo: 'maps-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'level_en', type: 'string', required: false, description: '' },\n          { name: 'macro_region_en', type: 'string', required: false, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'province_id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'capital', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'macro_region', type: 'string', description: '' },\n            { name: 'macro_region_en', type: 'string', description: '' },\n            { name: 'region', type: 'string', description: '' },\n            { name: 'region_en', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsDistricts: {\n      id: 'getMapsDistricts',\n      name: 'Get Districts',\n      method: 'GET',\n      path: '/maps/districts',\n      url: `${baseAPI}/maps/districts`,\n      demo: 'maps-districts',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'level', type: 'string', description: '' },\n            { name: 'level_en', type: 'string', description: '' },\n            { name: 'province', type: 'string', description: '' },\n            { name: 'province_id', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getMapsWards: {\n      id: 'getMapsWards',\n      name: 'Get Wards',\n      method: 'GET',\n      path: '/maps/wards',\n      url: `${baseAPI}/maps/wards`,\n      demo: 'maps-wards',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: { schema: [], example: {} },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  news: {\n    getArticles: {\n      id: 'getArticles',\n      name: 'Get Articles',\n      method: 'GET',\n      path: '/news',\n      url: `${baseAPI}/news`,\n      demo: 'news-feed',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [\n          { name: 'category', type: 'string', required: true, description: '' },\n          { name: 'source', type: 'string', required: true, description: '' }\n        ],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'source', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' },\n            { name: 'pubDate', type: 'string', description: '' },\n            { name: 'date', type: 'string', description: '' },\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hours', type: 'number', description: '' },\n            { name: 'minutes', type: 'number', description: '' },\n            { name: 'seconds', type: 'number', description: '' },\n            { name: 'timestamp', type: 'number', description: '' },\n            { name: 'dateTimeString', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getTrends: {\n      id: 'getTrends',\n      name: 'Get (Google) Trends',\n      method: 'GET',\n      path: '/news/trends',\n      url: `${baseAPI}/news/trends`,\n      demo: 'news-trends',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'year', type: 'number', description: '' },\n            { name: 'month', type: 'number', description: '' },\n            { name: 'date', type: 'number', description: '' },\n            { name: 'hour', type: 'number', description: '' },\n            { name: 'trends', type: 'Array<string>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getSources: {\n      id: 'getSources',\n      name: 'Get Sources',\n      method: 'GET',\n      path: '/news/sources',\n      url: `${baseAPI}/news/sources`,\n      demo: 'news-sources',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'category', type: 'string', description: '' },\n            { name: 'categories', type: 'Array<string>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getCategories: {\n      id: 'getCategories',\n      name: 'Get Categories',\n      method: 'GET',\n      path: '/news/categories',\n      url: `${baseAPI}/news/categories`,\n      demo: 'news-categories',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  phones: {\n    getPhonesPrefixes: {\n      id: 'getPhonesPrefixes',\n      name: 'Get Phone Prefixes',\n      method: 'GET',\n      path: '/phones/prefixes',\n      url: `${baseAPI}/phones/prefixes`,\n      demo: 'phones-prefixes',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'string', description: '' },\n            { name: 'prefix', type: 'string', description: '' },\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'provider_id', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getPhonesProviders: {\n      id: 'getPhonesProviders',\n      name: 'Get Phone Providers',\n      method: 'GET',\n      path: '/phones/providers',\n      url: `${baseAPI}/phones/providers`,\n      demo: 'phones-providers',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'provider', type: 'string', description: '' },\n            { name: 'prefixes', type: 'Array<string>', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  sports: {\n    getSportsClubs: {\n      id: 'getSportsClubs',\n      name: 'Get Sports Clubs',\n      method: 'GET',\n      path: '/sports/clubs',\n      url: `${baseAPI}/sports/clubs`,\n      demo: 'sports-clubs',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'sport', type: 'string', description: '' },\n            { name: 'sport_en', type: 'string', description: '' },\n            { name: 'competition', type: 'string', description: '' },\n            { name: 'city', type: 'string', description: '' },\n            { name: 'name', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  },\n  technologies: {\n    getTechnologies: {\n      id: 'getTechnologies',\n      name: 'Get Public APIs',\n      method: 'GET',\n      path: '/technologies',\n      url: `${baseAPI}/technologies`,\n      demo: 'technologies-apis',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'type', type: 'string', description: '' },\n            { name: 'type_id', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'npm', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getGHNProvinces: {\n      id: 'getGHNProvinces',\n      name: 'GHN - Get Provinces',\n      method: 'GET',\n      path: '/technologies/giaohangnhanh/provinces',\n      url: `${baseAPI}/technologies/giaohangnhanh/provinces`,\n      demo: 'technologies-ghn-provinces',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'province_id', type: 'number', description: '' },\n            { name: 'name', type: 'string', description: '' },\n            { name: 'code', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    },\n    getVietceteraArticles: {\n      id: 'getVietceteraArticles',\n      name: 'Get Vietcetera Articles',\n      method: 'GET',\n      path: '/technologies/vietcetera',\n      url: `${baseAPI}/technologies/vietcetera`,\n      demo: 'technologies-vietcetera',\n      request: {\n        headers: [{ key: 'Content-Type', value: 'application/json' }],\n        query: [{ name: 'type', type: 'string', required: false, description: '' }],\n        body: []\n      },\n      response: {\n        200: {\n          schema: [\n            { name: 'title', type: 'string', description: '' },\n            { name: 'url', type: 'string', description: '' },\n            { name: 'publishDate', type: 'string', description: '' },\n            { name: 'description', type: 'string', description: '' }\n          ],\n          example: {}\n        },\n        400: {\n          schema: [{ name: 'message', type: 'string', description: '' }],\n          example: { message: 'string' }\n        }\n      }\n    }\n  }\n};\n","import APIS from './apis';\n\nconst apis = new APIS();\n\nexport { apis };\n","import { endpoints, IEndpoint } from '../configs';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  buildQueryString(query: any = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  async getGeneralSecretaries() {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  async getPresidents() {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  async getPrimeMinisters() {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  async getNationalAssemblyChairs() {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  async getNationalAssemblyMembers(no: number) {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  async getMinistries() {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  async getMinisters(ministry: string) {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  async getGoogleTrends() {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  async getSources() {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  async getCategories() {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    return await this.fetch(endpoint);\n  }\n\n  async getArticles(options: any = {}) {\n    const { category, source } = options;\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  async calculateProfit(buy: number, sell: number, volume: number) {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  async getStockHighlights(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  async getStockPotentials(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  async getStockCompanies() {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  async getStockHistory(symbol: string, from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { query: {}, body: { symbol, from, to } });\n  }\n\n  async getBanksForexRates() {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  async getForexBanks() {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const banks = await this.fetch(endpoint);\n    const { name: bank = '' } = banks[0] || {};\n    return { bank, banks };\n  }\n\n  async syncForexRates(id: string) {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  async getMapsPostalCodes() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  async getMapsProvinces() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  async getMapsDistricts(province_id: string) {\n    const endpoint: IEndpoint = endpoints.maps.getMapsDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  async getMapsWards() {\n    const endpoint: IEndpoint = endpoints.maps.getMapsWards;\n    return await this.fetch(endpoint);\n  }\n\n  async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  async getLicensePlates() {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  async getEthnicMinorities() {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  async getTechnologies() {\n    const endpoint: IEndpoint = endpoints.technologies.getTechnologies;\n    return await this.fetch(endpoint);\n  }\n\n  async getPhonesProviders() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  async getPhonesPrefixes() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  async getGHNProvinces() {\n    const endpoint: IEndpoint = endpoints.technologies.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  async convertLunarToSolar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  async convertSolarToLunar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  async getCanChi(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  async getVietceteraArticles(type: string) {\n    const endpoint: IEndpoint = endpoints.technologies.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksForexProps {}\n\ninterface IBanksForexState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nexport default class BanksForex extends Component<IBanksForexProps, IBanksForexState> {\n  constructor(props: IBanksForexProps) {\n    super(props);\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buy') {\n      data.sort((a, b) => {\n        const aBuy = a.buy[currency] || 0;\n        const bBuy = b.buy[currency] || 0;\n        return dir * (aBuy > bBuy ? 1 : -1);\n      });\n    } else if (by === 'sell') {\n      data.sort((a, b) => {\n        const aSell = a.sell[currency] || 0;\n        const bSell = b.sell[currency] || 0;\n        return dir * (aSell > bSell ? 1 : -1);\n      });\n    } else if (by === 'transfer') {\n      data.sort((a, b) => {\n        const aTransfer = a.transfer[currency] || 0;\n        const bTransfer = b.transfer[currency] || 0;\n        return dir * (aTransfer > bTransfer ? 1 : -1);\n      });\n    }\n\n    this.setState({ data });\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && (\n              <Form>\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue=\"currency\" value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency.toUpperCase()}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n            )}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buy')}>\n                          Buy\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('transfer')}>\n                          Transfer\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sell')}>\n                          Sell\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const { bank = '', time = '', buy = {}, transfer = {}, sell = {} } = item;\n                          return (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buy[currency] || ''}</td>\n                              <td>{transfer[currency] || ''}</td>\n                              <td>{sell[currency] || ''}</td>\n                              <td>{time}</td>\n                            </tr>\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nconst graphql = async (key = '', query = '', fallback = {}): Promise<any> => {\n  const body = { query };\n  const url = `${baseGraphQL}`;\n  return new Promise(resolve => {\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        const { data = {} } = res;\n        const result = data[key] || fallback;\n        resolve(result);\n      })\n      .catch(error => {\n        console.error(error);\n        resolve({});\n      });\n  });\n};\n\nconst graphGet = async (key: string, fields: Array<string> = [], options: any = {}) => {\n  const fieldsString = fields.join(' ');\n  const params = Object.keys(options)\n    .map(key => {\n      let value = options[key];\n      if (key === 'filter') {\n        const filterKeys = Object.keys(options[key]);\n        value = filterKeys.map(_key => {\n          const __value =\n            typeof options[key][_key] === 'string' ? `\"${options[key][_key]}\"` : options[key][_key];\n          return `${_key}: ${__value}`;\n        });\n        value = `{${value}}`;\n      }\n      return `${key}: ${value}`;\n    })\n    .join(',');\n  const paramsString = params ? `(${params})` : '';\n  const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n  const fallback: Array<any> = [];\n  const list = await graphql(key, query, fallback);\n  return list;\n};\n\nconst graphPost = async (key: string, body: any = {}, fields = []) => {\n  const newRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n    })\n    .join(' ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${newRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphPut = async (key: string, body: any = {}, fields = []) => {\n  const updatedRecord = Object.keys(body)\n    .filter(key => {\n      const value = body[key];\n      return !Array.isArray(value) || !Array.isArray(value);\n    })\n    .map(key => {\n      const value = body[key];\n      const valueType = typeof value;\n      if (valueType === 'string') return `${key}: \"${value}\"`;\n      return `${key}: ${value}`;\n    })\n    .join(', ');\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation {\n    ${key}( record: { ${updatedRecord} } )\n    { record { ${fieldsString} } }\n  }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n\nconst graphDelete = async (key = '', id = '', fields = []) => {\n  const fieldsString = fields.join(' ');\n  const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n  const fallback = {};\n  const { record = {} } = await graphql(key, mutation, fallback);\n  return record;\n};\n/**\n * GraphQL Functions\n */\nexport const count = async (prefix = '') => {\n  const key = `${prefix}Count`;\n  const query = `query { ${key} }`;\n  const fallback = 0;\n  const count = await graphql(key, query, fallback);\n  return count;\n};\n\nexport const find = async (prefix = '', fields: Array<string> = [], options = {}) => {\n  const key = `${prefix}Many`;\n  const list = await graphGet(key, fields, options);\n  return list;\n};\n\nexport const add = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}CreateOne`;\n  const item = await graphPost(key, body, fields);\n  return item;\n};\n\nexport const updateById = async (prefix = '', body = {}, fields = []) => {\n  const key = `${prefix}UpdateById`;\n  const item = await graphPut(key, body, fields);\n  return item;\n};\n\nexport const removeById = async (prefix = '', id = '', fields = []) => {\n  const key = `${prefix}RemoveById`;\n  const item = await graphDelete(key, id, fields);\n  return item;\n};\n","export const capitalize = (s = '') => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const addZero = (x = 0) => {\n  return x > 9 ? x.toString() : `0${x}`;\n};\n\nexport const numberFormatter = (x = 0) => {\n  return x\n    .toString()\n    .replace(/,/g, '')\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const processPeriod = (period: string) => {\n  const now = Date.now();\n  const oneDay = 1000 * 60 * 60 * 24;\n  const oneYear = oneDay * 365;\n  const oneMonth = oneDay * 30;\n  const oneWeek = oneDay * 7;\n  let unit = oneWeek;\n  if (period.includes('Y')) {\n    unit = oneYear;\n  } else if (period.includes('M')) {\n    unit = oneMonth;\n  } else if (period.includes('W')) {\n    unit = oneWeek;\n  }\n\n  const time = parseInt(period[0]) || 2;\n  const from = now - unit * time;\n\n  return { from, to: now };\n};\n\nexport const deepClone = (o = {}) => {\n  return JSON.parse(JSON.stringify(o));\n};\n\nexport const copyToClipboard = (text: string) => {\n  navigator.clipboard\n    .writeText(text)\n    .then(() => {\n      alert('Text copied to clipboard');\n    })\n    .catch((err: Error) => {\n      alert(`Error in copying text: ${err.stack}`);\n    });\n};\n\nexport const buildQueryString = (query: any = {}) => {\n  const keys = Object.keys(query);\n  if (!keys.length) return '';\n  return keys.map((key: string) => `${key}=${(query[key] || '').toString()}`).join('&');\n};\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis } from '../../../services';\nimport { find } from '../../../graphql';\nimport { deepClone } from '../../../helper';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getFinanceForexRatesData = this.getFinanceForexRatesData.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getFinanceForexRatesData();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { bank, banks } = await apis.getForexBanks();\n    this.setState({ bank, banks, loading: false });\n  }\n\n  async getFinanceForexRatesData() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.bank}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank.name}>\n                          {bank.name}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<any>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    this.setState({ loading: true });\n    const { banks = [] } = await apis.getForexBanks();\n    this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string) {\n    const message = await apis.syncForexRates(id);\n    alert(message);\n  }\n\n  renderTable(loading: boolean, banks: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Sync</th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      const { id = '', name = '', url = '' } = bank;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(id)}>\n                              Sync\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { addZero, capitalize } from '../../../helper';\nimport { apis } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = { solarDate: '', solarString: '', lunarDate: '', lunarString: '' };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = addZero(month);\n    const date = d.getDate();\n    const dateString = addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    return await apis.getCanChi(year, month, date);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${addZero(mm)}-${addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { copyToClipboard } from '../helper';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n}\n\nexport default class API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n}\n\nexport default class Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data'\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\n\nexport default class Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  renderResponses(response: any) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">\n                    <b>{name}</b>\n                  </h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\" className=\"mt-3\">\n        <h2 className=\"mb-3\">\n          <b>{header}</b>\n        </h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavigationProps {}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path, text } = route;\n                      return (\n                        <Dropdown.Item key={index} href={'#' + path}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <Doc group={'banks'} header={'Banks'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <Doc group={'calendar'} header={'Calendar'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { capitalize } from '../../helper';\nimport { endpoints, IEndpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {}\n\ninterface IDocsState {\n  endpoints: IEndpoints;\n}\n\nexport default class Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollTo = this.scrollTo.bind(this);\n  }\n\n  scrollTo(id: string) {\n    const targetID = `#${id}`;\n    console.log(targetID);\n    // const top: number = $(targetID).offset().top;\n    // console.log(targetID, top);\n    // $('#DocsMain').animate({ scrollTo: top }, 1500);\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      apis.length > 0 && (\n        <table>\n          <tbody>\n            {apis.map((api, index) => {\n              const { id, method, name } = api;\n              const color = colors[method.toLowerCase()];\n              return (\n                <tr onClick={() => this.scrollTo(id)} key={index} className=\"cursor-pointer\">\n                  <td className=\"pt-1 pb-1 pr-3\">\n                    <small className={color}>\n                      <b>{method}</b>\n                    </small>\n                  </td>\n                  <td>\n                    <small>{name}</small>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]);\n      return { group, apis };\n    });\n\n    console.log(list);\n    return (\n      <div id=\"DocSidebar\">\n        {list.length > 0 &&\n          list.map((item, index) => {\n            const { group, apis } = item;\n            const header = capitalize(group);\n            return (\n              <div key={index}>\n                <p className=\"m-0\">{header}</p>\n                {this.renderTable(apis)}\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        {/* <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div id=\"DocsMain\" className=\"h-80vh overflow-auto\">\n              \n            </div>\n          </div>\n        </div> */}\n        {groups.length > 0 &&\n          groups.map((group: string, index: number) => {\n            return <Doc key={index} group={group} header={capitalize(group)}></Doc>;\n          })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <Doc group={'ethnicMinorities'} header={'Ethnic Minorities'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <Doc group={'finance'} header={'Finance'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <Doc group={'government'} header={'Government'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\ninterface ILicensePlatesProps {}\n\ninterface ILicensePlatesState {}\n\nexport default class LicensePlates extends Component<ILicensePlatesProps, ILicensePlatesState> {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <Doc group={'licensePlates'} header={'License Plates'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"Maps\" className=\"container\">\n        <Doc group={'maps'} header={'Maps'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <Doc group={'news'} header={'News'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <Doc group={'phones'} header={'Phones'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <Doc group={'sports'} header={'Sports'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Doc } from '../../components';\n\nexport default class Technologies extends Component {\n  render() {\n    return (\n      <div id=\"Technologies\" className=\"container\">\n        <Doc group={'technologies'} header={'Technologies'}></Doc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis } from '../../../services';\nimport { processPeriod } from '../../../helper';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { addZero, processPeriod, deepClone } from '../../../helper';\nimport { apis } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<any> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = addZero(d.getFullYear());\n        const month = addZero(d.getMonth() + 1);\n        const date = addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div className=\"FinanceHistory\">\n        <div className=\"w-100 mt-3\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n              <Form className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"1M\"\n                      value={this.state.period}\n                      onChange={this.updatePeriod}>\n                      {periods.map((period, index) => {\n                        const { label, value } = period;\n                        return (\n                          <option key={index} value={value}>\n                            {label}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"VIC\"\n                      value={this.state.symbol}\n                      onChange={this.updateSymbol}>\n                      {symbols.map((symbol, index) => {\n                        return (\n                          <option key={index} value={symbol}>\n                            {symbol}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </Form>\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { processPeriod } from '../../../helper';\nimport { apis } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { numberFormatter } from '../../../helper';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.ministry}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\ninterface IHomeProps {}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n  externalPackages: Array<any>;\n  filterExternalPackages: Array<any>;\n}\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis = [\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#lunar-calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'maps',\n        npm: 'vnapis#maps',\n        docs: '/maps'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      {\n        name: 'technologies',\n        npm: '',\n        docs: '/technologies'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis,\n      externalPackages: [],\n      filterExternalPackages: []\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title: string, packages: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container h-60vh\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"w-100 mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n    this.getMapsDistricts = this.getMapsDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getMapsDistricts();\n  }\n\n  async getMapsProvinces() {\n    const provinces = await apis.getMapsProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getMapsDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getMapsDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getMapsDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={this.state.province_id}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getMapsPostalCodes = this.getMapsPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsPostalCodes();\n  }\n\n  async getMapsPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getMapsPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getMapsProvinces = this.getMapsProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsProvinces();\n  }\n\n  async getMapsProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getMapsProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getMapsWards = this.getMapsWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMapsWards();\n  }\n\n  async getMapsWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getMapsWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Wards ({wards.length})</Card.Title>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { capitalize } from '../../../helper';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.category}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.source}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Maps\n  Maps,\n  MapsPostalCodes,\n  MapsProvinces,\n  MapsDistricts,\n  MapsWards,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Technologies\n  Technologies,\n  APIs,\n  GiaoHangNhanh,\n  Vietcetera\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'maps',\n    text: 'Maps',\n    component: Maps,\n    navigation: true\n  },\n  {\n    path: 'maps-postal-codes',\n    text: 'Maps Postal Codes',\n    component: MapsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'maps-provinces',\n    text: 'Maps Provinces',\n    component: MapsProvinces,\n    navigation: false\n  },\n  {\n    path: 'maps-districts',\n    text: 'Maps Districts',\n    component: MapsDistricts,\n    navigation: false\n  },\n  {\n    path: 'maps-wards',\n    text: 'Maps Wards',\n    component: MapsWards,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'technologies',\n    text: 'Technologies',\n    component: Technologies,\n    navigation: true\n  },\n  {\n    path: 'technologies-apis',\n    text: 'Technologies APIs',\n    component: APIs,\n    navigation: false\n  },\n  {\n    path: 'technologies-ghn-provinces',\n    text: 'Technologies GHN',\n    component: GiaoHangNhanh,\n    navigation: false\n  },\n  {\n    path: 'technologies-vietcetera',\n    text: 'Technologies Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsSourcesProps {}\n\ninterface INewsSourcesState {\n  sources: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsSources extends Component<INewsSourcesProps, INewsSourcesState> {\n  constructor(props: INewsSourcesProps) {\n    super(props);\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading: boolean, sources: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category: string, index: number) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n}\n\nexport default class NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [] };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesProviders extends Component<\n  IPhonesProvidersProps,\n  IPhonesProvidersState\n> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading: boolean, providers: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-3\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IAPIsProps {}\n\ninterface IAPIsState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nexport default class APIs extends Component<IAPIsProps, IAPIsState> {\n  constructor(props: IAPIsProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getTechnologies = this.getTechnologies.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTechnologies();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getTechnologies() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getTechnologies();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading: boolean, filterTechnologies: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container h-50vh\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"APIs\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGiaoHangNhanhProps {}\n\ninterface IGiaoHangNhanhState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class GiaoHangNhanh extends Component<IGiaoHangNhanhProps, IGiaoHangNhanhState> {\n  constructor(props: IGiaoHangNhanhProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"GiaoHangNhanh\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">Giao Hang Nhanh</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nexport default class Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.type}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}