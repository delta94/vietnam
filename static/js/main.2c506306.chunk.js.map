{"version":3,"sources":["configs/urls.ts","configs/administrative-divisions.ts","configs/banks.ts","configs/calendar.ts","configs/ethnic-minorities.ts","configs/finance.ts","configs/government.ts","configs/history.ts","configs/license-plates.ts","configs/music.ts","configs/news.ts","configs/open-apis.ts","configs/phones.ts","configs/sports.ts","configs/weather.ts","configs/youtube.ts","configs/index.ts","services/apis.ts","services/graphql.ts","services/helper.ts","services/index.ts","components/API.tsx","components/CURL.tsx","components/Table.tsx","components/Doc.tsx","components/Footer.tsx","components/Navigation.tsx","components/SmallDoc.tsx","pages/docs/AdministrativeDivisions.tsx","pages/docs/Banks.tsx","pages/docs/Calendar.tsx","pages/docs/Docs.tsx","pages/docs/EthnicMinorities.tsx","pages/docs/Finance.tsx","pages/docs/Government.tsx","pages/docs/History.tsx","pages/docs/LicensePlates.tsx","pages/docs/Music.tsx","pages/docs/News.tsx","pages/docs/OpenAPIs.tsx","pages/docs/Phones.tsx","pages/docs/Sports.tsx","pages/docs/Weather.tsx","pages/docs/YouTube.tsx","pages/demo/administrative-divisions/Districts.tsx","pages/demo/administrative-divisions/PostalCodes.tsx","pages/demo/administrative-divisions/Provinces.tsx","pages/demo/administrative-divisions/Wards.tsx","pages/demo/banks/Forex.tsx","pages/demo/banks/History.tsx","pages/demo/banks/List.tsx","pages/demo/calendar/Converter.tsx","pages/demo/finance/Companies.tsx","pages/demo/finance/Highlights.tsx","pages/demo/finance/History.tsx","pages/demo/finance/Potentials.tsx","pages/demo/finance/Profit.tsx","pages/demo/news/Feed.tsx","pages/demo/news/Sources.tsx","pages/demo/news/Trends.tsx","pages/demo/phones/Prefixes.tsx","pages/demo/phones/Providers.tsx","pages/demo/youtube/Trending.tsx","pages/demo/youtube/VideoCategories.tsx","pages/demo/ethnic-minorities/List.tsx","pages/demo/government/GeneralSecretaries.tsx","pages/demo/government/Ministers.tsx","pages/demo/government/Ministries.tsx","pages/demo/government/national-assembly/Chairs.tsx","pages/demo/government/national-assembly/Members.tsx","pages/demo/government/Presidents.tsx","pages/demo/government/PrimeMinisters.tsx","pages/demo/history/Dynasties.tsx","routers/index.ts","pages/Home.tsx","pages/demo/license-plates/List.tsx","pages/demo/music/Artists.tsx","pages/demo/open-apis/List.tsx","pages/demo/open-apis/ghn/Provinces.tsx","pages/demo/open-apis/ghn/Districts.tsx","pages/demo/open-apis/ghn/Wards.tsx","pages/demo/open-apis/Vietcetera.tsx","pages/demo/sports/Clubs.tsx","pages/demo/weather/Current.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["baseAPI","baseGraphQL","administrativeDivisions","getPostalCodes","id","name","public","method","path","url","demo","request","headers","key","value","query","type","required","description","body","response","200","schema","example","code","province","province_id","400","message","getProvinces","capital","level","level_en","macro_region","macro_region_en","region","region_en","getDistricts","getWards","ward","district","getTotalWards","total","banks","getForexBanks","getForexRates","currencies","data","syncForexRates","status","calendar","convertLunarToSolar","year","month","date","convertSolarToLunar","getCanChi","canChi","ethnicMinorities","getEthnicMinorities","type_en","finance","getStockCompanies","market","group","symbol","industry","supersector","sector","subsector","listingDate","getStockHistory","history","getStockHighlights","average","diff","diffToMax","diffToMin","latest","latestDate","low","max","maxDate","median","min","minDate","numberOfDates","start","startDate","getStockPotentials","calculateProfit","profit","government","getGeneralSecretaries","title","title_en","title_short","gender","gender_en","start_date","end_date","getPresidents","getPrimeMinisters","getNationalAssemblyChairs","getNationalAssemblyMembers","no","date_of_birth","city_of_birth","degree","percentage","getMinistries","short","name_en","getMinisters","getDynasties","temple_name","birth_name","birth","death","start_year","end_year","dynasty","licensePlates","getLicensePlates","license","definition","music","getMusicArtists","news","getArticles","source","pubDate","day","hours","minutes","seconds","timestamp","dateTimeString","getTrends","hour","categories","getSources","category","getCategories","openAPIs","getOpenAPIs","type_id","npm","getGHNProvinces","getGHNDistricts","district_id","support_type","getGHNWards","getVietceteraArticles","publishDate","phones","getPhonesPrefixes","prefix","provider","provider_id","getPhonesProviders","prefixes","sports","getSportsClubs","sport","sport_en","competition","city","weather","getCurrentWeather","coord","base","main","visibility","wind","clouds","dt","sys","timezone","cod","youtube","getTrending","channelId","publishedAt","channelTitle","tags","categoryId","getVideoCategories","assignable","periods","label","months","endpoints","APIS","keys","Object","length","map","toString","join","endpoint","queryString","this","buildQueryString","input","options","JSON","stringify","Promise","resolve","fetch","then","res","json","catch","error","console","ministry","trends","text","encodeURI","articles","buy","sell","volume","from","to","currency","skip","GraphQL","fallback","result","fields","fieldsString","params","_key","__value","paramsString","graphql","list","newRecord","filter","Array","isArray","mutation","record","updatedRecord","count","graphGet","graphPost","item","graphPut","graphDelete","Helper","s","charAt","toUpperCase","slice","x","replace","period","now","Date","oneDay","oneWeek","unit","includes","parseInt","o","parse","navigator","clipboard","writeText","alert","err","stack","apis","helper","API","props","api","className","onClick","copyToClipboard","Component","CURL","bind","buildDataRaw","trim","dataRaw","header","index","lastFlag","Table","loading","caption","rows","rowConfigs","emptyRowsText","Spinner","animation","variant","config","headerIndex","row","rowIndex","cellIndex","cell","Doc","state","renderAPIs","renderRequest","renderResponses","buildResponseExample","requestRowConfigs","responseRowConfigs","responseCodes","Tabs","defaultActiveKey","Tab","eventKey","cardIndex","values","Footer","getFullYear","href","target","rel","Navigation","routes","Navbar","bg","expand","Brand","Nav","Item","pathname","Dropdown","DropdownButton","menuAlign","route","navigation","as","Link","SmallDoc","renderSidebar","renderTable","scrollIntoView","element","document","getElementById","behavior","colors","get","post","color","toLowerCase","Maps","Banks","Calendar","Docs","Accordion","capitalize","Toggle","Button","Collapse","groups","EthnicMinorities","Finance","Government","History","LicensePlates","Music","News","OpenAPIs","Phones","Sports","Weather","YouTube","MapsDistricts","provinces","districts","updateProvince","setState","event","Card","Body","Form","Group","Control","defaultValue","onChange","MapsPostalCodes","postalCodes","MapsProvinces","MapsWards","wards","active","renderPagination","goToPage","updateActive","page","Math","floor","final","items","push","Pagination","size","Prev","Next","BanksForex","sortBy","sortDir","getBanksForexRates","sort","renderForm","updateCurrency","by","dir","a","b","bank","aItem","buyCash","bItem","sellCash","buyTransfer","sellTransfer","time","buyCashText","buyTransferText","sellCashText","sellTransferText","datasetsOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOptions","responsive","annotation","annotations","drawTime","mode","scaleID","borderWidth","content","enabled","position","BanksHistory","processRates","find","rates","rate","labels","minute","datasets","transfer","buyData","transferData","sellData","lines","deepClone","assign","Title","BanksList","syncAll","log","CalendarConverter","loadingText","solarDate","solarString","lunarDate","lunarString","updateSolarDate","buildSolarString","updateLunarDate","buildLunarString","d","getMonth","monthString","addZero","getDate","dateString","yyyy","mm","dd","split","controlId","Label","placeholder","pattern","FinanceCompanies","companies","FinanceHighlights","highlights","updatePeriod","processPeriod","highlight","middle","FinanceHistory","symbols","updateSymbol","processLabels","processDatasets","company","historyLabels","historyData","i","close","_labels","concat","array","indexOf","FinancePotentials","potentials","potential","FinanceProfit","updateBuy","updateSell","updateVolume","parseFloat","preventDefault","onSubmit","numberFormatter","NewsFeed","sources","updateCategory","updateSource","ListGroup","article","Subtitle","Text","NewsSources","Badge","NewsTrends","getGoogleTrends","trend","PhonesPrefixes","PhonesProviders","providers","_provider","YouTubeTrending","mapCategories","trending","getYouTubeTrending","getYouTubeVideoCategories","updateVideoCategory","videoCategory","videos","video","YouTubeVideoCategories","EthnicMinoritiesList","filterEthnicMinorities","ethnicMinority","typeFlag","typeEnFlag","GovernmentGeneralSecretaries","generalSecretaries","GovernmentMinisters","ministries","ministers","updateMinistry","GovernmentMinistries","GovernmentNationalAssemblyChairs","chairs","GovernmentNationalAssemblyMembers","members","GovernmentPresidents","presidents","GovernmentPrimeMinisters","primeMinisters","HistoryDynasties","dynasties","getHistoryDynasties","component","docs","filterAPIs","externalPackages","filterExternalPackages","filterPackages","updateQuery","packages","_package","AdministrativeDivisions","AdministrativeDivisionsPostalCodes","AdministrativeDivisionsProvinces","AdministrativeDivisionsDistricts","AdministrativeDivisionsWards","filterLicensePlates","licensePlate","artists","technologies","filterTechnologies","technology","nameFlag","option","clubs","getWeatherCurrent","temp","feels_like","temp_min","temp_max","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2c506306.chunk.js","sourcesContent":["const { NODE_ENV = '' } = process.env;\nconst devAPI = 'http://localhost:8080/api';\nconst prodAPI = 'https://vietnamd.herokuapp.com/api';\nexport const baseAPI = NODE_ENV === 'development' ? devAPI : prodAPI;\n\nconst devGraphQL = 'http://localhost:8080/graphql';\nconst prodGraphQL = 'https://vietnamd.herokuapp.com/graphql';\nexport const baseGraphQL = NODE_ENV === 'development' ? devGraphQL : prodGraphQL;\n","import { baseAPI } from './urls';\n\nconst administrativeDivisions = {\n  getPostalCodes: {\n    id: 'getPostalCodes',\n    name: 'Get Postal Codes',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/postal-codes',\n    url: `${baseAPI}/administrative-divisions/postal-codes`,\n    demo: 'administrative-divisions-postal-codes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'code', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'province_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            code: '<string>',\n            province: '<string>',\n            province_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getProvinces: {\n    id: 'getProvinces',\n    name: 'Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/provinces',\n    url: `${baseAPI}/administrative-divisions/provinces`,\n    demo: 'administrative-divisions-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'level_en', type: 'string', required: false, description: '' },\n        { name: 'macro_region_en', type: 'string', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'capital', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' },\n          { name: 'macro_region', type: 'string', description: '' },\n          { name: 'macro_region_en', type: 'string', description: '' },\n          { name: 'region', type: 'string', description: '' },\n          { name: 'region_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            capital: '<string>',\n            level: '<string>',\n            level_en: '<string>',\n            macro_region: '<string>',\n            macro_region_en: '<string>',\n            region: '<string>',\n            region_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getDistricts: {\n    id: 'getDistricts',\n    name: 'Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/districts',\n    url: `${baseAPI}/administrative-divisions/districts`,\n    demo: 'administrative-divisions-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'province_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            level: '<string>',\n            level_en: '<string>',\n            province: '<string>',\n            province_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getWards: {\n    id: 'getWards',\n    name: 'Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/administrative-divisions/wards',\n    url: `${baseAPI}/administrative-divisions/wards`,\n    demo: 'administrative-divisions-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'skip', type: 'number', required: false, description: '' },\n        { name: 'limit', type: 'number', required: false, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'ward', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            ward: '<string>',\n            district: '<string>',\n            province: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getTotalWards: {\n    id: 'getTotalWards',\n    name: 'Get Total Wards',\n    public: false,\n    method: 'GET',\n    path: '/administrative-divisions/wards/total',\n    url: `${baseAPI}/administrative-divisions/wards/total`,\n    demo: 'administrative-divisions-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [{ name: 'total', type: 'number', description: '' }],\n        example: [{ total: '<number>' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default administrativeDivisions;\n","import { baseAPI } from './urls';\n\nconst banks = {\n  getForexBanks: {\n    id: 'getForexBanks',\n    name: 'Get Forex Banks',\n    public: true,\n    path: '/banks/forex/banks',\n    url: `${baseAPI}/banks/forex/banks`,\n    demo: 'banks-list',\n    method: 'GET',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'banks', type: 'Array<string>', description: '' }\n        ],\n        example: [{ total: '<number>', banks: '<Array<string>>' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getForexRates: {\n    id: 'getForexRates',\n    name: 'Get Forex Rates',\n    public: true,\n    method: 'GET',\n    path: '/banks/forex/rates',\n    url: `${baseAPI}/banks/forex/rates`,\n    demo: 'banks-forex',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'currencies', type: 'Array<string>', description: '' },\n          { name: 'data', type: 'Array<Rates>', description: '' }\n        ],\n        example: {\n          currencies: '<Array<string>>',\n          data: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  syncForexRates: {\n    id: 'syncForexRates',\n    name: 'Sync Forex Rates',\n    public: true,\n    method: 'POST',\n    path: '/banks/forex/sync',\n    url: `${baseAPI}/banks/forex/sync`,\n    demo: 'banks-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'id', required: true, type: 'string', description: '' }]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'status', type: 'string', description: '' }],\n        example: { status: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default banks;\n","import { baseAPI } from './urls';\n\nconst calendar = {\n  convertLunarToSolar: {\n    id: 'convertLunarToSolar',\n    name: 'Convert Lunar Date to Solar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar2solar',\n    url: `${baseAPI}/calendar/lunar2solar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  convertSolarToLunar: {\n    id: 'convertSolarToLunar',\n    name: 'Convert Solar Date to Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/solar2lunar',\n    url: `${baseAPI}/calendar/solar2lunar`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' }\n        ],\n        example: { year: '<number>', month: '<number>', date: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCanChi: {\n    id: 'getCanChi',\n    name: 'Get Can Chi of Lunar Date',\n    public: true,\n    method: 'POST',\n    path: '/calendar/lunar/can-chi',\n    url: `${baseAPI}/calendar/lunar/can-chi`,\n    demo: 'calendar-converter',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'year', required: true, type: 'number', description: '' },\n        { name: 'month', required: true, type: 'number', description: '' },\n        { name: 'date', required: true, type: 'number', description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'canChi', type: 'string', description: '' }],\n        example: { canChi: '<string>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default calendar;\n","import { baseAPI } from './urls';\n\nconst ethnicMinorities = {\n  getEthnicMinorities: {\n    id: 'getEthnicMinorities',\n    name: 'Get Ethnic Minorities',\n    public: true,\n    method: 'GET',\n    path: '/ethnic-minorities',\n    url: `${baseAPI}/ethnic-minorities`,\n    demo: 'ethnic-minorities-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_en', required: false, type: 'string', description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_en', type: 'string', description: '' }\n        ],\n        example: [{ name: 'Kinh', type: 'Việt - Mường', type_en: 'Vietic' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default ethnicMinorities;\n","import { baseAPI } from './urls';\n\nconst finance = {\n  getStockCompanies: {\n    id: 'getStockCompanies',\n    name: 'Get Listed Companies',\n    public: true,\n    method: 'GET',\n    path: '/finance/companies',\n    url: `${baseAPI}/finance/companies`,\n    demo: 'finance-companies',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'market', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'supersector', type: 'string', description: '' },\n          { name: 'sector', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'listingDate', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            market: '<string>',\n            group: '<string>',\n            symbol: '<string>',\n            name: '<string>',\n            industry: '<string>',\n            supersector: '<string>',\n            sector: '<string>',\n            subsector: '<string>',\n            listingDate: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHistory: {\n    id: 'getStockHistory',\n    name: 'Get Stock History',\n    public: true,\n    method: 'GET',\n    path: '/finance/history',\n    url: `${baseAPI}/finance/history`,\n    demo: 'finance-history',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'symbol', type: 'string', required: true, description: '' },\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'symbol', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'history', type: 'Array<Date>', description: '' }\n        ],\n        example: {\n          symbol: '<string>',\n          name: '<string>',\n          group: '<string>',\n          industry: '<string>',\n          subsector: '<string>',\n          history: '<Array<any>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockHighlights: {\n    id: 'getStockHighlights',\n    name: 'Get Stock Highlights',\n    public: false,\n    method: 'POST',\n    path: '/finance/highlights',\n    url: `${baseAPI}/finance/highlights`,\n    demo: 'finance-highlights',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getStockPotentials: {\n    id: 'getStockPotentials',\n    name: 'Get Stock Potentials',\n    public: false,\n    method: 'POST',\n    path: '/finance/potentials',\n    url: `${baseAPI}/finance/potentials`,\n    demo: 'finance-potentials',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'from', type: 'number', required: true, description: '' },\n        { name: 'to', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'average', type: 'number', description: '' },\n          { name: 'diff', type: 'number', description: '' },\n          { name: 'diffToMax', type: 'number', description: '' },\n          { name: 'diffToMin', type: 'number', description: '' },\n          { name: 'group', type: 'string', description: '' },\n          { name: 'industry', type: 'string', description: '' },\n          { name: 'latest', type: 'number', description: '' },\n          { name: 'latestDate', type: 'string', description: '' },\n          { name: 'low', type: 'boolean', description: '' },\n          { name: 'max', type: 'number', description: '' },\n          { name: 'maxDate', type: 'string', description: '' },\n          { name: 'median', type: 'number', description: '' },\n          { name: 'min', type: 'number', description: '' },\n          { name: 'minDate', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'numberOfDates', type: 'number', description: '' },\n          { name: 'start', type: 'number', description: '' },\n          { name: 'startDate', type: 'string', description: '' },\n          { name: 'subsector', type: 'string', description: '' },\n          { name: 'symbol', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            average: '<number>',\n            diff: '<number>',\n            diffToMax: '<number>',\n            diffToMin: '<number>',\n            group: '<string>',\n            industry: '<string>',\n            latest: '<number>',\n            latestDate: '<string>',\n            low: '<boolean>',\n            max: '<number>',\n            maxDate: '<string>',\n            median: '<number>',\n            min: '<number>',\n            minDate: '<string>',\n            name: '<string>',\n            numberOfDates: '<number>',\n            start: '<number>',\n            startDate: '<string>',\n            subsector: '<string>',\n            symbol: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  calculateProfit: {\n    id: 'calculateProfit',\n    name: 'Calculate Profit',\n    public: false,\n    method: 'POST',\n    path: '/finance/profit',\n    url: `${baseAPI}/finance/profit`,\n    demo: 'finance-profit',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [\n        { name: 'buy', type: 'number', required: true, description: '' },\n        { name: 'sell', type: 'number', required: true, description: '' },\n        { name: 'volume', type: 'number', required: true, description: '' }\n      ]\n    },\n    response: {\n      200: {\n        schema: [{ name: 'profit', type: 'number', description: '' }],\n        example: { profit: '<number>' }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default finance;\n","import { baseAPI } from './urls';\n\nconst government = {\n  getGeneralSecretaries: {\n    id: 'getGeneralSecretaries',\n    name: 'Get General Secretaries',\n    public: true,\n    method: 'GET',\n    path: '/government/general-secretaries',\n    url: `${baseAPI}/government/general-secretaries`,\n    demo: 'government-general-secretaries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'string', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPresidents: {\n    id: 'getPresidents',\n    name: 'Get Presidents',\n    public: true,\n    method: 'GET',\n    path: '/government/presidents',\n    url: `${baseAPI}/government/presidents`,\n    demo: 'government-presidents',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPrimeMinisters: {\n    id: 'getPrimeMinisters',\n    name: 'Get Prime Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/prime-ministers',\n    url: `${baseAPI}/government/prime-ministers`,\n    demo: 'government-prime-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyChairs: {\n    id: 'getNationalAssemblyChairs',\n    name: 'Get National Assembly Chairs',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/chairs',\n    url: `${baseAPI}/government/national-assembly/chairs`,\n    demo: 'government-national-assembly-chairs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getNationalAssemblyMembers: {\n    id: 'getNationalAssemblyMembers',\n    name: 'Get National Assembly Members',\n    public: true,\n    method: 'GET',\n    path: '/government/national-assembly/members',\n    url: `${baseAPI}/government/national-assembly/members`,\n    demo: 'government-national-assembly-members',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'no', type: 'number', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'no', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'date_of_birth', type: 'string', description: '' },\n          { name: 'city_of_birth', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'degree', type: 'string', description: '' },\n          { name: 'province', type: 'string', description: '' },\n          { name: 'district', type: 'string', description: '' },\n          { name: 'percentage', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            no: '<number>',\n            name: '<string>',\n            date_of_birth: '<string>',\n            city_of_birth: '<string>',\n            gender: '<string>',\n            degree: '<string>',\n            province: '<string>',\n            district: '<string>',\n            percentage: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinistries: {\n    id: 'getMinistries',\n    name: 'Get Ministries',\n    public: true,\n    method: 'GET',\n    path: '/government/ministries',\n    url: `${baseAPI}/government/ministries`,\n    demo: 'government-ministries',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'level_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'name_en', type: 'string', description: '' },\n          { name: 'level', type: 'string', description: '' },\n          { name: 'level_en', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            short: '<string>',\n            name: '<string>',\n            name_en: '<string>',\n            level: '<string>',\n            level_en: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getMinisters: {\n    id: 'getMinisters',\n    name: 'Get Ministers',\n    public: true,\n    method: 'GET',\n    path: '/government/ministers',\n    url: `${baseAPI}/government/ministers`,\n    demo: 'government-ministers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: [{ name: 'ministry', type: 'string', required: true, description: '' }]\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'title_en', type: 'number', description: '' },\n          { name: 'title_short', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'gender', type: 'string', description: '' },\n          { name: 'gender_en', type: 'string', description: '' },\n          { name: 'start_date', type: 'string', description: '' },\n          { name: 'end_date', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            title_en: '<string>',\n            title_short: '<string>',\n            name: '<string>',\n            gender: '<string>',\n            gender_en: '<string>',\n            start_date: '<string>',\n            end_date: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default government;\n","import { baseAPI } from './urls';\n\nconst history = {\n  getDynasties: {\n    id: 'getDynasties',\n    name: 'Get Dynasties',\n    public: true,\n    method: 'GET',\n    path: '/history/dynasties',\n    url: `${baseAPI}/history/dynasties`,\n    demo: 'history-dynasties',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'temple_name', type: 'string', description: '' },\n          { name: 'birth_name', type: 'string', description: '' },\n          { name: 'birth', type: 'number', description: '' },\n          { name: 'death', type: 'number', description: '' },\n          { name: 'start_year', type: 'number', description: '' },\n          { name: 'end_year', type: 'number', description: '' },\n          { name: 'dynasty', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            temple_name: '<string>',\n            birth_name: '<string>',\n            birth: '<number>',\n            death: '<number>',\n            start_year: '<number>',\n            end_year: '<number>',\n            dynasty: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default history;\n","import { baseAPI } from './urls';\n\nconst licensePlates = {\n  getLicensePlates: {\n    id: 'getLicensePlates',\n    name: 'Get License Plates',\n    public: true,\n    method: 'GET',\n    path: '/license-plates',\n    url: `${baseAPI}/license-plates`,\n    demo: 'license-plates-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'license', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'license', type: 'string', description: '' },\n          { name: 'definition', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' }\n        ],\n        example: [{ license: '29', definition: 'Hà Nội', type: 'Tỉnh' }]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default licensePlates;\n","import { baseAPI } from './urls';\n\nconst music = {\n  getMusicArtists: {\n    id: 'getMusicArtists',\n    name: 'Get Music Artists',\n    public: true,\n    method: 'GET',\n    path: '/music/artists',\n    url: `${baseAPI}/music/artists`,\n    demo: 'music-artists',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [{ name: 'name', type: 'string', description: '' }],\n        example: [\n          {\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default music;\n","import { baseAPI } from './urls';\n\nconst news = {\n  getArticles: {\n    id: 'getArticles',\n    name: 'Get Articles',\n    public: true,\n    method: 'GET',\n    path: '/news',\n    url: `${baseAPI}/news`,\n    demo: 'news-feed',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [\n        { name: 'category', type: 'string', required: true, description: '' },\n        { name: 'source', type: 'string', required: true, description: '' }\n      ],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'source', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' },\n          { name: 'pubDate', type: 'string', description: '' },\n          { name: 'day', type: 'string', description: '' },\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' },\n          { name: 'hours', type: 'number', description: '' },\n          { name: 'minutes', type: 'number', description: '' },\n          { name: 'seconds', type: 'number', description: '' },\n          { name: 'timestamp', type: 'number', description: '' },\n          { name: 'dateTimeString', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            source: '<string>',\n            description: '<string>',\n            pubDate: '<string>',\n            day: '<string>',\n            year: '<number>',\n            month: '<number>',\n            date: '<number>',\n            hours: '<number>',\n            minutes: '<number>',\n            seconds: '<number>',\n            timestamp: '<number>',\n            dateTimeString: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getTrends: {\n    id: 'getTrends',\n    name: 'Get (Google) Trends',\n    public: true,\n    method: 'GET',\n    path: '/news/trends',\n    url: `${baseAPI}/news/trends`,\n    demo: 'news-trends',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'year', type: 'number', description: '' },\n          { name: 'month', type: 'number', description: '' },\n          { name: 'date', type: 'number', description: '' },\n          { name: 'hour', type: 'number', description: '' },\n          { name: 'trends', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          year: '<number>',\n          month: '<number>',\n          date: '<number>',\n          hour: '<number>',\n          categories: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getSources: {\n    id: 'getSources',\n    name: 'Get Sources',\n    public: true,\n    method: 'GET',\n    path: '/news/sources',\n    url: `${baseAPI}/news/sources`,\n    demo: 'news-sources',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'category', type: 'string', description: '' },\n          { name: 'categories', type: 'Array<string>', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            name: '<string>',\n            url: '<string>',\n            category: '<string>',\n            categories: '<Array<string>>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getCategories: {\n    id: 'getCategories',\n    name: 'Get Categories',\n    public: true,\n    method: 'GET',\n    path: '/news/categories',\n    url: `${baseAPI}/news/categories`,\n    demo: 'news-categories',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'total', type: 'number', description: '' },\n          { name: 'categories', type: 'Array<string>', description: '' }\n        ],\n        example: {\n          total: '<number>',\n          categories: '<Array<string>>'\n        }\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default news;\n","import { baseAPI } from './urls';\n\nconst openAPIs = {\n  getOpenAPIs: {\n    id: 'getOpenAPIs',\n    name: 'Get Open APIs',\n    public: true,\n    method: 'GET',\n    path: '/open-apis',\n    url: `${baseAPI}/open-apis`,\n    demo: 'open-apis-list',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type_id', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'name', type: 'string', description: '' },\n          { name: 'type', type: 'string', description: '' },\n          { name: 'type_id', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'npm', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            name: '<string>',\n            type: '<string>',\n            type_id: '<string>',\n            url: '<string>',\n            npm: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNProvinces: {\n    id: 'getGHNProvinces',\n    name: 'GHN - Get Provinces',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/provinces',\n    url: `${baseAPI}/open-apis/giaohangnhanh/provinces`,\n    demo: 'open-apis-ghn-provinces',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNDistricts: {\n    id: 'getGHNDistricts',\n    name: 'GHN - Get Districts',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/districts',\n    url: `${baseAPI}/open-apis/giaohangnhanh/districts`,\n    demo: 'open-apis-ghn-districts',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'province_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'province_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' },\n          { name: 'type', type: 'number', description: '' },\n          { name: 'support_type', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            province_id: '<string>',\n            name: '<string>',\n            code: '<string>',\n            type: '<number>',\n            support_type: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getGHNWards: {\n    id: 'getGHNWards',\n    name: 'GHN - Get Wards',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/giaohangnhanh/wards',\n    url: `${baseAPI}/open-apis/giaohangnhanh/wards`,\n    demo: 'open-apis-ghn-wards',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'district_id', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'district_id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'code', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            district_id: '<string>',\n            name: '<string>',\n            code: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVietceteraArticles: {\n    id: 'getVietceteraArticles',\n    name: 'Get Vietcetera Articles',\n    public: true,\n    method: 'GET',\n    path: '/open-apis/vietcetera',\n    url: `${baseAPI}/open-apis/vietcetera`,\n    demo: 'open-apis-vietcetera',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'type', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'title', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' },\n          { name: 'publishDate', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            title: '<string>',\n            url: '<string>',\n            publishDate: '<string>',\n            description: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default openAPIs;\n","import { baseAPI } from './urls';\n\nconst phones = {\n  getPhonesPrefixes: {\n    id: 'getPhonesPrefixes',\n    name: 'Get Phone Prefixes',\n    public: true,\n    method: 'GET',\n    path: '/phones/prefixes',\n    url: `${baseAPI}/phones/prefixes`,\n    demo: 'phones-prefixes',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'prefix', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'prefix', type: 'string', description: '' },\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'provider_id', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            prefix: '<string>',\n            provider: '<string>',\n            provider_id: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getPhonesProviders: {\n    id: 'getPhonesProviders',\n    name: 'Get Phone Providers',\n    public: true,\n    method: 'GET',\n    path: '/phones/providers',\n    url: `${baseAPI}/phones/providers`,\n    demo: 'phones-providers',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'provider', type: 'string', description: '' },\n          { name: 'prefixes', type: 'Array<string>', description: '' }\n        ],\n        example: [\n          {\n            provider: '<string>',\n            prefixes: '<Array<string>>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default phones;\n","import { baseAPI } from './urls';\n\nconst sports = {\n  getSportsClubs: {\n    id: 'getSportsClubs',\n    name: 'Get Sports Clubs',\n    public: true,\n    method: 'GET',\n    path: '/sports/clubs',\n    url: `${baseAPI}/sports/clubs`,\n    demo: 'sports-clubs',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'sport_en', type: 'string', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'sport', type: 'string', description: '' },\n          { name: 'sport_en', type: 'string', description: '' },\n          { name: 'competition', type: 'string', description: '' },\n          { name: 'city', type: 'string', description: '' },\n          { name: 'name', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            sport: '<string>',\n            sport_en: '<string>',\n            competition: '<string>',\n            city: '<string>',\n            name: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default sports;\n","import { baseAPI } from './urls';\n\nconst weather = {\n  getCurrentWeather: {\n    id: 'getCurrentWeather',\n    name: 'Get Current Weather',\n    public: true,\n    method: 'GET',\n    path: '/weather',\n    url: `${baseAPI}/weather`,\n    demo: 'weather-current',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'city', type: 'string', required: true, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'coord', type: 'object', description: '' },\n          { name: 'weather', type: 'Array<object>', description: '' },\n          { name: 'base', type: 'string', description: '' },\n          { name: 'main', type: 'object', description: '' },\n          { name: 'visibility', type: 'number', description: '' },\n          { name: 'wind', type: 'object', description: '' },\n          { name: 'clouds', type: 'object', description: '' },\n          { name: 'dt', type: 'number', description: '' },\n          { name: 'sys', type: 'number', description: '' },\n          { name: 'timezone', type: 'number', description: '' },\n          { name: 'id', type: 'number', description: '' },\n          { name: 'name', type: 'string', description: '' },\n          { name: 'cod', type: 'number', description: '' }\n        ],\n        example: [\n          {\n            coord: '<object>',\n            weather: '<Array<object>>',\n            base: '<string>',\n            main: '<object>',\n            visibility: '<number>',\n            wind: '<object>',\n            clouds: '<object>',\n            dt: '<number>',\n            sys: '<number>',\n            timezone: '<number>',\n            id: '<number>',\n            name: '<string>',\n            cod: '<number>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default weather;\n","import { baseAPI } from './urls';\nimport { IYouTubeEndpoints } from './interfaces';\n\nconst youtube: IYouTubeEndpoints = {\n  getTrending: {\n    id: 'getTrending',\n    name: 'Get Trending',\n    public: true,\n    method: 'GET',\n    path: '/youtube/trending',\n    url: `${baseAPI}/youtube/trending`,\n    demo: 'youtube-trending',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [{ name: 'categoryId', type: 'number', required: false, description: '' }],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'channelId', type: 'string', description: '' },\n          { name: 'title', type: 'string', description: '' },\n          { name: 'publishedAt', type: 'string', description: '' },\n          { name: 'description', type: 'string', description: '' },\n          { name: 'channelTitle', type: 'string', description: '' },\n          { name: 'tags', type: 'Array<string>', description: '' },\n          { name: 'categoryId', type: 'string', description: '' },\n          { name: 'url', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            channelId: '<string>',\n            title: '<string>',\n            publishedAt: '<string>',\n            description: '<string>',\n            channelTitle: '<string>',\n            tags: '<Array<string>>',\n            categoryId: '<string>',\n            url: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  },\n  getVideoCategories: {\n    id: 'getVideoCategories',\n    name: 'Get Video Categories',\n    public: true,\n    method: 'GET',\n    path: '/youtube/video-categories',\n    url: `${baseAPI}/youtube/video-categories`,\n    demo: 'youtube-video-categories',\n    request: {\n      headers: [{ key: 'Content-Type', value: 'application/json' }],\n      query: [],\n      body: []\n    },\n    response: {\n      200: {\n        schema: [\n          { name: 'id', type: 'string', description: '' },\n          { name: 'title', type: 'string', description: '' },\n          { name: 'assignable', type: 'boolean', description: '' },\n          { name: 'channelId', type: 'string', description: '' }\n        ],\n        example: [\n          {\n            id: '<string>',\n            title: '<string>',\n            assignable: '<string>',\n            channelId: '<string>'\n          }\n        ]\n      },\n      400: {\n        schema: [{ name: 'message', type: 'string', description: '' }],\n        example: { message: '<string>' }\n      }\n    }\n  }\n};\n\nexport default youtube;\n","import { baseAPI, baseGraphQL } from './urls';\nimport { IPeriod, IMonth, IEndpoints } from './interfaces';\n\nimport administrativeDivisions from './administrative-divisions';\nimport banks from './banks';\nimport calendar from './calendar';\nimport ethnicMinorities from './ethnic-minorities';\nimport finance from './finance';\nimport government from './government';\nimport history from './history';\nimport licensePlates from './license-plates';\nimport music from './music';\nimport news from './news';\nimport openAPIs from './open-apis';\nimport phones from './phones';\nimport sports from './sports';\nimport weather from './weather';\nimport youtube from './youtube';\n\nexport { baseAPI, baseGraphQL };\n\nexport const periods: Array<IPeriod> = [\n  { label: '1 Week', value: '1W' },\n  { label: '2 Weeks', value: '2W' },\n  { label: '3 Weeks', value: '3W' },\n  { label: '1 Month', value: '1M' },\n  { label: '2 Months', value: '2M' },\n  { label: '3 Months', value: '3M' },\n  { label: '6 Months', value: '6M' },\n  { label: '1 Year', value: '1Y' },\n  { label: '2 Years', value: '2Y' },\n  { label: '3 Years', value: '3Y' },\n  { label: '4 Years', value: '4Y' },\n  { label: '5 Years', value: '5Y' }\n];\n\nexport const months: Array<IMonth> = [\n  { name: 'january', short: 'jan' },\n  { name: 'february', short: 'feb' },\n  { name: 'march', short: 'mar' },\n  { name: 'april', short: 'apr' },\n  { name: 'may', short: 'may' },\n  { name: 'june', short: 'jun' },\n  { name: 'july', short: 'jul' },\n  { name: 'august', short: 'aug' },\n  { name: 'september', short: 'sep' },\n  { name: 'october', short: 'oct' },\n  { name: 'november', short: 'nov' },\n  { name: 'december', short: 'dec' }\n];\n\nexport type EndpointGroups =\n  | 'administrativeDivisions'\n  | 'banks'\n  | 'calendar'\n  | 'ethnicMinorities'\n  | 'finance'\n  | 'government'\n  | 'licensePlates'\n  | 'music'\n  | 'news'\n  | 'phones'\n  | 'sports'\n  | 'technologies';\n\nexport const endpoints: IEndpoints = {\n  administrativeDivisions,\n  banks,\n  calendar,\n  ethnicMinorities,\n  finance,\n  government,\n  history,\n  licensePlates,\n  music,\n  news,\n  openAPIs,\n  phones,\n  sports,\n  weather,\n  youtube\n};\n","import { endpoints } from '../configs';\nimport { IEndpoint } from '../configs/interfaces';\n\ninterface IRequest {\n  query: any;\n  body: any;\n}\n\nexport default class APIS {\n  private buildQueryString(query: any = {}) {\n    const keys = Object.keys(query);\n    if (!keys.length) return '';\n    return keys.map(key => `${key}=${(query[key] || '').toString()}`).join('&');\n  }\n\n  private fetch(endpoint: IEndpoint, request: IRequest = { query: {}, body: {} }): Promise<any> {\n    const { query = {}, body = {} } = request;\n    const { url, method } = endpoint;\n    const queryString = this.buildQueryString(query);\n    const input = queryString ? `${url}?${queryString}` : url;\n    const options =\n      method === 'GET'\n        ? { method, headers: { 'Content-Type': 'application/json' } }\n        : { method, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\n    return new Promise(resolve => {\n      fetch(input, options)\n        .then(res => res.json())\n        .then((res = {}) => {\n          resolve(res);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve([]);\n        });\n    });\n  }\n\n  public async getGeneralSecretaries() {\n    const endpoint: IEndpoint = endpoints.government.getGeneralSecretaries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPresidents() {\n    const endpoint: IEndpoint = endpoints.government.getPresidents;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPrimeMinisters() {\n    const endpoint: IEndpoint = endpoints.government.getPrimeMinisters;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyChairs() {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyChairs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getNationalAssemblyMembers(no: number) {\n    const endpoint: IEndpoint = endpoints.government.getNationalAssemblyMembers;\n    return await this.fetch(endpoint, { query: { no }, body: {} });\n  }\n\n  public async getMinistries() {\n    const endpoint: IEndpoint = endpoints.government.getMinistries;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMinisters(ministry: string) {\n    const endpoint: IEndpoint = endpoints.government.getMinisters;\n    return await this.fetch(endpoint, { query: { ministry }, body: {} });\n  }\n\n  public async getGoogleTrends() {\n    const endpoint: IEndpoint = endpoints.news.getTrends;\n    const { trends = [] } = await this.fetch(endpoint);\n    return trends.map((text: string) => {\n      const url: string = `https://www.google.com/search?q=${encodeURI(text)}`;\n      return { text, url };\n    });\n  }\n\n  public async getSources() {\n    const endpoint: IEndpoint = endpoints.news.getSources;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCategories() {\n    const endpoint: IEndpoint = endpoints.news.getCategories;\n    const { categories = [] } = await this.fetch(endpoint);\n    return categories;\n  }\n\n  public async getArticles(options: any = {}) {\n    const { category, source } = options;\n    const endpoint: IEndpoint = endpoints.news.getArticles;\n    const articles = (await this.fetch(endpoint, { query: { category, source }, body: {} })) || {};\n    return articles;\n  }\n\n  public async calculateProfit(buy: number, sell: number, volume: number) {\n    const endpoint: IEndpoint = endpoints.finance.calculateProfit;\n    const { profit = 0 } = await this.fetch(endpoint, { query: {}, body: { buy, sell, volume } });\n    return profit;\n  }\n\n  public async getStockHighlights(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHighlights;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockPotentials(from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockPotentials;\n    return await this.fetch(endpoint, { query: {}, body: { from, to } });\n  }\n\n  public async getStockCompanies() {\n    const endpoint: IEndpoint = endpoints.finance.getStockCompanies;\n    return await this.fetch(endpoint);\n  }\n\n  public async getStockHistory(symbol: string, from: number, to: number) {\n    const endpoint: IEndpoint = endpoints.finance.getStockHistory;\n    return await this.fetch(endpoint, { body: {}, query: { symbol, from, to } });\n  }\n\n  public async getBanksForexRates() {\n    const endpoint: IEndpoint = endpoints.banks.getForexRates;\n    const response = await this.fetch(endpoint);\n    const { data = [], currencies = [] } = response;\n    const currency = currencies[0] || '';\n    return { data, currency, currencies };\n  }\n\n  public async getForexBanks(): Promise<Array<string>> {\n    const endpoint: IEndpoint = endpoints.banks.getForexBanks;\n    const { banks = [] } = (await this.fetch(endpoint)) || {};\n    return banks;\n  }\n\n  public async syncForexRates(id: string) {\n    const endpoint: IEndpoint = endpoints.banks.syncForexRates;\n    const { status = '' } = await this.fetch(endpoint, { query: {}, body: { id } });\n    return status;\n  }\n\n  public async getPostalCodes() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getPostalCodes;\n    return await this.fetch(endpoint);\n  }\n\n  public async getProvinces() {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDistricts(province_id: string) {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getDistricts;\n    return await this.fetch(endpoint, { query: { province_id }, body: {} });\n  }\n\n  public async getWards(skip: number) {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getWards;\n    return await this.fetch(endpoint, { query: { skip }, body: {} });\n  }\n\n  public async getTotalWards(): Promise<number> {\n    const endpoint: IEndpoint = endpoints.administrativeDivisions.getTotalWards;\n    const { total = 0 } = await this.fetch(endpoint);\n    return total;\n  }\n\n  public async getSportsClubs(): Promise<Array<any>> {\n    const endpoint: IEndpoint = endpoints.sports.getSportsClubs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getLicensePlates() {\n    const endpoint: IEndpoint = endpoints.licensePlates.getLicensePlates;\n    return await this.fetch(endpoint);\n  }\n\n  public async getEthnicMinorities() {\n    const endpoint: IEndpoint = endpoints.ethnicMinorities.getEthnicMinorities;\n    return await this.fetch(endpoint);\n  }\n\n  public async getOpenAPIs() {\n    const endpoint: IEndpoint = endpoints.openAPIs.getOpenAPIs;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesProviders() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesProviders;\n    return await this.fetch(endpoint);\n  }\n\n  public async getPhonesPrefixes() {\n    const endpoint: IEndpoint = endpoints.phones.getPhonesPrefixes;\n    return await this.fetch(endpoint);\n  }\n\n  public async convertLunarToSolar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertLunarToSolar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async convertSolarToLunar(year: number, month: number, date: number) {\n    const endpoint: IEndpoint = endpoints.calendar.convertSolarToLunar;\n    return await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n  }\n\n  public async getCanChi(year: number, month: number, date: number): Promise<string> {\n    const endpoint: IEndpoint = endpoints.calendar.getCanChi;\n    const { canChi = '' } = await this.fetch(endpoint, { query: {}, body: { year, month, date } });\n    return canChi;\n  }\n\n  public async getVietceteraArticles(type: string) {\n    const endpoint: IEndpoint = endpoints.openAPIs.getVietceteraArticles;\n    const articles = (await this.fetch(endpoint, { query: { type }, body: {} })) || [];\n    return articles;\n  }\n\n  public async getGHNProvinces() {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNProvinces;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNDistricts() {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNDistricts;\n    return await this.fetch(endpoint);\n  }\n\n  public async getGHNWards() {\n    const endpoint: IEndpoint = endpoints.openAPIs.getGHNWards;\n    return await this.fetch(endpoint);\n  }\n\n  public async getMusicArtists() {\n    const endpoint: IEndpoint = endpoints.music.getMusicArtists;\n    return await this.fetch(endpoint);\n  }\n\n  public async getDynasties() {\n    const endpoint: IEndpoint = endpoints.history.getDynasties;\n    return await this.fetch(endpoint);\n  }\n\n  public async getCurrentWeather(city: string) {\n    const endpoint: IEndpoint = endpoints.weather.getCurrentWeather;\n    return await this.fetch(endpoint, { query: { city }, body: {} });\n  }\n\n  public async getYouTubeTrending(categoryId: number = 0) {\n    const endpoint: IEndpoint = endpoints.youtube.getTrending;\n    return await this.fetch(endpoint, { query: { categoryId }, body: {} });\n  }\n\n  public async getYouTubeVideoCategories() {\n    const endpoint: IEndpoint = endpoints.youtube.getVideoCategories;\n    return await this.fetch(endpoint);\n  }\n}\n","import { baseGraphQL } from '../configs';\n\nexport default class GraphQL {\n  private async graphql(key = '', query = '', fallback = {}): Promise<any> {\n    const body = { query };\n    const url = `${baseGraphQL}`;\n    return new Promise(resolve => {\n      fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      })\n        .then(res => res.json())\n        .then(res => {\n          const { data = {} } = res;\n          const result = data[key] || fallback;\n          resolve(result);\n        })\n        .catch(error => {\n          console.error(error);\n          resolve({});\n        });\n    });\n  }\n\n  private async graphGet(key: string, fields: Array<string> = [], options: any = {}): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const params = Object.keys(options)\n      .map(key => {\n        let value = options[key];\n        if (key === 'filter') {\n          const filterKeys = Object.keys(options[key]);\n          value = filterKeys.map(_key => {\n            const __value =\n              typeof options[key][_key] === 'string'\n                ? `\"${options[key][_key]}\"`\n                : options[key][_key];\n            return `${_key}: ${__value}`;\n          });\n          value = `{${value}}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(',');\n    const paramsString = params ? `(${params})` : '';\n    const query = `query { ${key} ${paramsString} { ${fieldsString} } }`;\n    const fallback: Array<any> = [];\n    const list = await this.graphql(key, query, fallback);\n    return list;\n  }\n\n  private async graphPost(key: string, body: any = {}, fields = []): Promise<any> {\n    const newRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        return valueType === 'string' ? `${key}: \"${value}\"` : `${key}: ${value}`;\n      })\n      .join(' ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${newRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphPut(key: string, body: any = {}, fields = []): Promise<any> {\n    const updatedRecord = Object.keys(body)\n      .filter(key => {\n        const value = body[key];\n        return !Array.isArray(value) || !Array.isArray(value);\n      })\n      .map(key => {\n        const value = body[key];\n        const valueType = typeof value;\n        if (valueType === 'string') return `${key}: \"${value}\"`;\n        return `${key}: ${value}`;\n      })\n      .join(', ');\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation {\n      ${key}( record: { ${updatedRecord} } )\n      { record { ${fieldsString} } }\n    }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n\n  private async graphDelete(key = '', id = '', fields = []): Promise<any> {\n    const fieldsString = fields.join(' ');\n    const mutation = `mutation { ${key}(_id: \"${id}\") { record { ${fieldsString} } } }`;\n    const fallback = {};\n    const { record = {} } = await this.graphql(key, mutation, fallback);\n    return record;\n  }\n  /**\n   * GraphQL Functions\n   */\n  public async count(prefix = ''): Promise<any> {\n    const key = `${prefix}Count`;\n    const query = `query { ${key} }`;\n    const fallback = 0;\n    const count = await this.graphql(key, query, fallback);\n    return count;\n  }\n\n  public async find(prefix = '', fields: Array<string> = [], options = {}): Promise<any> {\n    const key = `${prefix}Many`;\n    const list = await this.graphGet(key, fields, options);\n    return list;\n  }\n\n  public async add(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}CreateOne`;\n    const item = await this.graphPost(key, body, fields);\n    return item;\n  }\n\n  public async updateById(prefix = '', body = {}, fields = []): Promise<any> {\n    const key = `${prefix}UpdateById`;\n    const item = await this.graphPut(key, body, fields);\n    return item;\n  }\n\n  public async removeById(prefix = '', id = '', fields = []): Promise<any> {\n    const key = `${prefix}RemoveById`;\n    const item = await this.graphDelete(key, id, fields);\n    return item;\n  }\n}\n","export default class Helper {\n  public capitalize(s: string = ''): string {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  public addZero(x: number = 0): string {\n    return x > 9 ? x.toString() : `0${x}`;\n  }\n\n  public numberFormatter(x: number = 0): string {\n    return x\n      .toString()\n      .replace(/,/g, '')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  public processPeriod(period: string): any {\n    const now = Date.now();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const oneYear = oneDay * 365;\n    const oneMonth = oneDay * 30;\n    const oneWeek = oneDay * 7;\n    let unit = oneWeek;\n    if (period.includes('Y')) {\n      unit = oneYear;\n    } else if (period.includes('M')) {\n      unit = oneMonth;\n    } else if (period.includes('W')) {\n      unit = oneWeek;\n    }\n\n    const time = parseInt(period[0]) || 2;\n    const from = now - unit * time;\n\n    return { from, to: now };\n  }\n\n  public deepClone(o: any = {}): any {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  public copyToClipboard(text: string): void {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert('Text copied to clipboard');\n      })\n      .catch((err: Error) => {\n        alert(`Error in copying text: ${err.stack}`);\n      });\n  }\n}\n","import APIS from './apis';\nimport GraphQL from './graphql';\nimport Helper from './helper';\n\nconst apis: APIS = new APIS();\nconst graphql: GraphQL = new GraphQL();\nconst helper: Helper = new Helper();\n\nexport { apis, graphql, helper };\n","import React, { Component } from 'react';\n\nimport { baseAPI } from '../configs';\nimport { helper } from '../services';\n\ninterface IAPIProps {\n  method: string;\n  url: string;\n  path: string;\n}\n\nexport default class API extends Component<IAPIProps> {\n  render() {\n    const { method = '', url = '', path = '' } = this.props;\n    const api = url ? url : `${baseAPI}/${path}`;\n    return (\n      <div id=\"API\">\n        <h3 className=\"d-inline m-0 text-success text-uppercase mr-3\">{method}</h3>\n        <h5 className=\"d-inline m-0 text-secondary cursor-pointer\">\n          <span\n            onClick={() => {\n              helper.copyToClipboard(api);\n            }}>\n            {path}\n          </span>\n        </h5>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { baseAPI } from '../configs';\n\ninterface ICURLProps {\n  method?: string;\n  url?: string;\n  path?: string;\n  headers?: Array<any>;\n  query?: Array<any>;\n  body?: Array<any>;\n}\n\nexport default class CURL extends Component<ICURLProps> {\n  constructor(props: ICURLProps) {\n    super(props);\n\n    this.buildQueryString = this.buildQueryString.bind(this);\n    this.buildDataRaw = this.buildDataRaw.bind(this);\n  }\n\n  buildQueryString(query: any) {\n    return query\n      .map((item: any) => {\n        const { name, type } = item;\n        return `${name}=<${type}>`;\n      })\n      .join('&')\n      .trim();\n  }\n\n  buildDataRaw(body: any) {\n    const dataRaw: any = {};\n    for (const item of body) {\n      const { name, type } = item;\n      dataRaw[name] = `<${type}>`;\n    }\n    return JSON.stringify(dataRaw, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  render() {\n    const { method = '', url = '', path = '', headers = [], query = [], body = [] } = this.props;\n    const queryString = this.buildQueryString(query);\n    let api = url ? url : `${baseAPI}${path}`;\n    api = queryString ? `${api}?${queryString}` : api;\n    const dataRaw = this.buildDataRaw(body);\n    return (\n      <div id=\"CURL\">\n        <div className=\"p-3 bg-dark text-white rounded-lg\">\n          <pre className=\"m-0 text-white\">\n            <div>\n              curl --location --request {method} <span className=\"text-yellow\">'{api}'</span> \\\n            </div>\n            {headers.length > 0 &&\n              headers.map((header, index) => {\n                const { key, value } = header;\n                const lastFlag = headers.length - 1 === index;\n                return (\n                  <div key={index}>\n                    --header{' '}\n                    <span className=\"text-yellow\">\n                      {key}: {value}\n                    </span>{' '}\n                    {lastFlag && body.length > 0 && <span>\\</span>}\n                  </div>\n                );\n              })}\n            {body.length > 0 && (\n              <div>\n                --data-raw <span className=\"text-yellow\">'{dataRaw}'</span>\n              </div>\n            )}\n          </pre>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\ninterface ITableProps {\n  header?: string;\n  loading?: boolean;\n  caption?: string;\n  rows?: Array<any>;\n  rowConfigs?: Array<any>;\n  emptyRowsText?: string;\n}\n\nexport default class Table extends Component<ITableProps> {\n  render() {\n    const {\n      header = '',\n      loading = false,\n      caption = '',\n      rows = [],\n      rowConfigs = [],\n      emptyRowsText = 'No Data'\n    } = this.props;\n\n    return (\n      <div id=\"table\">\n        {header.length > 0 && <h5>{header}</h5>}\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && rows.length === 0 && (\n          <div className=\"border p-3 rounded-lg\">\n            <b>{emptyRowsText.toUpperCase()}</b>\n          </div>\n        )}\n        {!loading && rows.length > 0 && rowConfigs.length && (\n          <div className=\"table-responsive table-container rounded-lg\">\n            <table className=\"table\">\n              {caption.length > 0 && (\n                <caption className=\"text-center bg-danger text-white\">\n                  {caption} ({rows.length})\n                </caption>\n              )}\n              {rowConfigs.length && (\n                <thead>\n                  <tr>\n                    {rowConfigs.map((config, headerIndex) => {\n                      const { header = '' } = config;\n                      return <th key={headerIndex}>{header}</th>;\n                    })}\n                  </tr>\n                </thead>\n              )}\n              {rows.length && (\n                <tbody>\n                  {rows.map((row, rowIndex) => {\n                    return (\n                      <tr key={rowIndex}>\n                        {rowConfigs.map((config, cellIndex) => {\n                          const { key, className = '' } = config;\n                          const cell =\n                            typeof row[key] === 'boolean'\n                              ? row[key].toString()\n                              : (row[key] || '').toString();\n                          return (\n                            <td key={cellIndex} className={className}>\n                              {cell}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              )}\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport { endpoints } from '../configs';\n\nimport API from './API';\nimport CURL from './CURL';\nimport Table from './Table';\n\ninterface IDocProps {\n  header?: string;\n  group: any;\n}\n\ninterface IDocState {\n  endpoints: any;\n}\n\nexport default class Doc extends Component<IDocProps, IDocState> {\n  constructor(props: IDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderAPIs = this.renderAPIs.bind(this);\n    this.renderRequest = this.renderRequest.bind(this);\n    this.renderResponses = this.renderResponses.bind(this);\n    this.buildResponseExample = this.buildResponseExample.bind(this);\n  }\n\n  renderRequest(request: any, method: string, path: string) {\n    const { headers = [], query = [], body = [] } = request;\n    const requestRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Required', key: 'required' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    return (\n      <div id=\"DocRequest\">\n        {query.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Query String'}\n              rows={query}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Query String'}></Table>\n          </div>\n        )}\n        {body.length > 0 && (\n          <div className=\"mb-5\">\n            <Table\n              header={'Request Body'}\n              rows={body}\n              rowConfigs={requestRowConfigs}\n              emptyRowsText={'No Request Body'}></Table>\n          </div>\n        )}\n        <div className=\"mb-5\">\n          <p>Request Example</p>\n          <CURL method={method} path={path} headers={headers} body={body} query={query}></CURL>\n        </div>\n      </div>\n    );\n  }\n\n  buildResponseExample(example: any = {}): string {\n    return JSON.stringify(example, null, 2).replace(/\"</g, '<').replace(/>\"/g, '>');\n  }\n\n  renderResponses(response: any) {\n    const responseRowConfigs = [\n      { header: 'Name', key: 'name', className: 'font-weight-bold' },\n      { header: 'Type', key: 'type' },\n      { header: 'Description', key: 'description' }\n    ];\n    const responseCodes = Object.keys(response);\n    return (\n      <div id=\"DocResponses\" className=\"mb-5\">\n        <h5>Responses</h5>\n        {responseCodes.length > 0 && (\n          <Tabs defaultActiveKey=\"200\" id=\"responses-tabs\">\n            {responseCodes.map((code, index) => {\n              const { schema, example } = response[code] || {};\n              return (\n                <Tab key={index} eventKey={code} title={code} className=\"border-0\">\n                  <div className=\"mt-1\">\n                    <div className=\"mb-3\">\n                      <Table loading={false} rows={schema} rowConfigs={responseRowConfigs}></Table>\n                    </div>\n                    <p>Response Example</p>\n                    <div className=\"p-3 bg-dark text-white rounded-lg\">\n                      <pre className=\"m-0 text-yellow\">{this.buildResponseExample(example)}</pre>\n                    </div>\n                  </div>\n                </Tab>\n              );\n            })}\n          </Tabs>\n        )}\n      </div>\n    );\n  }\n\n  renderAPIs(list: Array<any>) {\n    return (\n      <div id=\"DocAPIs\">\n        {list.map((endpoint, cardIndex) => {\n          const {\n            id = '',\n            name,\n            demo = '',\n            method,\n            path = '',\n            url,\n            request = {},\n            response = {}\n          } = endpoint;\n          return (\n            <div id={id} key={cardIndex}>\n              <div className=\"pt-3\">\n                <div className=\"mb-5\">\n                  <h4 className=\"mb-3\">\n                    <b>{name}</b>\n                  </h4>\n                  <div className=\"mb-3\">\n                    <API method={method} path={path} url={url}></API>\n                  </div>\n                  {demo.length > 0 && (\n                    <p className=\"m-0\">\n                      <Link to={demo}>Demo</Link>\n                    </p>\n                  )}\n                </div>\n                {this.renderRequest(request, method, path)}\n                {this.renderResponses(response)}\n              </div>\n              <hr></hr>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const { header, group } = this.props;\n    const list = Object.values(endpoints[group]);\n    return (\n      <div id=\"Doc\">\n        <h2 className=\"mb-3\">\n          <b>{header}</b>\n        </h2>\n        {list.length > 0 && this.renderAPIs(list)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    const d = new Date();\n    const year = d.getFullYear();\n    return (\n      <div id=\"Footer\">\n        <footer className=\"fixed-bottom bg-danger pt-3 pb-3 text-white text-center shadow\">\n          &copy;{' '}\n          <a\n            href=\"https://www.linkedin.com/in/hieudoanm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-white\">\n            HIEU DOAN\n          </a>{' '}\n          {year}\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport routes from '../routers';\n\ninterface INavigationProps {}\n\ninterface INavigationState {\n  routes: Array<any>;\n}\n\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\n  constructor(props: INavigationProps) {\n    super(props);\n\n    this.state = { routes };\n  }\n\n  render() {\n    const { routes = [] } = this.state;\n\n    return (\n      <div id=\"Navigation\">\n        <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"#\" className=\"text-white\">\n              VNPM\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Item>\n                <Link className=\"text-white\" to={{ pathname: 'docs' }}>\n                  DOCS\n                </Link>\n              </Nav.Item>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Dropdown>\n                <DropdownButton variant=\"light\" menuAlign=\"right\" title=\"APIs\">\n                  {routes\n                    .filter(route => route.navigation)\n                    .map((route, index) => {\n                      const { path: pathname, text } = route;\n                      return (\n                        <Dropdown.Item key={index} as={Link} to={{ pathname }}>\n                          {text}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </DropdownButton>\n              </Dropdown>\n            </Nav>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Doc from './Doc';\nimport { endpoints } from '../configs';\n\ninterface ISmallDocProps {\n  group: string;\n  header: string;\n}\n\ninterface ISmallDocState {\n  endpoints: any;\n}\n\nexport default class SmallDoc extends Component<ISmallDocProps, ISmallDocState> {\n  constructor(props: ISmallDocProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const { group, header } = this.props;\n    const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n    return (\n      <div>\n        <h6>\n          <b>{header}</b>\n        </h6>\n        {this.renderTable(apis)}\n      </div>\n    );\n  }\n\n  render() {\n    const { endpoints } = this.state;\n    const { group, header } = this.props;\n    return (\n      <div id=\"SmallDoc\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              <Doc group={group} header={header}></Doc>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Maps extends Component {\n  render() {\n    return (\n      <div id=\"AdministrativeDivisions\" className=\"container\">\n        <SmallDoc group={'administrativeDivisions'} header={'Administrative Divisions'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Banks extends Component {\n  render() {\n    return (\n      <div id=\"Banks\" className=\"container\">\n        <SmallDoc group={'banks'} header={'Banks'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Calendar extends Component {\n  render() {\n    return (\n      <div id=\"Calendar\" className=\"container\">\n        <SmallDoc group={'calendar'} header={'Calendar'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Accordion, Button } from 'react-bootstrap';\n\nimport { helper } from '../../services';\nimport { endpoints } from '../../configs';\nimport { Doc } from '../../components';\n\ninterface IDocsProps {}\n\ninterface IDocsState {\n  endpoints: any;\n}\n\nexport default class Docs extends Component<IDocsProps, IDocsState> {\n  constructor(props: IDocsProps) {\n    super(props);\n\n    this.state = { endpoints };\n\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.scrollIntoView = this.scrollIntoView.bind(this);\n  }\n\n  scrollIntoView(id: string) {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  renderTable(apis: Array<any>) {\n    const colors: any = { get: 'text-success', post: 'text-info' };\n    return (\n      <div>\n        {apis.length > 0 && (\n          <table>\n            <tbody>\n              {apis.map((api, index) => {\n                const { id, method, name } = api;\n                const color = colors[method.toLowerCase()];\n                return (\n                  <tr\n                    onClick={() => this.scrollIntoView(id)}\n                    key={index}\n                    className=\"cursor-pointer\">\n                    <td className=\"pt-1 pb-1 pr-3\">\n                      <small className={color}>\n                        <b>{method}</b>\n                      </small>\n                    </td>\n                    <td>\n                      <small>{name}</small>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n\n  renderSidebar(endpoints: any) {\n    const groups: Array<string> = Object.keys(endpoints);\n    const list = groups.map((group: string) => {\n      const apis = Object.values(endpoints[group]).filter((api: any) => api.public);\n      return { group, apis };\n    });\n\n    return (\n      <Accordion defaultActiveKey=\"0\">\n        {list.length > 0 &&\n          list.map((item, index: number) => {\n            const { group, apis } = item;\n            const header = helper.capitalize(group);\n            return (\n              <div key={index}>\n                <Accordion.Toggle\n                  className=\"m-0 p-0 text-dark\"\n                  as={Button}\n                  variant=\"link\"\n                  eventKey={index.toString()}>\n                  {header}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index.toString()}>\n                  {this.renderTable(apis)}\n                </Accordion.Collapse>\n              </div>\n            );\n          })}\n      </Accordion>\n    );\n  }\n\n  render() {\n    const { endpoints = {} } = this.state;\n    const groups: Array<string> = Object.keys(endpoints);\n\n    return (\n      <div id=\"Docs\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3 d-none d-md-block\">\n            <div className=\"h-80vh overflow-auto\">{this.renderSidebar(endpoints)}</div>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"h-80vh overflow-auto\">\n              {groups.length > 0 &&\n                groups.map((group: string, index: number) => {\n                  return <Doc key={index} group={group} header={helper.capitalize(group)}></Doc>;\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class EthnicMinorities extends Component {\n  render() {\n    return (\n      <div id=\"EthnicMinorities\" className=\"container\">\n        <SmallDoc group={'ethnicMinorities'} header={'Ethnic Minorities'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Finance extends Component {\n  render() {\n    return (\n      <div id=\"Finance\" className=\"container\">\n        <SmallDoc group={'finance'} header={'Finance'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Government extends Component {\n  render() {\n    return (\n      <div id=\"Government\" className=\"container\">\n        <SmallDoc group={'government'} header={'Government'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class History extends Component {\n  render() {\n    return (\n      <div id=\"History\" className=\"container\">\n        <SmallDoc group={'history'} header={'History'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class LicensePlates extends Component {\n  render() {\n    return (\n      <div id=\"LicensePlates\" className=\"container\">\n        <SmallDoc group={'licensePlates'} header={'License Plates'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Music extends Component {\n  render() {\n    return (\n      <div id=\"Music\" className=\"container\">\n        <SmallDoc group={'music'} header={'Music'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div id=\"News\" className=\"container\">\n        <SmallDoc group={'news'} header={'News'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class OpenAPIs extends Component {\n  render() {\n    return (\n      <div id=\"OpenAPIs\" className=\"container\">\n        <SmallDoc group={'openAPIs'} header={'OpenAPIs'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Phones extends Component {\n  render() {\n    return (\n      <div id=\"Phones\" className=\"container\">\n        <SmallDoc group={'phones'} header={'Phones'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Sports extends Component {\n  render() {\n    return (\n      <div id=\"Sports\" className=\"container\">\n        <SmallDoc group={'sports'} header={'Sports'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class Weather extends Component {\n  render() {\n    return (\n      <div id=\"Weather\" className=\"container\">\n        <SmallDoc group={'weather'} header={'Weather'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { SmallDoc } from '../../components';\n\nexport default class YouTube extends Component {\n  render() {\n    return (\n      <div id=\"YouTube\" className=\"container\">\n        <SmallDoc group={'youtube'} header={'YouTube'}></SmallDoc>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsDistrictsProps {}\n\ninterface IMapsDistrictsState {\n  provinces: Array<any>;\n  province_id: string;\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsDistricts extends Component<IMapsDistrictsProps, IMapsDistrictsState> {\n  constructor(props: IMapsDistrictsProps) {\n    super(props);\n\n    this.state = { provinces: [], province_id: '', districts: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n    this.getDistricts = this.getDistricts.bind(this);\n    this.updateProvince = this.updateProvince.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n    const { provinces } = this.state;\n    const [province = {}] = provinces;\n    const { province_id } = province;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  async getProvinces() {\n    const provinces = await apis.getProvinces();\n    await this.setState({ provinces });\n  }\n\n  async getDistricts() {\n    const { province_id } = this.state;\n    await this.setState({ loading: true });\n    const districts = await apis.getDistricts(province_id);\n    await this.setState({ districts, loading: false });\n  }\n\n  async updateProvince(event: any) {\n    const { value: province_id } = event.target;\n    await this.setState({ province_id });\n    await this.getDistricts();\n  }\n\n  render() {\n    const { provinces = [], districts = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Level', key: 'level' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsDistricts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={this.state.province_id}\n                  onChange={this.updateProvince}>\n                  {provinces.map((province, index) => {\n                    return (\n                      <option key={index} value={province.province_id}>\n                        {province.name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsPostalCodesProps {}\n\ninterface IMapsPostalCodesState {\n  postalCodes: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsPostalCodes extends Component<\n  IMapsPostalCodesProps,\n  IMapsPostalCodesState\n> {\n  constructor(props: IMapsPostalCodesProps) {\n    super(props);\n\n    this.state = { postalCodes: [], loading: true };\n\n    this.getPostalCodes = this.getPostalCodes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPostalCodes();\n  }\n\n  async getPostalCodes() {\n    await this.setState({ loading: true });\n    const postalCodes = await apis.getPostalCodes();\n    await this.setState({ postalCodes, loading: false });\n  }\n\n  render() {\n    const { postalCodes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Code', key: 'code' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsPostalCodes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Postal Codes'}\n              rows={postalCodes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsProvincesProps {}\n\ninterface IMapsProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class MapsProvinces extends Component<IMapsProvincesProps, IMapsProvincesState> {\n  constructor(props: IMapsProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getProvinces = this.getProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getProvinces();\n  }\n\n  async getProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Capital', key: 'capital' },\n      { header: 'Macro Region', key: 'macroRegion' },\n      { header: 'Region', key: 'region' }\n    ];\n    return (\n      <div id=\"MapsProvinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Pagination } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IMapsWardsProps {}\n\ninterface IMapsWardsState {\n  wards: Array<any>;\n  loading: boolean;\n  total: number;\n  active: number;\n}\n\nexport default class MapsWards extends Component<IMapsWardsProps, IMapsWardsState> {\n  constructor(props: IMapsWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true, total: 0, active: 1 };\n\n    this.getWards = this.getWards.bind(this);\n    this.getTotalWards = this.getTotalWards.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n    this.updateActive = this.updateActive.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTotalWards();\n    await this.getWards();\n  }\n\n  async getWards(page: number = 0) {\n    this.setState({ loading: true });\n    const skip: number = page * 100;\n    const wards = await apis.getWards(skip);\n    this.setState({ wards, loading: false });\n  }\n\n  async getTotalWards() {\n    const total: number = await apis.getTotalWards();\n    this.setState({ total });\n  }\n\n  async goToPage(page: number) {\n    await this.setState({ active: page });\n    await this.getWards(page - 1);\n  }\n\n  async updateActive(value: number) {\n    let { active } = this.state;\n    active += value;\n    await this.setState({ active });\n    await this.getWards(active - 1);\n  }\n\n  renderPagination() {\n    const { total, active } = this.state;\n\n    if (!total) return '';\n\n    const max: number = Math.floor(total / 100);\n\n    const final: number = active + 10 < max ? active + 10 : max;\n    const start: number = final === max ? max - 10 : active;\n    const items: Array<any> = [];\n    for (let page = start; page <= final; page++) {\n      items.push(\n        <Pagination.Item key={page} active={page === active} onClick={() => this.goToPage(page)}>\n          {page}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <Pagination size=\"sm\" className=\"justify-content-center\">\n        {active !== 1 && (\n          <Pagination.Item key={1} onClick={() => this.goToPage(1)}>\n            1\n          </Pagination.Item>\n        )}\n        {active !== 1 && <Pagination.Prev onClick={() => this.updateActive(1)} />}\n        {items}\n        {final !== max && <Pagination.Next onClick={() => this.updateActive(1)} />}\n        {final !== max && (\n          <Pagination.Item key={max} onClick={() => this.goToPage(max)}>\n            {max}\n          </Pagination.Item>\n        )}\n      </Pagination>\n    );\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n    const rowConfigs: Array<any> = [\n      { header: 'Ward', key: 'ward' },\n      { header: 'District', key: 'district' },\n      { header: 'Province', key: 'province' }\n    ];\n    return (\n      <div id=\"MapsWards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {this.renderPagination()}\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksForexProps {}\n\ninterface IBanksForexState {\n  data: Array<any>;\n  currency: string;\n  currencies: Array<string>;\n  loading: boolean;\n  sortBy: string;\n  sortDir: number;\n}\n\nexport default class BanksForex extends Component<IBanksForexProps, IBanksForexState> {\n  constructor(props: IBanksForexProps) {\n    super(props);\n\n    this.state = { data: [], currency: '', currencies: [], loading: false, sortBy: '', sortDir: 1 };\n\n    this.getBanksForexRates = this.getBanksForexRates.bind(this);\n    this.sort = this.sort.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.updateCurrency = this.updateCurrency.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getBanksForexRates();\n  }\n\n  async getBanksForexRates() {\n    await this.setState({ loading: true });\n    const { data, currency, currencies } = await apis.getBanksForexRates();\n    await this.setState({ data, currency, currencies, loading: false });\n  }\n\n  async sort(by: string) {\n    const { data = [], currency = '', sortDir = 1, sortBy = '' } = this.state;\n    const dir = sortDir * (by === sortBy ? -1 : 1);\n    await this.setState({ sortBy: by, sortDir: dir });\n    if (by === 'bank') {\n      data.sort((a, b) => dir * (a.bank > b.bank ? 1 : -1));\n    } else if (by === 'buyCash') {\n      data.sort((a, b) => {\n        const aItem = a.buyCash[currency] || 0;\n        const bItem = b.buyCash[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'sellCash') {\n      data.sort((a, b) => {\n        const aItem = a.sellCash[currency] || 0;\n        const bItem = b.sellCash[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'buyTransfer') {\n      data.sort((a, b) => {\n        const aItem = a.buyTransfer[currency] || 0;\n        const bItem = b.buyTransfer[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    } else if (by === 'sellTransfer') {\n      data.sort((a, b) => {\n        const aItem = a.sellTransfer[currency] || 0;\n        const bItem = b.sellTransfer[currency] || 0;\n        return dir * (aItem > bItem ? 1 : -1);\n      });\n    }\n\n    await this.setState({ data });\n  }\n\n  async updateCurrency(event: any) {\n    const { value: currency } = event.target;\n    await this.setState({ currency });\n  }\n\n  renderForm(currencies: Array<any>) {\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"currency\"\n            value={this.state.currency}\n            onChange={this.updateCurrency}>\n            {currencies.map((currency, index) => {\n              return (\n                <option key={index} value={currency}>\n                  {currency.toUpperCase()}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const { currency = '', currencies = [], data = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksForex\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n\n            {!loading && this.renderForm(currencies)}\n            {!loading && (\n              <div className=\"table-responsive table-container\">\n                <table className=\"table\">\n                  <caption className=\"bg-danger text-center text-white\">\n                    Banks ({data.length})\n                  </caption>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('bank')}>\n                          Bank\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buyCash')}>\n                          Buy (Cash)\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('buyTransfer')}>\n                          Buy (Transfer)\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sellCash')}>\n                          Sell (Cash)\n                        </span>\n                      </th>\n                      <th>\n                        <span className=\"cursor-pointer\" onClick={() => this.sort('sellTransfer')}>\n                          Sell (Transfer)\n                        </span>\n                      </th>\n                      <th>Last Updated At</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.length\n                      ? data.map((item, index) => {\n                          const {\n                            bank = '',\n                            time = '',\n                            buyCash = {},\n                            buyTransfer = {},\n                            sellCash = {},\n                            sellTransfer = {}\n                          } = item;\n                          const buyCashText: string = buyCash[currency] || '';\n                          const buyTransferText: string = buyTransfer[currency] || '';\n                          const sellCashText: string = sellCash[currency] || '';\n                          const sellTransferText: string = sellTransfer[currency] || '';\n                          const displayFlag: boolean =\n                            buyCashText !== '' ||\n                            buyTransferText !== '' ||\n                            sellCashText !== '' ||\n                            sellTransferText !== '';\n                          return displayFlag ? (\n                            <tr key={index}>\n                              <td>{index + 1}</td>\n                              <td>{bank}</td>\n                              <td>{buyCashText}</td>\n                              <td>{buyTransferText}</td>\n                              <td>{sellCashText}</td>\n                              <td>{sellTransferText}</td>\n                              <td>{time}</td>\n                            </tr>\n                          ) : (\n                            ''\n                          );\n                        })\n                      : ''}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { apis, graphql, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IBanksHistoryProps {}\n\ninterface IBanksHistoryState {\n  bank: string;\n  loading: boolean;\n  banks: Array<any>;\n  currency: string;\n  currencies: Array<any>;\n  data: any;\n}\n\nexport default class BanksHistory extends Component<IBanksHistoryProps, IBanksHistoryState> {\n  constructor(props: IBanksHistoryProps) {\n    super(props);\n    this.state = { loading: false, bank: '', banks: [], currency: '', currencies: [], data: {} };\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.getForexRates = this.getForexRates.bind(this);\n    this.processRates = this.processRates.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n    await this.getForexRates();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    const bank: string = banks[0] || '';\n    await this.setState({ bank, banks, loading: false });\n  }\n\n  async getForexRates() {\n    const { bank = '' } = this.state;\n\n    if (!bank) return;\n    const options = { sort: 'TIMESTAMP_ASC', filter: { bank } };\n    const data = await graphql.find(\n      'financeForexRate',\n      ['bank', 'date', 'month', 'year', 'hour', 'minute', 'rates'],\n      options\n    );\n\n    const { rates = [] } = data[0];\n    const currencies = rates.map((rate: any) => rate.code).sort();\n    const currency = currencies[0] || '';\n\n    const labels = data.map((item: any) => {\n      const { year, month, date, hour, minute } = item;\n      return `${year}/${month}/${date} ${hour}:${minute}`;\n    });\n\n    const datasets = this.processRates(data, currency);\n\n    await this.setState({ currencies, currency, data: { labels, datasets } });\n  }\n\n  processRates(data: any, currency: string) {\n    const rates = data.map((item: any) => {\n      const { rates } = item;\n      const rate = rates.find((rate: any) => rate.code === currency);\n      const { buy, sell, transfer } = rate;\n      return { buy, sell, transfer };\n    });\n\n    const buyData = rates.map((rate: any) => rate.buy);\n    const transferData = rates.map((rate: any) => rate.transfer);\n    const sellData = rates.map((rate: any) => rate.sell);\n\n    const lines = ['buy', 'transfer', 'sell'];\n\n    return [buyData, transferData, sellData].map((data, index) => {\n      const label = lines[index];\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  render() {\n    const {\n      bank = '',\n      banks = [],\n      currency = '',\n      currencies = [],\n      data = {},\n      loading = false\n    } = this.state;\n\n    return (\n      <div id=\"BanksHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title>History</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={bank} value={this.state.bank}>\n                    {banks.map((bank, index) => {\n                      return (\n                        <option key={index} value={bank}>\n                          {bank}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control as=\"select\" defaultValue={currency} value={this.state.currency}>\n                    {currencies.map((currency, index) => {\n                      return (\n                        <option key={index} value={currency}>\n                          {currency}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IBanksListProps {}\n\ninterface IBanksListState {\n  banks: Array<string>;\n  loading: boolean;\n}\n\nexport default class BanksList extends Component<IBanksListProps, IBanksListState> {\n  constructor(props: IBanksListProps) {\n    super(props);\n\n    this.state = { banks: [], loading: false };\n\n    this.getForexBanks = this.getForexBanks.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.syncForexRates = this.syncForexRates.bind(this);\n    this.syncAll = this.syncAll.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getForexBanks();\n  }\n\n  async getForexBanks() {\n    await this.setState({ loading: true });\n    const banks = await apis.getForexBanks();\n    await this.setState({ banks, loading: false });\n  }\n\n  async syncForexRates(id: string) {\n    const message = await apis.syncForexRates(id);\n    alert(message);\n  }\n\n  async syncAll() {\n    const { banks = [] } = this.state;\n    for (const bank of banks) {\n      const message: string = await apis.syncForexRates(bank);\n      console.log(bank, message);\n    }\n  }\n\n  renderTable(loading: boolean, banks: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>\n                    <Button variant=\"danger\" onClick={() => this.syncAll()}>\n                      SYNC ALL\n                    </Button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {banks.length\n                  ? banks.map((bank, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{bank}</td>\n                          <td>\n                            <Button variant=\"danger\" onClick={() => this.syncForexRates(bank)}>\n                              SYNC\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { banks = [], loading = false } = this.state;\n\n    return (\n      <div id=\"BanksList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Banks ({banks.length})</Card.Title>\n            {this.renderTable(loading, banks)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { months } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface ICalendarConverterProps {}\n\ninterface ICalendarConverterState {\n  solarDate: string;\n  solarString: string;\n  lunarDate: string;\n  lunarString: string;\n}\n\nexport default class CalendarConverter extends Component<\n  ICalendarConverterProps,\n  ICalendarConverterState\n> {\n  private loadingText: string = 'LOADING ...';\n\n  constructor(props: ICalendarConverterProps) {\n    super(props);\n\n    this.state = {\n      solarDate: '',\n      solarString: this.loadingText,\n      lunarDate: '',\n      lunarString: this.loadingText\n    };\n\n    this.updateSolarDate = this.updateSolarDate.bind(this);\n    this.buildSolarString = this.buildSolarString.bind(this);\n    this.updateLunarDate = this.updateLunarDate.bind(this);\n    this.buildLunarString = this.buildLunarString.bind(this);\n  }\n\n  async componentDidMount() {\n    const d = new Date();\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const monthString = helper.addZero(month);\n    const date = d.getDate();\n    const dateString = helper.addZero(date);\n    const solarDate = `${year}-${monthString}-${dateString}`;\n    const solarString = this.buildSolarString(year, month, date);\n\n    await this.setState({ solarDate, solarString });\n\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    await this.setState({ lunarDate, lunarString });\n  }\n\n  buildSolarString(year: number, month: number, date: number) {\n    return `${helper.capitalize(months[month - 1].name)} ${date}, ${year}`;\n  }\n\n  async buildLunarString(year: number, month: number, date: number) {\n    const canChi: string = await apis.getCanChi(year, month, date);\n    return helper.capitalize(canChi);\n  }\n\n  async updateSolarDate(event: any) {\n    const { value: solarDate } = event.target;\n    const [year, month, date] = solarDate.split('-');\n    const solarString = this.buildSolarString(year, parseInt(month, 10), date);\n\n    await this.setState({ solarDate, solarString, lunarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertSolarToLunar(year, month, date);\n    const lunarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const lunarString = await this.buildLunarString(yyyy, mm, dd);\n\n    this.setState({ lunarDate, lunarString });\n  }\n\n  async updateLunarDate(event: any) {\n    const { value: lunarDate } = event.target;\n    const [year, month, date] = lunarDate.split('-');\n    const lunarString = await this.buildLunarString(year, month, date);\n\n    await this.setState({ lunarDate, lunarString, solarString: this.loadingText });\n    const { year: yyyy, month: mm, date: dd } = await apis.convertLunarToSolar(year, month, date);\n    const solarDate = `${yyyy}-${helper.addZero(mm)}-${helper.addZero(dd)}`;\n    const solarString = this.buildSolarString(yyyy, mm, dd);\n\n    this.setState({ solarDate, solarString });\n  }\n\n  render() {\n    const { solarDate = '', solarString = '', lunarDate = '', lunarString = '' } = this.state;\n\n    return (\n      <div id=\"CalendarConverter\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Calendar</Card.Title>\n            <Form>\n              <Form.Group controlId=\"SolarDate\">\n                <Form.Label>Solar Date: {solarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Solar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={solarDate}\n                  onChange={this.updateSolarDate}\n                />\n              </Form.Group>\n              <hr></hr>\n              <Form.Group controlId=\"LunarDate\">\n                <Form.Label>Lunar Date: {lunarString}</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Lunar Date\"\n                  pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                  value={lunarDate}\n                  onChange={this.updateLunarDate}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IFinanceCompaniesProps {}\n\ninterface IFinanceCompaniesState {\n  companies: Array<any>;\n  loading: boolean;\n}\n\nexport default class FinanceCompanies extends Component<\n  IFinanceCompaniesProps,\n  IFinanceCompaniesState\n> {\n  constructor(props: IFinanceCompaniesProps) {\n    super(props);\n\n    this.state = { companies: [], loading: false };\n\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    this.setState({ companies, loading: false });\n  }\n\n  render() {\n    const { companies = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Symbol', key: 'symbol' },\n      { header: 'Name', key: 'name' },\n      { header: 'Group', key: 'group' },\n      { header: 'Industry', key: 'industry' },\n      { header: 'Sub Sector', key: 'subsector' },\n      { header: 'Basic P/E', key: 'basicPE' },\n      { header: 'Diluted P/E', key: 'dilutedPE' },\n      { header: 'P/B', key: 'PB' },\n      { header: 'P/S', key: 'PS' }\n    ];\n    return (\n      <div id=\"FinanceCompanies\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Companies'}\n              rows={companies}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceHighlightsProps {}\n\ninterface IFinanceHighlightsState {\n  loading: boolean;\n  highlights: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHighlights extends Component<\n  IFinanceHighlightsProps,\n  IFinanceHighlightsState\n> {\n  constructor(props: IFinanceHighlightsProps) {\n    super(props);\n\n    this.state = { loading: false, highlights: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockHighlights();\n  }\n\n  async getStockHighlights() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const highlights = await apis.getStockHighlights(from, to);\n    this.setState({ highlights, loading: false });\n  }\n\n  renderTable(loading: boolean, highlights: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Highlights ({highlights.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {highlights.length\n                  ? highlights.map((highlight, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = highlight;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, highlights = [] } = this.state;\n    return (\n      <div id=\"FinanceHighlights\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\"></Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, highlights)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\nconst datasetsOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  borderColor: 'rgba(75,192,192,1)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10\n};\n\nconst chartOptions = {\n  responsive: true,\n  annotation: {\n    annotations: [\n      {\n        drawTime: 'afterDraw',\n        type: 'line',\n        mode: 'horizontal',\n        scaleID: 'y-axis-0',\n        value: 70,\n        borderColor: '#000000',\n        borderWidth: 2,\n        label: {\n          backgroundColor: 'red',\n          content: 'global plugin',\n          enabled: true,\n          position: 'center'\n        }\n      }\n    ]\n  }\n};\n\ninterface IFinanceHistoryProps {}\n\ninterface IFinanceHistoryState {\n  loading: boolean;\n  data: any;\n  symbols: Array<any>;\n  symbol: string;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinanceHistory extends Component<IFinanceHistoryProps, IFinanceHistoryState> {\n  constructor(props: IFinanceHistoryProps) {\n    super(props);\n\n    this.state = { loading: false, data: {}, symbols: [], symbol: '', from: 0, to: 0, period: '' };\n\n    this.updateSymbol = this.updateSymbol.bind(this);\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.processLabels = this.processLabels.bind(this);\n    this.processDatasets = this.processDatasets.bind(this);\n    this.getStockCompanies = this.getStockCompanies.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getStockCompanies();\n    const period = '1M';\n    const symbol = 'VIC';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to, symbol });\n    await this.getStockHistory();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ period, from, to });\n    await this.getStockHistory();\n  }\n\n  async updateSymbol(event: any) {\n    const { value: symbol } = event.target;\n    await this.setState({ symbol });\n    await this.getStockHistory();\n  }\n\n  async getStockCompanies() {\n    this.setState({ loading: true });\n    const companies = await apis.getStockCompanies();\n    const symbols = companies.map((company: any) => company.symbol);\n    const symbol = symbols[0];\n    this.setState({ symbols, symbol, loading: false });\n  }\n\n  async getStockHistory() {\n    const { from = 0, to = 0, symbol = '' } = this.state;\n    const result = await apis.getStockHistory(symbol, from, to);\n    const labels = this.processLabels(result);\n    const datasets = this.processDatasets(labels, result);\n    this.setState({ data: { labels, datasets }, loading: false });\n  }\n\n  processDatasets(historyLabels: Array<any>, historyData: Array<any>) {\n    const datasets = historyData.map((item: any) => {\n      const { history = [], symbol: label = '' } = item;\n      const data = historyLabels.map(label => {\n        const [yyyy, mm, dd] = label.split('/');\n        const year = parseInt(yyyy);\n        const month = parseInt(mm);\n        const date = parseInt(dd);\n        let { close = 0 } =\n          history.find((i: any) => i.year === year && i.month === month && i.date === date) || {};\n        return close;\n      });\n      return { label, data };\n    });\n\n    return datasets.map((item: any) => {\n      const { label = '', data = [] } = item;\n\n      return helper.deepClone(\n        Object.assign(datasetsOptions, {\n          label,\n          data\n        })\n      );\n    });\n  }\n\n  processLabels(data: Array<any>) {\n    let labels: Array<string> = [];\n    for (const item of data) {\n      const { history = [] } = item;\n      const _labels: Array<string> = history.map((value: any) => {\n        const { timestamp } = value;\n        const d = new Date(timestamp);\n        const year = helper.addZero(d.getFullYear());\n        const month = helper.addZero(d.getMonth() + 1);\n        const date = helper.addZero(d.getDate());\n        return `${year}/${month}/${date}`;\n      });\n      labels = labels.concat(_labels);\n    }\n\n    return labels.filter((value, index, array) => array.indexOf(value) === index).sort();\n  }\n\n  render() {\n    const { loading = false, data = {}, symbols = [], symbol = '' } = this.state;\n    return (\n      <div id=\"FinanceHistory\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">History ({symbol})</Card.Title>\n            <Form className=\"row\">\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"1M\"\n                    value={this.state.period}\n                    onChange={this.updatePeriod}>\n                    {periods.map((period, index) => {\n                      const { label, value } = period;\n                      return (\n                        <option key={index} value={value}>\n                          {label}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-6\">\n                <Form.Group>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"VIC\"\n                    value={this.state.symbol}\n                    onChange={this.updateSymbol}>\n                    {symbols.map((symbol, index) => {\n                      return (\n                        <option key={index} value={symbol}>\n                          {symbol}\n                        </option>\n                      );\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </Form>\n            {loading && (\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n              </div>\n            )}\n            {!loading ? <Line data={data} options={chartOptions}></Line> : ''}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { periods } from '../../../configs';\nimport { apis, helper } from '../../../services';\n\ninterface IFinancePotentialsProps {}\n\ninterface IFinancePotentialsState {\n  loading: boolean;\n  potentials: Array<any>;\n  from: number;\n  to: number;\n  period: string;\n}\n\nexport default class FinancePotentials extends Component<\n  IFinancePotentialsProps,\n  IFinancePotentialsState\n> {\n  constructor(props: IFinancePotentialsProps) {\n    super(props);\n\n    this.state = { loading: false, potentials: [], from: 0, to: 0, period: '' };\n\n    this.updatePeriod = this.updatePeriod.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    const period = '1M';\n    const { from, to } = helper.processPeriod(period);\n    await this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async updatePeriod(event: any) {\n    const { value: period } = event.target;\n    const { from, to } = helper.processPeriod(period);\n    this.setState({ from, to });\n    await this.getStockPotentials();\n  }\n\n  async getStockPotentials() {\n    const { from = 0, to = 0 } = this.state;\n    this.setState({ loading: true });\n    const potentials = await apis.getStockPotentials(from, to);\n    this.setState({ potentials, loading: false });\n  }\n\n  renderTable(loading: boolean, potentials: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading ? (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-white text-center bg-danger\">\n                Potentials ({potentials.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Name</th>\n                  <th>Latest</th>\n                  <th>Diff</th>\n                  <th>Median</th>\n                  <th>Average</th>\n                  <th>Middle</th>\n                </tr>\n              </thead>\n              <tbody>\n                {potentials.length\n                  ? potentials.map((potential, index) => {\n                      const {\n                        symbol = '',\n                        group = '',\n                        startDate = '',\n                        name = '',\n                        industry = '',\n                        subsector = '',\n                        low = false,\n                        latest,\n                        latestDate,\n                        min,\n                        minDate,\n                        max,\n                        maxDate,\n                        diff,\n                        diffToMin,\n                        diffToMax,\n                        median,\n                        average,\n                        middle\n                      } = potential;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <div>{symbol}</div>\n                            <div>{group}</div>\n                            <div>{startDate}</div>\n                          </td>\n                          <td>\n                            <div>{name}</div>\n                            <div>{industry}</div>\n                            <div>{subsector}</div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>\n                                {latest} ({latestDate})\n                              </div>\n                              <div>\n                                {min} ({minDate})\n                              </div>\n                              <div>\n                                {max} ({maxDate})\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <div className={low ? 'text-danger' : 'text-success'}>\n                              <div>{diff}</div>\n                              <div>{diffToMin}</div>\n                              <div>{diffToMax}</div>\n                            </div>\n                          </td>\n                          <td>{median}</td>\n                          <td>{average}</td>\n                          <td>{middle}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { loading = false, potentials = [] } = this.state;\n    return (\n      <div id=\"FinancePotentials\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"1M\"\n                  value={this.state.period}\n                  onChange={this.updatePeriod}>\n                  {periods.map((period, index) => {\n                    const { label, value } = period;\n                    return (\n                      <option key={index} value={value}>\n                        {label}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            {this.renderTable(loading, potentials)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Card, Form } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface IFinanceProfitProps {}\n\ninterface IFinanceProfitState {\n  buy: number;\n  sell: number;\n  volume: number;\n  profit: number;\n}\n\nexport default class FinanceProfit extends Component<IFinanceProfitProps, IFinanceProfitState> {\n  constructor(props: IFinanceProfitProps) {\n    super(props);\n\n    this.state = { buy: 0, sell: 0, volume: 0, profit: 0 };\n\n    this.calculateProfit = this.calculateProfit.bind(this);\n    this.updateBuy = this.updateBuy.bind(this);\n    this.updateSell = this.updateSell.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  updateBuy(event: any) {\n    const { value } = event.target;\n    const buy = parseFloat(value);\n    this.setState({ buy });\n  }\n\n  updateSell(event: any) {\n    const { value } = event.target;\n    const sell = parseFloat(value);\n    this.setState({ sell });\n  }\n\n  updateVolume(event: any) {\n    const { value } = event.target;\n    const volume = parseFloat(value);\n    this.setState({ volume });\n  }\n\n  async calculateProfit(event: any) {\n    event.preventDefault();\n    const { buy = 0, sell = 0, volume = 0 } = this.state;\n    const profit = await apis.calculateProfit(buy, sell, volume);\n    this.setState({ profit });\n  }\n\n  render() {\n    const { buy = 0, sell = 0, volume = 0, profit = 0 } = this.state;\n    return (\n      <div id=\"FinanceProfit\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form onSubmit={this.calculateProfit} className=\"row\">\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Buy: {helper.numberFormatter(buy * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Buy\"\n                    className=\"text-center\"\n                    value={this.state.buy}\n                    onChange={this.updateBuy}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Sell: {helper.numberFormatter(sell * volume)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Sell\"\n                    className=\"text-center\"\n                    value={this.state.sell}\n                    onChange={this.updateSell}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-4\">\n                <Form.Group>\n                  <Form.Label>Volume - Profit: {helper.numberFormatter(profit)}</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Volume\"\n                    className=\"text-center\"\n                    value={this.state.volume}\n                    onChange={this.updateVolume}></Form.Control>\n                </Form.Group>\n              </div>\n              <div className=\"col-sm-12\">\n                <Button variant=\"danger\" type=\"submit\" className=\"form-control\">\n                  Calculate\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis, helper } from '../../../services';\n\ninterface INewsFeedProps {}\n\ninterface INewsFeedState {\n  category: string;\n  categories: Array<any>;\n  source: string;\n  sources: Array<any>;\n  articles: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsFeed extends Component<INewsFeedProps, INewsFeedState> {\n  constructor(props: INewsFeedProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      category: '',\n      categories: [],\n      source: '',\n      sources: [],\n      articles: []\n    };\n\n    this.getCategories = this.getCategories.bind(this);\n    this.getSources = this.getSources.bind(this);\n    this.getArticles = this.getArticles.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.updateSource = this.updateSource.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getCategories();\n    await this.getSources();\n    await this.getArticles();\n  }\n\n  async getCategories() {\n    const categories = await apis.getCategories();\n    const [category = ''] = categories;\n    this.setState({ category, categories });\n  }\n\n  async getSources() {\n    const sources = await apis.getSources();\n    const [source = {}] = sources;\n    const { id } = source;\n    this.setState({ source: id, sources });\n  }\n\n  async updateCategory(event: any) {\n    const { value: category } = event.target;\n    this.setState({ category });\n    await this.getArticles();\n  }\n\n  async updateSource(event: any) {\n    const { value: source } = event.target;\n    this.setState({ source });\n    await this.getArticles();\n  }\n\n  async getArticles() {\n    const { category = '', source = '' } = this.state;\n    await this.setState({ loading: true });\n    const articles = await apis.getArticles({ category, source });\n    this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], categories = [], sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsFeed\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <div className=\"row mb-3\">\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.category}\n                      onChange={this.updateCategory}>\n                      {categories.map((category, index) => {\n                        return (\n                          <option key={index} value={category}>\n                            {helper.capitalize(category)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      defaultValue=\"latest\"\n                      value={this.state.source}\n                      onChange={this.updateSource}>\n                      {sources.map((source, index) => {\n                        return (\n                          <option key={index} value={source.id}>\n                            {source.name}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </div>\n              </div>\n              <ListGroup className=\"mt-3\">\n                {loading && (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                  </div>\n                )}\n                {!loading &&\n                  articles.length !== 0 &&\n                  articles.map((article = {}, index) => {\n                    const {\n                      title = '',\n                      url = '',\n                      source = '',\n                      dateTimeString = '',\n                      description = ''\n                    } = article;\n                    return (\n                      <ListGroup.Item key={index}>\n                        <Card.Title>\n                          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                            {title}\n                          </a>\n                        </Card.Title>\n                        <Card.Subtitle className=\"d-block text-muted mb-1\">\n                          {source && <small>{source}</small>} -\n                          {dateTimeString && <small>{dateTimeString}</small>}\n                        </Card.Subtitle>\n                        <Card.Text>{description}</Card.Text>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Badge, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsSourcesProps {}\n\ninterface INewsSourcesState {\n  sources: Array<any>;\n  loading: boolean;\n}\n\nexport default class NewsSources extends Component<INewsSourcesProps, INewsSourcesState> {\n  constructor(props: INewsSourcesProps) {\n    super(props);\n\n    this.state = { sources: [], loading: true };\n\n    this.getSources = this.getSources.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSources();\n  }\n\n  async getSources() {\n    this.setState({ loading: true });\n    const sources = await apis.getSources();\n    this.setState({ sources, loading: false });\n  }\n\n  renderTable(loading: boolean, sources: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center text-white bg-danger\">\n                Sources ({sources.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Categories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sources.length\n                  ? sources.map((source, index) => {\n                      const {\n                        id = '',\n                        name = '',\n                        url = '',\n                        category = '',\n                        categories = []\n                      } = source;\n                      return (\n                        <tr key={index}>\n                          <td>{id}</td>\n                          <td>\n                            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{category}</td>\n                          <td>\n                            {categories.map((category: string, index: number) => {\n                              return (\n                                <Badge key={index} variant=\"danger\" className=\"text-white mr-1\">\n                                  {category}\n                                </Badge>\n                              );\n                            })}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { sources = [], loading } = this.state;\n\n    return (\n      <div id=\"NewsSources\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, sources)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface INewsTrendsProps {}\n\ninterface INewsTrendsState {\n  trends: Array<any>;\n}\n\nexport default class NewsTrends extends Component<INewsTrendsProps, INewsTrendsState> {\n  constructor(props: INewsTrendsProps) {\n    super(props);\n\n    this.state = { trends: [] };\n\n    this.getGoogleTrends = this.getGoogleTrends.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGoogleTrends();\n  }\n\n  async getGoogleTrends() {\n    const trends = await apis.getGoogleTrends();\n    this.setState({ trends });\n  }\n\n  render() {\n    const { trends = [] } = this.state;\n\n    return (\n      <div id=\"NewsTrends\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Trends ({trends.length})</Card.Title>\n            {trends.length !== 0 &&\n              trends.map((trend, index) => {\n                const { text, url } = trend;\n                return (\n                  <Badge key={index} variant=\"danger\" className=\"mr-1\">\n                    <a\n                      key={index}\n                      href={url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\" text-white\">\n                      {text}\n                    </a>\n                  </Badge>\n                );\n              })}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IPhonesPrefixesProps {}\n\ninterface IPhonesPrefixesState {\n  prefixes: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesPrefixes extends Component<IPhonesPrefixesProps, IPhonesPrefixesState> {\n  constructor(props: IPhonesPrefixesProps) {\n    super(props);\n\n    this.state = { prefixes: [], loading: true };\n\n    this.getPhonesPrefixes = this.getPhonesPrefixes.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesPrefixes();\n  }\n\n  async getPhonesPrefixes() {\n    await this.setState({ loading: true });\n    const prefixes = await apis.getPhonesPrefixes();\n    await this.setState({ prefixes, loading: false });\n  }\n\n  render() {\n    const { prefixes = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'Prefix', key: 'prefix' },\n      { header: 'Provider', key: 'provider' },\n      { header: 'Provider ID', key: 'provider_id' }\n    ];\n    return (\n      <div id=\"PhonesPrefixes\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Phone Prefixes'}\n              rows={prefixes}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IPhonesProvidersProps {}\n\ninterface IPhonesProvidersState {\n  providers: Array<any>;\n  loading: boolean;\n}\n\nexport default class PhonesProviders extends Component<\n  IPhonesProvidersProps,\n  IPhonesProvidersState\n> {\n  constructor(props: IPhonesProvidersProps) {\n    super(props);\n\n    this.state = { providers: [], loading: true };\n\n    this.getPhonesProviders = this.getPhonesProviders.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPhonesProviders();\n  }\n\n  async getPhonesProviders() {\n    this.setState({ loading: true });\n\n    const providers = await apis.getPhonesProviders();\n\n    this.setState({ providers, loading: false });\n  }\n\n  renderTable(loading: boolean, providers: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"bg-danger text-center text-white\">\n                Providers ({providers.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Prefixes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {providers.length\n                  ? providers.map((provider, index) => {\n                      const { provider: _provider = '', prefixes = [] } = provider;\n                      return (\n                        <tr key={index}>\n                          <td>{_provider}</td>\n                          <td>{prefixes.join(' - ')}</td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { providers = [], loading = true } = this.state;\n\n    return (\n      <div id=\"PhonesProviders\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>{this.renderTable(loading, providers)}</Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IYouTubeTrendingProps {}\n\ninterface IYouTubeTrendingState {\n  categoryId: string;\n  categories: Array<any>;\n  mapCategories: any;\n  trending: Array<any>;\n  loading: boolean;\n}\n\nexport default class YouTubeTrending extends Component<\n  IYouTubeTrendingProps,\n  IYouTubeTrendingState\n> {\n  constructor(props: IYouTubeTrendingProps) {\n    super(props);\n\n    this.state = {\n      categoryId: '',\n      categories: [],\n      mapCategories: {},\n      trending: [],\n      loading: true\n    };\n\n    this.getYouTubeTrending = this.getYouTubeTrending.bind(this);\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n    this.updateVideoCategory = this.updateVideoCategory.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n    await this.getYouTubeTrending();\n  }\n\n  async getYouTubeVideoCategories() {\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    const mapCategories: any = {};\n    for (const videoCategory of categories) {\n      const { id, title } = videoCategory;\n      mapCategories[id] = title;\n    }\n    this.setState({ categories, mapCategories });\n  }\n\n  async getYouTubeTrending(categoryId: number = 0) {\n    const { mapCategories = {} } = this.state;\n    this.setState({ loading: true });\n    const videos: Array<any> = await apis.getYouTubeTrending(categoryId);\n    const trending = videos.map(video => {\n      const { categoryId } = video;\n      const category: string = mapCategories[categoryId] || '';\n      video.category = category;\n      return video;\n    });\n    this.setState({ trending, loading: false });\n  }\n\n  async updateVideoCategory(event: any) {\n    const { value: categoryId } = event.target;\n    await this.setState({ categoryId });\n    await this.getYouTubeTrending(categoryId);\n  }\n\n  render() {\n    const { trending = [], loading = false, categoryId = '', categories = [] } = this.state;\n\n    const rowConfigs = [\n      { header: 'URL', key: 'url' },\n      { header: 'Title', key: 'title' },\n      { header: 'Category', key: 'category' }\n    ];\n\n    return (\n      <div id=\"YouTubeTrending\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"ha-noi\"\n                  value={categoryId}\n                  onChange={this.updateVideoCategory}>\n                  {categories.map((category, index) => {\n                    return (\n                      <option key={index} value={category.id}>\n                        {category.title}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Trending'}\n              rows={trending}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IYouTubeVideoCategoriesProps {}\n\ninterface IYouTubeVideoCategoriesState {\n  categories: Array<any>;\n  loading: boolean;\n}\n\nexport default class YouTubeVideoCategories extends Component<\n  IYouTubeVideoCategoriesProps,\n  IYouTubeVideoCategoriesState\n> {\n  constructor(props: IYouTubeVideoCategoriesProps) {\n    super(props);\n\n    this.state = { categories: [], loading: true };\n\n    this.getYouTubeVideoCategories = this.getYouTubeVideoCategories.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getYouTubeVideoCategories();\n  }\n\n  async getYouTubeVideoCategories() {\n    this.setState({ loading: true });\n    const categories: Array<any> = await apis.getYouTubeVideoCategories();\n    this.setState({ categories, loading: false });\n  }\n\n  render() {\n    const { categories = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'ID', key: 'id' },\n      { header: 'Title', key: 'title' },\n      { header: 'Assignable', key: 'assignable' },\n      { header: 'Channel ID', key: 'channelId' }\n    ];\n\n    return (\n      <div id=\"YouTubeVideoCategories\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Video Categories'}\n              rows={categories}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IEthnicMinoritiesListProps {}\n\ninterface IEthnicMinoritiesListState {\n  query: string;\n  ethnicMinorities: Array<any>;\n  filterEthnicMinorities: Array<any>;\n  loading: boolean;\n}\n\nexport default class EthnicMinoritiesList extends Component<\n  IEthnicMinoritiesListProps,\n  IEthnicMinoritiesListState\n> {\n  constructor(props: IEthnicMinoritiesListProps) {\n    super(props);\n\n    this.state = {\n      query: '',\n      ethnicMinorities: [],\n      filterEthnicMinorities: [],\n      loading: true\n    };\n\n    this.getEthnicMinorities = this.getEthnicMinorities.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getEthnicMinorities();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { ethnicMinorities = [] } = this.state;\n    const filterEthnicMinorities = ethnicMinorities.filter(ethnicMinority => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ filterEthnicMinorities });\n  }\n\n  async getEthnicMinorities() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const ethnicMinorities = await apis.getEthnicMinorities();\n    const filterEthnicMinorities = ethnicMinorities.filter((ethnicMinority: any) => {\n      const { type, type_en } = ethnicMinority;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeEnFlag = query ? type_en.toLowerCase().includes(query.toLowerCase()) : true;\n      return typeFlag || typeEnFlag;\n    });\n    this.setState({ ethnicMinorities, filterEthnicMinorities, loading: false });\n  }\n\n  render() {\n    const { filterEthnicMinorities = [], loading = true } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Type', key: 'type' },\n      { header: 'Type (EN)', key: 'type_en' }\n    ];\n\n    return (\n      <div id=\"EthnicMinoritiesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ethnic Minorities'}\n              rows={filterEthnicMinorities}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentGeneralSecretariesProps {}\n\ninterface IGovernmentGeneralSecretariesState {\n  generalSecretaries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentGeneralSecretaries extends Component<\n  IGovernmentGeneralSecretariesProps,\n  IGovernmentGeneralSecretariesState\n> {\n  constructor(props: IGovernmentGeneralSecretariesProps) {\n    super(props);\n\n    this.state = { generalSecretaries: [], loading: true };\n\n    this.getGeneralSecretaries = this.getGeneralSecretaries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGeneralSecretaries();\n  }\n\n  async getGeneralSecretaries() {\n    this.setState({ loading: true });\n    const generalSecretaries = await apis.getGeneralSecretaries();\n    this.setState({ generalSecretaries, loading: false });\n  }\n\n  render() {\n    const { generalSecretaries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentGeneralSecretaries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'General Secretaries'}\n              rows={generalSecretaries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistersProps {}\n\ninterface IGovernmentMinistersState {\n  ministry: string;\n  ministries: Array<any>;\n  ministers: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinisters extends Component<\n  IGovernmentMinistersProps,\n  IGovernmentMinistersState\n> {\n  constructor(props: IGovernmentMinistersProps) {\n    super(props);\n\n    this.state = { ministry: '', ministries: [], ministers: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n    this.getMinisters = this.getMinisters.bind(this);\n    this.updateMinistry = this.updateMinistry.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n    await this.getMinisters();\n  }\n\n  async getMinistries() {\n    const ministries = await apis.getMinistries();\n    const { short: ministry = '' } = ministries[0];\n    this.setState({ ministry, ministries });\n  }\n\n  async getMinisters() {\n    const { ministry } = this.state;\n    this.setState({ loading: true });\n    const ministers = await apis.getMinisters(ministry);\n    this.setState({ ministers, loading: false });\n  }\n\n  async updateMinistry(event: any) {\n    const { value: ministry } = event.target;\n    await this.setState({ ministry });\n    await this.getMinisters();\n  }\n\n  render() {\n    const { ministers = [], ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.ministry}\n                  onChange={this.updateMinistry}>\n                  {ministries.map((ministry, index) => {\n                    const { short, name } = ministry;\n                    return (\n                      <option key={index} value={short}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'Ministers'}\n              rows={ministers}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentMinistriesProps {}\n\ninterface IGovernmentMinistriesState {\n  ministries: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentMinistries extends Component<\n  IGovernmentMinistriesProps,\n  IGovernmentMinistriesState\n> {\n  constructor(props: IGovernmentMinistriesProps) {\n    super(props);\n\n    this.state = { ministries: [], loading: true };\n\n    this.getMinistries = this.getMinistries.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMinistries();\n  }\n\n  async getMinistries() {\n    this.setState({ loading: true });\n    const ministries = await apis.getMinistries();\n    this.setState({ ministries, loading: false });\n  }\n\n  render() {\n    const { ministries = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Level', key: 'level' },\n      { header: 'Level (EN)', key: 'level_en' },\n      { header: 'Name', key: 'name' },\n      { header: 'Name (EN)', key: 'name_en' }\n    ];\n    return (\n      <div id=\"GovernmentMinistries\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Ministries'}\n              rows={ministries}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyChairsProps {}\n\ninterface IGovernmentNationalAssemblyChairsState {\n  loading: boolean;\n  chairs: Array<any>;\n}\n\nexport default class GovernmentNationalAssemblyChairs extends Component<\n  IGovernmentNationalAssemblyChairsProps,\n  IGovernmentNationalAssemblyChairsState\n> {\n  constructor(props: IGovernmentNationalAssemblyChairsProps) {\n    super(props);\n\n    this.state = { chairs: [], loading: true };\n\n    this.getNationalAssemblyChairs = this.getNationalAssemblyChairs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyChairs();\n  }\n\n  async getNationalAssemblyChairs() {\n    this.setState({ loading: true });\n    const chairs = await apis.getNationalAssemblyChairs();\n    this.setState({ chairs, loading: false });\n  }\n\n  render() {\n    const { chairs = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentNationalAssemblyChairs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            {' '}\n            <Table\n              loading={loading}\n              caption={'National Assembly Chairs'}\n              rows={chairs}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IGovernmentNationalAssemblyMembersProps {}\n\ninterface IGovernmentNationalAssemblyMembersState {\n  loading: boolean;\n  members: Array<any>;\n  no: number;\n}\nexport default class GovernmentNationalAssemblyMembers extends Component<\n  IGovernmentNationalAssemblyMembersProps,\n  IGovernmentNationalAssemblyMembersState\n> {\n  constructor(props: IGovernmentNationalAssemblyMembersProps) {\n    super(props);\n\n    this.state = { members: [], no: 14, loading: true };\n\n    this.getNationalAssemblyMembers = this.getNationalAssemblyMembers.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getNationalAssemblyMembers();\n  }\n\n  async getNationalAssemblyMembers() {\n    const { no } = this.state;\n    this.setState({ loading: true });\n    const members = await apis.getNationalAssemblyMembers(no);\n    this.setState({ members, loading: false });\n  }\n\n  render() {\n    const { members = [], loading = false } = this.state;\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n    return (\n      <div id=\"GovernmentNationalAssemblyMembers\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Members'}\n              rows={members}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPresidentsProps {}\n\ninterface IGovernmentPresidentsState {\n  presidents: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPresidents extends Component<\n  IGovernmentPresidentsProps,\n  IGovernmentPresidentsState\n> {\n  constructor(props: IGovernmentPresidentsProps) {\n    super(props);\n\n    this.state = { presidents: [], loading: true };\n\n    this.getPresidents = this.getPresidents.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPresidents();\n  }\n\n  async getPresidents() {\n    this.setState({ loading: true });\n    const presidents = await apis.getPresidents();\n    this.setState({ presidents, loading: false });\n  }\n\n  render() {\n    const { presidents = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPresidents\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Presidents'}\n              rows={presidents}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface IGovernmentPrimeMinistersProps {}\n\ninterface IGovernmentPrimeMinistersState {\n  primeMinisters: Array<any>;\n  loading: boolean;\n}\n\nexport default class GovernmentPrimeMinisters extends Component<\n  IGovernmentPrimeMinistersProps,\n  IGovernmentPrimeMinistersState\n> {\n  constructor(props: IGovernmentPrimeMinistersProps) {\n    super(props);\n\n    this.state = { primeMinisters: [], loading: true };\n\n    this.getPrimeMinisters = this.getPrimeMinisters.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getPrimeMinisters();\n  }\n\n  async getPrimeMinisters() {\n    this.setState({ loading: true });\n    const primeMinisters = await apis.getPrimeMinisters();\n    this.setState({ primeMinisters, loading: false });\n  }\n\n  render() {\n    const { primeMinisters = [], loading = false } = this.state;\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Start', key: 'start_date' },\n      { header: 'End', key: 'end_date' }\n    ];\n    return (\n      <div id=\"GovernmentPrimeMinisters\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Prime Ministers'}\n              rows={primeMinisters}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IHistoryDynastiesProps {}\n\ninterface IHistoryDynastiesState {\n  dynasties: Array<any>;\n  loading: boolean;\n}\n\nexport default class HistoryDynasties extends Component<\n  IHistoryDynastiesProps,\n  IHistoryDynastiesState\n> {\n  constructor(props: IHistoryDynastiesProps) {\n    super(props);\n\n    this.state = { dynasties: [], loading: true };\n\n    this.getHistoryDynasties = this.getHistoryDynasties.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getHistoryDynasties();\n  }\n\n  async getHistoryDynasties() {\n    this.setState({ loading: true });\n    const dynasties: Array<any> = await apis.getDynasties();\n    this.setState({ dynasties, loading: false });\n  }\n\n  render() {\n    const { dynasties = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Temple Name', key: 'temple_name' },\n      { header: 'Birth Name', key: 'birth_name' },\n      { header: 'Start', key: 'start_year' },\n      { header: 'End', key: 'end_year' },\n      { header: 'Dynasty', key: 'dynasty' }\n    ];\n\n    return (\n      <div id=\"HistoryDynasties\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Dynasties'}\n              rows={dynasties}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import {\n  // Administrative Divisions\n  AdministrativeDivisions,\n  AdministrativeDivisionsPostalCodes,\n  AdministrativeDivisionsProvinces,\n  AdministrativeDivisionsDistricts,\n  AdministrativeDivisionsWards,\n  // Banks\n  Banks,\n  BanksForex,\n  BanksHistory,\n  BanksList,\n  // Calendar\n  Calendar,\n  CalendarConverter,\n  // Docs\n  Docs,\n  // Ethnic Minorities\n  EthnicMinorities,\n  EthnicMinoritiesList,\n  // Finance\n  Finance,\n  FinanceCompanies,\n  FinanceHighlights,\n  FinanceHistory,\n  FinancePotentials,\n  FinanceProfit,\n  // Government\n  Government,\n  GovernmentGeneralSecretaries,\n  GovernmentPresidents,\n  GovernmentPrimeMinisters,\n  GovernmentMinistries,\n  GovernmentMinisters,\n  GovernmentNationalAssemblyChairs,\n  GovernmentNationalAssemblyMembers,\n  // History\n  History,\n  HistoryDynasties,\n  Home,\n  // LicensePlates\n  LicensePlates,\n  LicensePlatesList,\n  // Music\n  Music,\n  MusicArtists,\n  // News\n  News,\n  NewsFeed,\n  NewsSources,\n  NewsTrends,\n  // Open APIs\n  OpenAPIs,\n  OpenAPIsList,\n  GHNProvinces,\n  GHNDistricts,\n  GHNWards,\n  Vietcetera,\n  // Phones\n  Phones,\n  PhonesPrefixes,\n  PhonesProviders,\n  // Sports\n  Sports,\n  SportsClubs,\n  // Weather\n  Weather,\n  WeatherCurrent,\n  YouTube,\n  YouTubeTrending,\n  YouTubeVideoCategories\n} from '../pages';\n\nconst routes = [\n  {\n    path: '',\n    text: '',\n    component: Home,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions',\n    text: 'Administrative Divisions',\n    component: AdministrativeDivisions,\n    navigation: true\n  },\n  {\n    path: 'administrative-divisions-postal-codes',\n    text: 'Administrative Divisions Postal Codes',\n    component: AdministrativeDivisionsPostalCodes,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-provinces',\n    text: 'Administrative Divisions Provinces',\n    component: AdministrativeDivisionsProvinces,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-districts',\n    text: 'Administrative Divisions Districts',\n    component: AdministrativeDivisionsDistricts,\n    navigation: false\n  },\n  {\n    path: 'administrative-divisions-wards',\n    text: 'Administrative Divisions Wards',\n    component: AdministrativeDivisionsWards,\n    navigation: false\n  },\n  {\n    path: 'banks',\n    text: 'Banks',\n    component: Banks,\n    navigation: true\n  },\n  {\n    path: 'banks-forex',\n    text: 'Banks Forex',\n    component: BanksForex,\n    navigation: false\n  },\n  {\n    path: 'banks-history',\n    text: 'Banks History',\n    component: BanksHistory,\n    navigation: false\n  },\n  {\n    path: 'banks-list',\n    text: 'Banks List',\n    component: BanksList,\n    navigation: false\n  },\n  {\n    path: 'calendar',\n    text: 'Calendar',\n    component: Calendar,\n    navigation: true\n  },\n  {\n    path: 'calendar-converter',\n    text: 'Calendar Converter',\n    component: CalendarConverter,\n    navigation: false\n  },\n  {\n    path: 'docs',\n    text: 'Docs',\n    component: Docs,\n    navigation: false\n  },\n  {\n    path: 'ethnic-minorities',\n    text: 'Ethnic Minorities',\n    component: EthnicMinorities,\n    navigation: true\n  },\n  {\n    path: 'ethnic-minorities-list',\n    text: 'Ethnic Minorities (List)',\n    component: EthnicMinoritiesList,\n    navigation: false\n  },\n  {\n    path: 'finance',\n    text: 'Finance',\n    component: Finance,\n    navigation: true\n  },\n  {\n    path: 'finance-companies',\n    text: 'Finance Companies',\n    component: FinanceCompanies,\n    navigation: false\n  },\n  {\n    path: 'finance-history',\n    text: 'Finance History',\n    component: FinanceHistory,\n    navigation: false\n  },\n  {\n    path: 'finance-highlights',\n    text: 'Finance Highlights',\n    component: FinanceHighlights,\n    navigation: false\n  },\n  {\n    path: 'finance-potentials',\n    text: 'Finance Potentials',\n    component: FinancePotentials,\n    navigation: false\n  },\n  {\n    path: 'finance-profit',\n    text: 'Finance Profit',\n    component: FinanceProfit,\n    navigation: false\n  },\n  {\n    path: 'history',\n    text: 'History',\n    component: History,\n    navigation: true\n  },\n  {\n    path: 'history-dynasties',\n    text: 'History-dynasties',\n    component: HistoryDynasties,\n    navigation: false\n  },\n  {\n    path: 'government',\n    text: 'Government',\n    component: Government,\n    navigation: true\n  },\n  {\n    path: 'government-general-secretaries',\n    text: 'Government General Secretaries',\n    component: GovernmentGeneralSecretaries,\n    navigation: false\n  },\n  {\n    path: 'government-presidents',\n    text: 'Government Presidents',\n    component: GovernmentPresidents,\n    navigation: false\n  },\n  {\n    path: 'government-prime-ministers',\n    text: 'Government Prime Ministers',\n    component: GovernmentPrimeMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-ministries',\n    text: 'Ministries',\n    component: GovernmentMinistries,\n    navigation: false\n  },\n  {\n    path: 'government-ministers',\n    text: 'Ministers',\n    component: GovernmentMinisters,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-chairs',\n    text: 'National Assembly Chairs',\n    component: GovernmentNationalAssemblyChairs,\n    navigation: false\n  },\n  {\n    path: 'government-national-assembly-members',\n    text: 'National Assembly Members',\n    component: GovernmentNationalAssemblyMembers,\n    navigation: false\n  },\n  {\n    path: 'license-plates',\n    text: 'License Plates',\n    component: LicensePlates,\n    navigation: true\n  },\n  {\n    path: 'license-plates-list',\n    text: 'License Plates (List)',\n    component: LicensePlatesList,\n    navigation: false\n  },\n  {\n    path: 'music',\n    text: 'Music',\n    component: Music,\n    navigation: true\n  },\n  {\n    path: 'music-artists',\n    text: 'Music Artists',\n    component: MusicArtists,\n    navigation: false\n  },\n  {\n    path: 'news',\n    text: 'News',\n    component: News,\n    navigation: true\n  },\n  {\n    path: 'news-feed',\n    text: 'News Feed',\n    component: NewsFeed,\n    navigation: false\n  },\n  {\n    path: 'news-sources',\n    text: 'News Sources',\n    component: NewsSources,\n    navigation: false\n  },\n  {\n    path: 'news-trends',\n    text: 'News Trends',\n    component: NewsTrends,\n    navigation: false\n  },\n  {\n    path: 'open-apis',\n    text: 'Open APIs',\n    component: OpenAPIs,\n    navigation: true\n  },\n  {\n    path: 'open-apis-list',\n    text: 'Open APIs List',\n    component: OpenAPIsList,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-provinces',\n    text: 'Open APIs GHN Provinces',\n    component: GHNProvinces,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-districts',\n    text: 'Open APIs GHN Districts',\n    component: GHNDistricts,\n    navigation: false\n  },\n  {\n    path: 'open-apis-ghn-wards',\n    text: 'Open APIs GHN Wards',\n    component: GHNWards,\n    navigation: false\n  },\n  {\n    path: 'open-apis-vietcetera',\n    text: 'Open APIs Vietcetera',\n    component: Vietcetera,\n    navigation: false\n  },\n  {\n    path: 'phones',\n    text: 'Phones',\n    component: Phones,\n    navigation: true\n  },\n  {\n    path: 'phones-prefixes',\n    text: 'Phones Prefixes',\n    component: PhonesPrefixes,\n    navigation: false\n  },\n  {\n    path: 'phones-providers',\n    text: 'Phones Providers',\n    component: PhonesProviders,\n    navigation: false\n  },\n  {\n    path: 'sports',\n    text: 'Sports',\n    component: Sports,\n    navigation: true\n  },\n  {\n    path: 'sports-clubs',\n    text: 'Sports Clubs',\n    component: SportsClubs,\n    navigation: false\n  },\n  {\n    path: 'weather',\n    text: 'Weather',\n    component: Weather,\n    navigation: true\n  },\n  {\n    path: 'weather-current',\n    text: 'Weather Current',\n    component: WeatherCurrent,\n    navigation: false\n  },\n  {\n    path: 'youtube',\n    text: 'YouTube',\n    component: YouTube,\n    navigation: true\n  },\n  {\n    path: 'youtube-trending',\n    text: 'YouTube Trending',\n    component: YouTubeTrending,\n    navigation: false\n  },\n  {\n    path: 'youtube-video-categories',\n    text: 'YouTube Video Categories',\n    component: YouTubeVideoCategories,\n    navigation: false\n  }\n];\n\nexport default routes;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Form } from 'react-bootstrap';\n\ninterface IHomeProps {}\n\ninterface IHomeState {\n  query: string;\n  apis: Array<any>;\n  filterAPIs: Array<any>;\n  externalPackages: Array<any>;\n  filterExternalPackages: Array<any>;\n}\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  constructor(props: IHomeProps) {\n    super(props);\n    const apis = [\n      {\n        name: 'administrative-divisions',\n        npm: 'vnapis#administrative-divisions',\n        docs: '/administrative-divisions'\n      },\n      {\n        name: 'banks',\n        npm: 'vietnambanks',\n        docs: '/banks'\n      },\n      {\n        name: 'calendar',\n        npm: 'vnapis#calendar',\n        docs: '/calendar'\n      },\n      {\n        name: 'ethnic-minorities',\n        npm: 'vnapis#ethnic-minorities',\n        docs: '/ethnic-minorities'\n      },\n      {\n        name: 'finance',\n        npm: 'vnapis#finance',\n        docs: '/finance'\n      },\n      {\n        name: 'government',\n        npm: 'vnapis#government',\n        docs: '/government'\n      },\n      {\n        name: 'license-plates',\n        npm: 'vnapis#license-plates',\n        docs: '/license-plates'\n      },\n      {\n        name: 'music',\n        npm: 'vnapis#music',\n        docs: '/music'\n      },\n      {\n        name: 'news',\n        npm: 'vietnamnews',\n        docs: '/news'\n      },\n      {\n        name: 'open-apis',\n        npm: '',\n        docs: '/open-apis'\n      },\n      {\n        name: 'phones',\n        npm: 'vnapis#phones',\n        docs: '/phones'\n      },\n      {\n        name: 'sports',\n        npm: 'vnapis#sports',\n        docs: '/sports'\n      },\n      { name: 'vnltk', npm: 'vnapis#vnltk', docs: '/vnltk' }\n    ].sort((a, b) => (a.name > b.name ? 1 : -1));\n\n    this.state = {\n      query: '',\n      apis,\n      filterAPIs: apis,\n      externalPackages: [],\n      filterExternalPackages: []\n    };\n\n    this.filterPackages = this.filterPackages.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  async updateQuery(event: any) {\n    const { value = '' } = event.target;\n    await this.setState({ query: value });\n    const { query = '', apis = [], externalPackages = [] } = this.state;\n    const filterAPIs = this.filterPackages(apis, query);\n    const filterExternalPackages = this.filterPackages(externalPackages, query);\n    await this.setState({ filterAPIs, filterExternalPackages });\n  }\n\n  filterPackages(packages: Array<any> = [], query: string = '') {\n    return packages.filter(_package => {\n      const { name = '' } = _package;\n      return query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n  }\n\n  renderTable(title: string, packages: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        <div className=\"table-responsive table-container\">\n          <table className=\"table\">\n            <caption className=\"text-white text-center bg-danger\">\n              {title} ({packages.length})\n            </caption>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Package</th>\n                <th>Docs</th>\n              </tr>\n            </thead>\n            <tbody>\n              {packages.length !== 0 &&\n                packages.map((_package, index) => {\n                  const { name = '', npm = '', docs = '' } = _package;\n                  return (\n                    <tr key={index}>\n                      <td>{name}</td>\n                      <td>\n                        {npm && (\n                          <a\n                            href={`https://www.npmjs.com/package/${npm}`}\n                            rel=\"noreferrer\"\n                            target=\"_blank\">\n                            npm\n                          </a>\n                        )}\n                      </td>\n                      <td>\n                        {docs && (\n                          <Link className=\"ml-1\" to={docs}>\n                            Docs\n                          </Link>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filterAPIs = [] } = this.state;\n    return (\n      <div id=\"Home\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Query\"\n                value={this.state.query}\n                onChange={this.updateQuery}></Form.Control>\n            </Form>\n            {this.renderTable('APIs', filterAPIs)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\nimport { Table } from '../../../components';\n\ninterface LicensePlatesListProps {}\n\ninterface LicensePlatesListState {\n  query: string;\n  licensePlates: Array<any>;\n  filterLicensePlates: Array<any>;\n  loading: boolean;\n}\n\nexport default class LicensePlatesList extends Component<\n  LicensePlatesListProps,\n  LicensePlatesListState\n> {\n  constructor(props: LicensePlatesListProps) {\n    super(props);\n\n    this.state = { query: '', licensePlates: [], filterLicensePlates: [], loading: true };\n\n    this.getLicensePlates = this.getLicensePlates.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getLicensePlates();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { licensePlates = [] } = this.state;\n    const filterLicensePlates = licensePlates.filter(licensePlate => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ filterLicensePlates });\n  }\n\n  async getLicensePlates() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const licensePlates = await apis.getLicensePlates();\n    const filterLicensePlates = licensePlates.filter((licensePlate: any) => {\n      const { license } = licensePlate;\n      return query ? license.toLowerCase().includes(query.toLowerCase()) : true;\n    });\n    this.setState({ licensePlates, filterLicensePlates, loading: false });\n  }\n\n  render() {\n    const { filterLicensePlates = [], loading = true } = this.state;\n    const rowConfigs = [\n      { header: 'License', key: 'license' },\n      { header: 'Definition', key: 'definition' },\n      { header: 'Type', key: 'type' }\n    ];\n    return (\n      <div id=\"LicensePlatesList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"License\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            <Table\n              loading={loading}\n              caption={'License Plates'}\n              rows={filterLicensePlates}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface IMusicArtistsProps {}\n\ninterface IMusicArtistsState {\n  artists: Array<any>;\n  loading: boolean;\n}\n\nexport default class MusicArtists extends Component<IMusicArtistsProps, IMusicArtistsState> {\n  constructor(props: IMusicArtistsProps) {\n    super(props);\n\n    this.state = { artists: [], loading: true };\n\n    this.getMusicArtists = this.getMusicArtists.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getMusicArtists();\n  }\n\n  async getMusicArtists() {\n    this.setState({ loading: true });\n    const artists: Array<any> = await apis.getMusicArtists();\n    this.setState({ artists, loading: false });\n  }\n\n  render() {\n    const { artists = [], loading = false } = this.state;\n\n    const rowConfigs = [{ header: 'Name', key: 'name' }];\n\n    return (\n      <div id=\"MusicArtists\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table\n              loading={loading}\n              caption={'Artists'}\n              rows={artists}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Form, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IOpenAPIsListProps {}\n\ninterface IOpenAPIsListState {\n  query: string;\n  technologies: Array<any>;\n  filterTechnologies: Array<any>;\n  loading: boolean;\n}\n\nexport default class OpenAPIsList extends Component<IOpenAPIsListProps, IOpenAPIsListState> {\n  constructor(props: IOpenAPIsListProps) {\n    super(props);\n\n    this.state = { query: '', technologies: [], filterTechnologies: [], loading: true };\n\n    this.getOpenAPIs = this.getOpenAPIs.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getOpenAPIs();\n  }\n\n  filter(event: any) {\n    const { value: query = '' } = event.target;\n    this.setState({ query });\n    const { technologies = [] } = this.state;\n    const filterTechnologies = technologies.filter(technology => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ filterTechnologies });\n  }\n\n  async getOpenAPIs() {\n    this.setState({ loading: true });\n    const { query = '' } = this.state;\n    const technologies = await apis.getOpenAPIs();\n    const filterTechnologies = technologies.filter((technology: any) => {\n      const { name, type } = technology;\n      const nameFlag = query ? name.toLowerCase().includes(query.toLowerCase()) : true;\n      const typeFlag = query ? type.toLowerCase().includes(query.toLowerCase()) : true;\n      return nameFlag || typeFlag;\n    });\n    this.setState({ technologies, filterTechnologies, loading: false });\n  }\n\n  renderTable(loading: boolean, filterTechnologies: Array<any> = []) {\n    return (\n      <div id=\"table\">\n        {loading && (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n          </div>\n        )}\n        {!loading && (\n          <div className=\"table-responsive table-container\">\n            <table className=\"table\">\n              <caption className=\"text-center bg-danger text-white\">\n                Open APIs ({filterTechnologies.length})\n              </caption>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Package</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filterTechnologies.length\n                  ? filterTechnologies.map((ethnicMinority, index) => {\n                      const { name = '', type = '', url = '', npm = '' } = ethnicMinority;\n                      return (\n                        <tr key={index}>\n                          <td>\n                            <a href={url} rel=\"noreferrer\" target=\"_blank\">\n                              {name}\n                            </a>\n                          </td>\n                          <td>{type}</td>\n                          <td>\n                            {npm && (\n                              <a\n                                href={`https://www.npmjs.com/package/${npm}`}\n                                rel=\"noreferrer\"\n                                target=\"_blank\">\n                                npm\n                              </a>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })\n                  : ''}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { filterTechnologies = [], loading = true } = this.state;\n\n    return (\n      <div id=\"OpenAPIsList\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Form className=\"mt-3 mb-3 w-100\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Type\"\n                value={this.state.query}\n                onChange={this.filter}></Form.Control>\n            </Form>\n            {this.renderTable(loading, filterTechnologies)}\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IProvincesProps {}\n\ninterface IProvincesState {\n  provinces: Array<any>;\n  loading: boolean;\n}\n\nexport default class Provinces extends Component<IProvincesProps, IProvincesState> {\n  constructor(props: IProvincesProps) {\n    super(props);\n\n    this.state = { provinces: [], loading: true };\n\n    this.getGHNProvinces = this.getGHNProvinces.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNProvinces();\n  }\n\n  async getGHNProvinces() {\n    this.setState({ loading: true });\n    const provinces = await apis.getGHNProvinces();\n    this.setState({ provinces, loading: false });\n  }\n\n  render() {\n    const { provinces, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Name', key: 'name' },\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Provinces\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Provinces</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Provinces'}\n              rows={provinces}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IDistrictsProps {}\n\ninterface IDistrictsState {\n  districts: Array<any>;\n  loading: boolean;\n}\n\nexport default class Districts extends Component<IDistrictsProps, IDistrictsState> {\n  constructor(props: IDistrictsProps) {\n    super(props);\n\n    this.state = { districts: [], loading: true };\n\n    this.getGHNDistricts = this.getGHNDistricts.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNDistricts();\n  }\n\n  async getGHNDistricts() {\n    this.setState({ loading: true });\n    const districts = await apis.getGHNDistricts();\n    this.setState({ districts, loading: false });\n  }\n\n  render() {\n    const { districts, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'Province ID', key: 'province_id' },\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' },\n      { header: 'Type', key: 'type' },\n      { header: 'Support Type', key: 'support_type' }\n    ];\n\n    return (\n      <div id=\"Districts\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Districts</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table\n              loading={loading}\n              caption={'Districts'}\n              rows={districts}\n              rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../../services';\nimport { Table } from '../../../../components';\n\ninterface IWardsProps {}\n\ninterface IWardsState {\n  wards: Array<any>;\n  loading: boolean;\n}\n\nexport default class Wards extends Component<IWardsProps, IWardsState> {\n  constructor(props: IWardsProps) {\n    super(props);\n\n    this.state = { wards: [], loading: true };\n\n    this.getGHNWards = this.getGHNWards.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGHNWards();\n  }\n\n  async getGHNWards() {\n    this.setState({ loading: true });\n    const wards = await apis.getGHNWards();\n    this.setState({ wards, loading: false });\n  }\n\n  render() {\n    const { wards, loading } = this.state;\n\n    const rowConfigs = [\n      { header: 'District ID', key: 'district_id' },\n      { header: 'Name', key: 'name' },\n      { header: 'Code', key: 'code' }\n    ];\n\n    return (\n      <div id=\"Wards\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center mb-3\">GHN Wards</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a\n                href={`https://www.npmjs.com/package/giaohangnhanh`}\n                rel=\"noreferrer\"\n                target=\"_blank\">\n                npm\n              </a>\n            </Card.Subtitle>\n            <Table loading={loading} caption={'Wards'} rows={wards} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Card, ListGroup, Spinner } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IVietceteraProps {}\n\ninterface IVietceteraState {\n  articles: Array<any>;\n  loading: boolean;\n  type: string;\n}\n\nexport default class Vietcetera extends Component<IVietceteraProps, IVietceteraState> {\n  constructor(props: IVietceteraProps) {\n    super(props);\n\n    this.state = { articles: [], loading: false, type: '' };\n\n    this.getArticles = this.getArticles.bind(this);\n  }\n\n  async componentDidMount() {\n    const type = 'latest';\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  async getArticles(event: any) {\n    const { value: type = '' } = event.target;\n    await this.setState({ loading: true });\n    const articles = await apis.getVietceteraArticles(type);\n    await this.setState({ articles, loading: false });\n  }\n\n  render() {\n    const { articles = [], loading } = this.state;\n\n    const options = [\n      {\n        value: 'latest',\n        text: 'Latest'\n      },\n      {\n        value: 'popular',\n        text: 'Popular'\n      },\n      {\n        value: 'editor-pick',\n        text: 'Editor Pick'\n      }\n    ];\n    return (\n      <div id=\"Vietcetera\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Card.Title className=\"text-center\">Vietcetera ({articles.length})</Card.Title>\n            <Card.Subtitle className=\"text-center mb-3\">\n              <a href={`https://www.npmjs.com/package/vietcetera`} rel=\"noreferrer\" target=\"_blank\">\n                vietcetera\n              </a>\n            </Card.Subtitle>\n            <Form className=\"mt-3 w-100\">\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  defaultValue=\"latest\"\n                  value={this.state.type}\n                  onChange={this.getArticles}>\n                  {options.map((option, index) => {\n                    const { text, value } = option;\n                    return (\n                      <option key={index} value={value}>\n                        {text}\n                      </option>\n                    );\n                  })}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n            <ListGroup className=\"mt-3\">\n              {loading && (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" variant=\"danger\"></Spinner>\n                </div>\n              )}\n              {!loading &&\n                articles.length !== 0 &&\n                articles.map((article, index) => {\n                  const { title = '', url = '', publishDate = '', description = '' } = article;\n                  return (\n                    <ListGroup.Item key={index}>\n                      <Card.Title>\n                        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                          {title}\n                        </a>\n                      </Card.Title>\n                      <Card.Subtitle className=\"small text-muted mb-1\">{publishDate}</Card.Subtitle>\n                      <Card.Text>{description}</Card.Text>\n                    </ListGroup.Item>\n                  );\n                })}\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { Table } from '../../../components';\nimport { apis } from '../../../services';\n\ninterface ISportsClubsProps {}\n\ninterface ISportsClubsState {\n  clubs: Array<any>;\n  loading: boolean;\n}\n\nexport default class SportsClubs extends Component<ISportsClubsProps, ISportsClubsState> {\n  constructor(props: ISportsClubsProps) {\n    super(props);\n\n    this.state = { clubs: [], loading: true };\n\n    this.getSportsClubs = this.getSportsClubs.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getSportsClubs();\n  }\n\n  async getSportsClubs() {\n    this.setState({ loading: true });\n    const clubs: Array<any> = await apis.getSportsClubs();\n    this.setState({ clubs, loading: false });\n  }\n\n  render() {\n    const { clubs = [], loading = false } = this.state;\n\n    const rowConfigs = [\n      { header: 'Sport', key: 'sport' },\n      { header: 'Competition', key: 'competition' },\n      { header: 'City', key: 'city' },\n      { header: 'Name', key: 'name' }\n    ];\n\n    return (\n      <div id=\"SportsClubs\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <Table loading={loading} caption={'Clubs'} rows={clubs} rowConfigs={rowConfigs}></Table>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport { apis } from '../../../services';\n\ninterface IWeatherCurrentProps {}\n\ninterface IWeatherCurrentState {\n  result: any;\n  loading: boolean;\n}\n\nexport default class WeatherCurrent extends Component<IWeatherCurrentProps, IWeatherCurrentState> {\n  constructor(props: IWeatherCurrentProps) {\n    super(props);\n\n    this.state = { result: {}, loading: true };\n\n    this.getWeatherCurrent = this.getWeatherCurrent.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getWeatherCurrent();\n  }\n\n  async getWeatherCurrent() {\n    this.setState({ loading: true });\n    const result: Array<any> = await apis.getCurrentWeather('hanoi');\n    this.setState({ result, loading: false });\n  }\n\n  render() {\n    const { result = {} } = this.state;\n\n    const { main = {}, weather = [] } = result;\n    const [first = {}] = weather;\n    const { description = '' } = first;\n    const { temp = 0, feels_like = 0, temp_min = 0, temp_max = 0 } = main;\n\n    return (\n      <div id=\"WeatherCurrent\" className=\"container\">\n        <Card className=\"shadow mt-3 mb-5\">\n          <Card.Body>\n            <div className=\"mb-3\">\n              <p className=\"m-0 text-center\">{description.toUpperCase()}</p>\n              <h1 className=\"text-center\">{temp}&deg;C</h1>\n              <p className=\"m-0 text-center\">Feels Like: {feels_like}&deg;C</p>\n              <p className=\"m-0 text-center\">\n                Min: {temp_min}&deg;C - Max: {temp_max}&deg;C\n              </p>\n            </div>\n            <div className=\"p-3 bg-dark rounded\">\n              <pre className=\"m-0 text-white\">{JSON.stringify(result, null, 2)}</pre>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport routes from './routers';\nimport { Footer, Navigation } from './components';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <HashRouter basename=\"/\">\n          <Navigation></Navigation>\n          <div className=\"pt-3 pb-5\">\n            {routes.map((route, index) => {\n              const { path, component } = route;\n              return <Route key={index} path={`/${path}`} component={component} exact></Route>;\n            })}\n          </div>\n          <Footer></Footer>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}